// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/resources/media_file.proto

package resources

import (
	enums "google.golang.org/genproto/googleapis/ads/googleads/v20/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A media file.
type MediaFile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Immutable. The resource name of the media file.
	// Media file resource names have the form:
	//
	// `customers/{customer_id}/mediaFiles/{media_file_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Output only. The ID of the media file.
	Id *int64 `protobuf:"varint,12,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Immutable. Type of the media file.
	Type enums.MediaTypeEnum_MediaType `protobuf:"varint,5,opt,name=type,proto3,enum=google.ads.googleads.v20.enums.MediaTypeEnum_MediaType" json:"type,omitempty"`
	// Output only. The mime type of the media file.
	MimeType enums.MimeTypeEnum_MimeType `protobuf:"varint,6,opt,name=mime_type,json=mimeType,proto3,enum=google.ads.googleads.v20.enums.MimeTypeEnum_MimeType" json:"mime_type,omitempty"`
	// Immutable. The URL of where the original media file was downloaded from (or
	// a file name). Only used for media of type AUDIO and IMAGE.
	SourceUrl *string `protobuf:"bytes,13,opt,name=source_url,json=sourceUrl,proto3,oneof" json:"source_url,omitempty"`
	// Immutable. The name of the media file. The name can be used by clients to
	// help identify previously uploaded media.
	Name *string `protobuf:"bytes,14,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Output only. The size of the media file in bytes.
	FileSize *int64 `protobuf:"varint,15,opt,name=file_size,json=fileSize,proto3,oneof" json:"file_size,omitempty"`
	// The specific type of the media file.
	//
	// Types that are valid to be assigned to Mediatype:
	//
	//	*MediaFile_Image
	//	*MediaFile_MediaBundle
	//	*MediaFile_Audio
	//	*MediaFile_Video
	Mediatype     isMediaFile_Mediatype `protobuf_oneof:"mediatype"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaFile) Reset() {
	*x = MediaFile{}
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaFile) ProtoMessage() {}

func (x *MediaFile) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaFile.ProtoReflect.Descriptor instead.
func (*MediaFile) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_resources_media_file_proto_rawDescGZIP(), []int{0}
}

func (x *MediaFile) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *MediaFile) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *MediaFile) GetType() enums.MediaTypeEnum_MediaType {
	if x != nil {
		return x.Type
	}
	return enums.MediaTypeEnum_MediaType(0)
}

func (x *MediaFile) GetMimeType() enums.MimeTypeEnum_MimeType {
	if x != nil {
		return x.MimeType
	}
	return enums.MimeTypeEnum_MimeType(0)
}

func (x *MediaFile) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *MediaFile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MediaFile) GetFileSize() int64 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *MediaFile) GetMediatype() isMediaFile_Mediatype {
	if x != nil {
		return x.Mediatype
	}
	return nil
}

func (x *MediaFile) GetImage() *MediaImage {
	if x != nil {
		if x, ok := x.Mediatype.(*MediaFile_Image); ok {
			return x.Image
		}
	}
	return nil
}

func (x *MediaFile) GetMediaBundle() *MediaBundle {
	if x != nil {
		if x, ok := x.Mediatype.(*MediaFile_MediaBundle); ok {
			return x.MediaBundle
		}
	}
	return nil
}

func (x *MediaFile) GetAudio() *MediaAudio {
	if x != nil {
		if x, ok := x.Mediatype.(*MediaFile_Audio); ok {
			return x.Audio
		}
	}
	return nil
}

func (x *MediaFile) GetVideo() *MediaVideo {
	if x != nil {
		if x, ok := x.Mediatype.(*MediaFile_Video); ok {
			return x.Video
		}
	}
	return nil
}

type isMediaFile_Mediatype interface {
	isMediaFile_Mediatype()
}

type MediaFile_Image struct {
	// Immutable. Encapsulates an Image.
	Image *MediaImage `protobuf:"bytes,3,opt,name=image,proto3,oneof"`
}

type MediaFile_MediaBundle struct {
	// Immutable. A ZIP archive media the content of which contains HTML5
	// assets.
	MediaBundle *MediaBundle `protobuf:"bytes,4,opt,name=media_bundle,json=mediaBundle,proto3,oneof"`
}

type MediaFile_Audio struct {
	// Output only. Encapsulates an Audio.
	Audio *MediaAudio `protobuf:"bytes,10,opt,name=audio,proto3,oneof"`
}

type MediaFile_Video struct {
	// Immutable. Encapsulates a Video.
	Video *MediaVideo `protobuf:"bytes,11,opt,name=video,proto3,oneof"`
}

func (*MediaFile_Image) isMediaFile_Mediatype() {}

func (*MediaFile_MediaBundle) isMediaFile_Mediatype() {}

func (*MediaFile_Audio) isMediaFile_Mediatype() {}

func (*MediaFile_Video) isMediaFile_Mediatype() {}

// Encapsulates an Image.
type MediaImage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Immutable. Raw image data.
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3,oneof" json:"data,omitempty"`
	// Output only. The url to the full size version of the image.
	FullSizeImageUrl *string `protobuf:"bytes,2,opt,name=full_size_image_url,json=fullSizeImageUrl,proto3,oneof" json:"full_size_image_url,omitempty"`
	// Output only. The url to the preview size version of the image.
	PreviewSizeImageUrl *string `protobuf:"bytes,3,opt,name=preview_size_image_url,json=previewSizeImageUrl,proto3,oneof" json:"preview_size_image_url,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MediaImage) Reset() {
	*x = MediaImage{}
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaImage) ProtoMessage() {}

func (x *MediaImage) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaImage.ProtoReflect.Descriptor instead.
func (*MediaImage) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_resources_media_file_proto_rawDescGZIP(), []int{1}
}

func (x *MediaImage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MediaImage) GetFullSizeImageUrl() string {
	if x != nil && x.FullSizeImageUrl != nil {
		return *x.FullSizeImageUrl
	}
	return ""
}

func (x *MediaImage) GetPreviewSizeImageUrl() string {
	if x != nil && x.PreviewSizeImageUrl != nil {
		return *x.PreviewSizeImageUrl
	}
	return ""
}

// Represents a ZIP archive media the content of which contains HTML5 assets.
type MediaBundle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Immutable. Raw zipped data.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
	// Output only. The url to access the uploaded zipped data.
	// For example, https://tpc.googlesyndication.com/simgad/123
	// This field is read-only.
	Url           *string `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaBundle) Reset() {
	*x = MediaBundle{}
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaBundle) ProtoMessage() {}

func (x *MediaBundle) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaBundle.ProtoReflect.Descriptor instead.
func (*MediaBundle) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_resources_media_file_proto_rawDescGZIP(), []int{2}
}

func (x *MediaBundle) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MediaBundle) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

// Encapsulates an Audio.
type MediaAudio struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The duration of the Audio in milliseconds.
	AdDurationMillis *int64 `protobuf:"varint,2,opt,name=ad_duration_millis,json=adDurationMillis,proto3,oneof" json:"ad_duration_millis,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MediaAudio) Reset() {
	*x = MediaAudio{}
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaAudio) ProtoMessage() {}

func (x *MediaAudio) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaAudio.ProtoReflect.Descriptor instead.
func (*MediaAudio) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_resources_media_file_proto_rawDescGZIP(), []int{3}
}

func (x *MediaAudio) GetAdDurationMillis() int64 {
	if x != nil && x.AdDurationMillis != nil {
		return *x.AdDurationMillis
	}
	return 0
}

// Encapsulates a Video.
type MediaVideo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The duration of the Video in milliseconds.
	AdDurationMillis *int64 `protobuf:"varint,5,opt,name=ad_duration_millis,json=adDurationMillis,proto3,oneof" json:"ad_duration_millis,omitempty"`
	// Immutable. The YouTube video ID (as seen in YouTube URLs). Adding prefix
	// "https://www.youtube.com/watch?v=" to this ID will get the YouTube
	// streaming URL for this video.
	YoutubeVideoId *string `protobuf:"bytes,6,opt,name=youtube_video_id,json=youtubeVideoId,proto3,oneof" json:"youtube_video_id,omitempty"`
	// Output only. The Advertising Digital Identification code for this video, as
	// defined by the American Association of Advertising Agencies, used mainly
	// for television commercials.
	AdvertisingIdCode *string `protobuf:"bytes,7,opt,name=advertising_id_code,json=advertisingIdCode,proto3,oneof" json:"advertising_id_code,omitempty"`
	// Output only. The Industry Standard Commercial Identifier code for this
	// video, used mainly for television commercials.
	IsciCode      *string `protobuf:"bytes,8,opt,name=isci_code,json=isciCode,proto3,oneof" json:"isci_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaVideo) Reset() {
	*x = MediaVideo{}
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaVideo) ProtoMessage() {}

func (x *MediaVideo) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaVideo.ProtoReflect.Descriptor instead.
func (*MediaVideo) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_resources_media_file_proto_rawDescGZIP(), []int{4}
}

func (x *MediaVideo) GetAdDurationMillis() int64 {
	if x != nil && x.AdDurationMillis != nil {
		return *x.AdDurationMillis
	}
	return 0
}

func (x *MediaVideo) GetYoutubeVideoId() string {
	if x != nil && x.YoutubeVideoId != nil {
		return *x.YoutubeVideoId
	}
	return ""
}

func (x *MediaVideo) GetAdvertisingIdCode() string {
	if x != nil && x.AdvertisingIdCode != nil {
		return *x.AdvertisingIdCode
	}
	return ""
}

func (x *MediaVideo) GetIsciCode() string {
	if x != nil && x.IsciCode != nil {
		return *x.IsciCode
	}
	return ""
}

var File_google_ads_googleads_v20_resources_media_file_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_resources_media_file_proto_rawDesc = "" +
	"\n" +
	"3google/ads/googleads/v20/resources/media_file.proto\x12\"google.ads.googleads.v20.resources\x1a/google/ads/googleads/v20/enums/media_type.proto\x1a.google/ads/googleads/v20/enums/mime_type.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\"\xe8\x06\n" +
	"\tMediaFile\x12O\n" +
	"\rresource_name\x18\x01 \x01(\tB*\xe0A\x05\xfaA$\n" +
	"\"googleads.googleapis.com/MediaFileR\fresourceName\x12\x18\n" +
	"\x02id\x18\f \x01(\x03B\x03\xe0A\x03H\x01R\x02id\x88\x01\x01\x12P\n" +
	"\x04type\x18\x05 \x01(\x0e27.google.ads.googleads.v20.enums.MediaTypeEnum.MediaTypeB\x03\xe0A\x05R\x04type\x12W\n" +
	"\tmime_type\x18\x06 \x01(\x0e25.google.ads.googleads.v20.enums.MimeTypeEnum.MimeTypeB\x03\xe0A\x03R\bmimeType\x12'\n" +
	"\n" +
	"source_url\x18\r \x01(\tB\x03\xe0A\x05H\x02R\tsourceUrl\x88\x01\x01\x12\x1c\n" +
	"\x04name\x18\x0e \x01(\tB\x03\xe0A\x05H\x03R\x04name\x88\x01\x01\x12%\n" +
	"\tfile_size\x18\x0f \x01(\x03B\x03\xe0A\x03H\x04R\bfileSize\x88\x01\x01\x12K\n" +
	"\x05image\x18\x03 \x01(\v2..google.ads.googleads.v20.resources.MediaImageB\x03\xe0A\x05H\x00R\x05image\x12Y\n" +
	"\fmedia_bundle\x18\x04 \x01(\v2/.google.ads.googleads.v20.resources.MediaBundleB\x03\xe0A\x05H\x00R\vmediaBundle\x12K\n" +
	"\x05audio\x18\n" +
	" \x01(\v2..google.ads.googleads.v20.resources.MediaAudioB\x03\xe0A\x03H\x00R\x05audio\x12K\n" +
	"\x05video\x18\v \x01(\v2..google.ads.googleads.v20.resources.MediaVideoB\x03\xe0A\x05H\x00R\x05video:[\xeaAX\n" +
	"\"googleads.googleapis.com/MediaFile\x122customers/{customer_id}/mediaFiles/{media_file_id}B\v\n" +
	"\tmediatypeB\x05\n" +
	"\x03_idB\r\n" +
	"\v_source_urlB\a\n" +
	"\x05_nameB\f\n" +
	"\n" +
	"_file_size\"\xde\x01\n" +
	"\n" +
	"MediaImage\x12\x1c\n" +
	"\x04data\x18\x04 \x01(\fB\x03\xe0A\x05H\x00R\x04data\x88\x01\x01\x127\n" +
	"\x13full_size_image_url\x18\x02 \x01(\tB\x03\xe0A\x03H\x01R\x10fullSizeImageUrl\x88\x01\x01\x12=\n" +
	"\x16preview_size_image_url\x18\x03 \x01(\tB\x03\xe0A\x03H\x02R\x13previewSizeImageUrl\x88\x01\x01B\a\n" +
	"\x05_dataB\x16\n" +
	"\x14_full_size_image_urlB\x19\n" +
	"\x17_preview_size_image_url\"X\n" +
	"\vMediaBundle\x12\x1c\n" +
	"\x04data\x18\x03 \x01(\fB\x03\xe0A\x05H\x00R\x04data\x88\x01\x01\x12\x1a\n" +
	"\x03url\x18\x02 \x01(\tB\x03\xe0A\x03H\x01R\x03url\x88\x01\x01B\a\n" +
	"\x05_dataB\x06\n" +
	"\x04_url\"[\n" +
	"\n" +
	"MediaAudio\x126\n" +
	"\x12ad_duration_millis\x18\x02 \x01(\x03B\x03\xe0A\x03H\x00R\x10adDurationMillis\x88\x01\x01B\x15\n" +
	"\x13_ad_duration_millis\"\xab\x02\n" +
	"\n" +
	"MediaVideo\x126\n" +
	"\x12ad_duration_millis\x18\x05 \x01(\x03B\x03\xe0A\x03H\x00R\x10adDurationMillis\x88\x01\x01\x122\n" +
	"\x10youtube_video_id\x18\x06 \x01(\tB\x03\xe0A\x05H\x01R\x0eyoutubeVideoId\x88\x01\x01\x128\n" +
	"\x13advertising_id_code\x18\a \x01(\tB\x03\xe0A\x03H\x02R\x11advertisingIdCode\x88\x01\x01\x12%\n" +
	"\tisci_code\x18\b \x01(\tB\x03\xe0A\x03H\x03R\bisciCode\x88\x01\x01B\x15\n" +
	"\x13_ad_duration_millisB\x13\n" +
	"\x11_youtube_video_idB\x16\n" +
	"\x14_advertising_id_codeB\f\n" +
	"\n" +
	"_isci_codeB\x80\x02\n" +
	"&com.google.ads.googleads.v20.resourcesB\x0eMediaFileProtoP\x01ZKgoogle.golang.org/genproto/googleapis/ads/googleads/v20/resources;resources\xa2\x02\x03GAA\xaa\x02\"Google.Ads.GoogleAds.V20.Resources\xca\x02\"Google\\Ads\\GoogleAds\\V20\\Resources\xea\x02&Google::Ads::GoogleAds::V20::Resourcesb\x06proto3"

var (
	file_google_ads_googleads_v20_resources_media_file_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_resources_media_file_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_resources_media_file_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_resources_media_file_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_resources_media_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_resources_media_file_proto_rawDesc), len(file_google_ads_googleads_v20_resources_media_file_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_resources_media_file_proto_rawDescData
}

var file_google_ads_googleads_v20_resources_media_file_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_google_ads_googleads_v20_resources_media_file_proto_goTypes = []any{
	(*MediaFile)(nil),                  // 0: google.ads.googleads.v20.resources.MediaFile
	(*MediaImage)(nil),                 // 1: google.ads.googleads.v20.resources.MediaImage
	(*MediaBundle)(nil),                // 2: google.ads.googleads.v20.resources.MediaBundle
	(*MediaAudio)(nil),                 // 3: google.ads.googleads.v20.resources.MediaAudio
	(*MediaVideo)(nil),                 // 4: google.ads.googleads.v20.resources.MediaVideo
	(enums.MediaTypeEnum_MediaType)(0), // 5: google.ads.googleads.v20.enums.MediaTypeEnum.MediaType
	(enums.MimeTypeEnum_MimeType)(0),   // 6: google.ads.googleads.v20.enums.MimeTypeEnum.MimeType
}
var file_google_ads_googleads_v20_resources_media_file_proto_depIdxs = []int32{
	5, // 0: google.ads.googleads.v20.resources.MediaFile.type:type_name -> google.ads.googleads.v20.enums.MediaTypeEnum.MediaType
	6, // 1: google.ads.googleads.v20.resources.MediaFile.mime_type:type_name -> google.ads.googleads.v20.enums.MimeTypeEnum.MimeType
	1, // 2: google.ads.googleads.v20.resources.MediaFile.image:type_name -> google.ads.googleads.v20.resources.MediaImage
	2, // 3: google.ads.googleads.v20.resources.MediaFile.media_bundle:type_name -> google.ads.googleads.v20.resources.MediaBundle
	3, // 4: google.ads.googleads.v20.resources.MediaFile.audio:type_name -> google.ads.googleads.v20.resources.MediaAudio
	4, // 5: google.ads.googleads.v20.resources.MediaFile.video:type_name -> google.ads.googleads.v20.resources.MediaVideo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_resources_media_file_proto_init() }
func file_google_ads_googleads_v20_resources_media_file_proto_init() {
	if File_google_ads_googleads_v20_resources_media_file_proto != nil {
		return
	}
	file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[0].OneofWrappers = []any{
		(*MediaFile_Image)(nil),
		(*MediaFile_MediaBundle)(nil),
		(*MediaFile_Audio)(nil),
		(*MediaFile_Video)(nil),
	}
	file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[1].OneofWrappers = []any{}
	file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[2].OneofWrappers = []any{}
	file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[3].OneofWrappers = []any{}
	file_google_ads_googleads_v20_resources_media_file_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_resources_media_file_proto_rawDesc), len(file_google_ads_googleads_v20_resources_media_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_resources_media_file_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_resources_media_file_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_resources_media_file_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_resources_media_file_proto = out.File
	file_google_ads_googleads_v20_resources_media_file_proto_goTypes = nil
	file_google_ads_googleads_v20_resources_media_file_proto_depIdxs = nil
}
