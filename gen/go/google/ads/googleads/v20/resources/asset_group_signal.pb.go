// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/resources/asset_group_signal.proto

package resources

import (
	common "google.golang.org/genproto/googleapis/ads/googleads/v20/common"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v20/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AssetGroupSignal represents a signal in an asset group. The existence of a
// signal tells the performance max campaign who's most likely to convert.
// Performance Max uses the signal to look for new people with similar or
// stronger intent to find conversions across Search, Display, Video, and more.
type AssetGroupSignal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Immutable. The resource name of the asset group signal.
	// Asset group signal resource name have the form:
	//
	// `customers/{customer_id}/assetGroupSignals/{asset_group_id}~{signal_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Immutable. The asset group which this asset group signal belongs to.
	AssetGroup string `protobuf:"bytes,2,opt,name=asset_group,json=assetGroup,proto3" json:"asset_group,omitempty"`
	// Output only. Approval status is the output value for search theme signal
	// after Google ads policy review. When using Audience signal, this field is
	// not used and will be absent.
	ApprovalStatus enums.AssetGroupSignalApprovalStatusEnum_AssetGroupSignalApprovalStatus `protobuf:"varint,6,opt,name=approval_status,json=approvalStatus,proto3,enum=google.ads.googleads.v20.enums.AssetGroupSignalApprovalStatusEnum_AssetGroupSignalApprovalStatus" json:"approval_status,omitempty"`
	// Output only. Computed for SearchTheme signals.
	// When using Audience signal, this field is not used and will be absent.
	DisapprovalReasons []string `protobuf:"bytes,7,rep,name=disapproval_reasons,json=disapprovalReasons,proto3" json:"disapproval_reasons,omitempty"`
	// The signal of the asset group.
	//
	// Types that are valid to be assigned to Signal:
	//
	//	*AssetGroupSignal_Audience
	//	*AssetGroupSignal_SearchTheme
	Signal        isAssetGroupSignal_Signal `protobuf_oneof:"signal"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetGroupSignal) Reset() {
	*x = AssetGroupSignal{}
	mi := &file_google_ads_googleads_v20_resources_asset_group_signal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetGroupSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetGroupSignal) ProtoMessage() {}

func (x *AssetGroupSignal) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_resources_asset_group_signal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetGroupSignal.ProtoReflect.Descriptor instead.
func (*AssetGroupSignal) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDescGZIP(), []int{0}
}

func (x *AssetGroupSignal) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *AssetGroupSignal) GetAssetGroup() string {
	if x != nil {
		return x.AssetGroup
	}
	return ""
}

func (x *AssetGroupSignal) GetApprovalStatus() enums.AssetGroupSignalApprovalStatusEnum_AssetGroupSignalApprovalStatus {
	if x != nil {
		return x.ApprovalStatus
	}
	return enums.AssetGroupSignalApprovalStatusEnum_AssetGroupSignalApprovalStatus(0)
}

func (x *AssetGroupSignal) GetDisapprovalReasons() []string {
	if x != nil {
		return x.DisapprovalReasons
	}
	return nil
}

func (x *AssetGroupSignal) GetSignal() isAssetGroupSignal_Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *AssetGroupSignal) GetAudience() *common.AudienceInfo {
	if x != nil {
		if x, ok := x.Signal.(*AssetGroupSignal_Audience); ok {
			return x.Audience
		}
	}
	return nil
}

func (x *AssetGroupSignal) GetSearchTheme() *common.SearchThemeInfo {
	if x != nil {
		if x, ok := x.Signal.(*AssetGroupSignal_SearchTheme); ok {
			return x.SearchTheme
		}
	}
	return nil
}

type isAssetGroupSignal_Signal interface {
	isAssetGroupSignal_Signal()
}

type AssetGroupSignal_Audience struct {
	// Immutable. The audience signal to be used by the performance max
	// campaign.
	Audience *common.AudienceInfo `protobuf:"bytes,4,opt,name=audience,proto3,oneof"`
}

type AssetGroupSignal_SearchTheme struct {
	// Immutable. The search_theme signal to be used by the performance max
	// campaign.
	// Mutate errors of search_theme criterion includes
	// AssetGroupSignalError.UNSPECIFIED
	// AssetGroupSignalError.UNKNOWN
	// AssetGroupSignalError.TOO_MANY_WORDS
	// AssetGroupSignalError.SEARCH_THEME_POLICY_VIOLATION
	// FieldError.REQUIRED
	// StringFormatError.ILLEGAL_CHARS
	// StringLengthError.TOO_LONG
	// ResourceCountLimitExceededError.RESOURCE_LIMIT
	SearchTheme *common.SearchThemeInfo `protobuf:"bytes,5,opt,name=search_theme,json=searchTheme,proto3,oneof"`
}

func (*AssetGroupSignal_Audience) isAssetGroupSignal_Signal() {}

func (*AssetGroupSignal_SearchTheme) isAssetGroupSignal_Signal() {}

var File_google_ads_googleads_v20_resources_asset_group_signal_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDesc = "" +
	"\n" +
	";google/ads/googleads/v20/resources/asset_group_signal.proto\x12\"google.ads.googleads.v20.resources\x1a.google/ads/googleads/v20/common/criteria.proto\x1aGgoogle/ads/googleads/v20/enums/asset_group_signal_approval_status.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\"\xb3\x05\n" +
	"\x10AssetGroupSignal\x12V\n" +
	"\rresource_name\x18\x01 \x01(\tB1\xe0A\x05\xfaA+\n" +
	")googleads.googleapis.com/AssetGroupSignalR\fresourceName\x12L\n" +
	"\vasset_group\x18\x02 \x01(\tB+\xe0A\x05\xfaA%\n" +
	"#googleads.googleapis.com/AssetGroupR\n" +
	"assetGroup\x12\x8f\x01\n" +
	"\x0fapproval_status\x18\x06 \x01(\x0e2a.google.ads.googleads.v20.enums.AssetGroupSignalApprovalStatusEnum.AssetGroupSignalApprovalStatusB\x03\xe0A\x03R\x0eapprovalStatus\x124\n" +
	"\x13disapproval_reasons\x18\a \x03(\tB\x03\xe0A\x03R\x12disapprovalReasons\x12P\n" +
	"\baudience\x18\x04 \x01(\v2-.google.ads.googleads.v20.common.AudienceInfoB\x03\xe0A\x05H\x00R\baudience\x12Z\n" +
	"\fsearch_theme\x18\x05 \x01(\v20.google.ads.googleads.v20.common.SearchThemeInfoB\x03\xe0A\x05H\x00R\vsearchTheme:y\xeaAv\n" +
	")googleads.googleapis.com/AssetGroupSignal\x12Icustomers/{customer_id}/assetGroupSignals/{asset_group_id}~{criterion_id}B\b\n" +
	"\x06signalB\x87\x02\n" +
	"&com.google.ads.googleads.v20.resourcesB\x15AssetGroupSignalProtoP\x01ZKgoogle.golang.org/genproto/googleapis/ads/googleads/v20/resources;resources\xa2\x02\x03GAA\xaa\x02\"Google.Ads.GoogleAds.V20.Resources\xca\x02\"Google\\Ads\\GoogleAds\\V20\\Resources\xea\x02&Google::Ads::GoogleAds::V20::Resourcesb\x06proto3"

var (
	file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDesc), len(file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDescData
}

var file_google_ads_googleads_v20_resources_asset_group_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_googleads_v20_resources_asset_group_signal_proto_goTypes = []any{
	(*AssetGroupSignal)(nil), // 0: google.ads.googleads.v20.resources.AssetGroupSignal
	(enums.AssetGroupSignalApprovalStatusEnum_AssetGroupSignalApprovalStatus)(0), // 1: google.ads.googleads.v20.enums.AssetGroupSignalApprovalStatusEnum.AssetGroupSignalApprovalStatus
	(*common.AudienceInfo)(nil),    // 2: google.ads.googleads.v20.common.AudienceInfo
	(*common.SearchThemeInfo)(nil), // 3: google.ads.googleads.v20.common.SearchThemeInfo
}
var file_google_ads_googleads_v20_resources_asset_group_signal_proto_depIdxs = []int32{
	1, // 0: google.ads.googleads.v20.resources.AssetGroupSignal.approval_status:type_name -> google.ads.googleads.v20.enums.AssetGroupSignalApprovalStatusEnum.AssetGroupSignalApprovalStatus
	2, // 1: google.ads.googleads.v20.resources.AssetGroupSignal.audience:type_name -> google.ads.googleads.v20.common.AudienceInfo
	3, // 2: google.ads.googleads.v20.resources.AssetGroupSignal.search_theme:type_name -> google.ads.googleads.v20.common.SearchThemeInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_resources_asset_group_signal_proto_init() }
func file_google_ads_googleads_v20_resources_asset_group_signal_proto_init() {
	if File_google_ads_googleads_v20_resources_asset_group_signal_proto != nil {
		return
	}
	file_google_ads_googleads_v20_resources_asset_group_signal_proto_msgTypes[0].OneofWrappers = []any{
		(*AssetGroupSignal_Audience)(nil),
		(*AssetGroupSignal_SearchTheme)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDesc), len(file_google_ads_googleads_v20_resources_asset_group_signal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_resources_asset_group_signal_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_resources_asset_group_signal_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_resources_asset_group_signal_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_resources_asset_group_signal_proto = out.File
	file_google_ads_googleads_v20_resources_asset_group_signal_proto_goTypes = nil
	file_google_ads_googleads_v20_resources_asset_group_signal_proto_depIdxs = nil
}
