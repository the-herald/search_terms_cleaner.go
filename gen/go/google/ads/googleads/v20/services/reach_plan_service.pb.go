// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/services/reach_plan_service.proto

package services

import (
	common "google.golang.org/genproto/googleapis/ads/googleads/v20/common"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v20/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for
// [ReachPlanService.GenerateConversionRates][google.ads.googleads.v20.services.ReachPlanService.GenerateConversionRates].
type GenerateConversionRatesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the customer. A conversion rate based on the historical
	// data of this customer may be suggested.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The name of the customer being planned for. This is a user-defined value.
	CustomerReachGroup *string `protobuf:"bytes,2,opt,name=customer_reach_group,json=customerReachGroup,proto3,oneof" json:"customer_reach_group,omitempty"`
	// Optional. Additional information on the application issuing the request.
	ReachApplicationInfo *common.AdditionalApplicationInfo `protobuf:"bytes,3,opt,name=reach_application_info,json=reachApplicationInfo,proto3" json:"reach_application_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GenerateConversionRatesRequest) Reset() {
	*x = GenerateConversionRatesRequest{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateConversionRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateConversionRatesRequest) ProtoMessage() {}

func (x *GenerateConversionRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateConversionRatesRequest.ProtoReflect.Descriptor instead.
func (*GenerateConversionRatesRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateConversionRatesRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *GenerateConversionRatesRequest) GetCustomerReachGroup() string {
	if x != nil && x.CustomerReachGroup != nil {
		return *x.CustomerReachGroup
	}
	return ""
}

func (x *GenerateConversionRatesRequest) GetReachApplicationInfo() *common.AdditionalApplicationInfo {
	if x != nil {
		return x.ReachApplicationInfo
	}
	return nil
}

// Response message for
// [ReachPlanService.GenerateConversionRates][google.ads.googleads.v20.services.ReachPlanService.GenerateConversionRates],
// containing conversion rate suggestions for supported plannable products.
type GenerateConversionRatesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list containing conversion rate suggestions. Each repeated element will
	// have an associated product code. Multiple suggestions may share the same
	// product code.
	ConversionRateSuggestions []*ConversionRateSuggestion `protobuf:"bytes,1,rep,name=conversion_rate_suggestions,json=conversionRateSuggestions,proto3" json:"conversion_rate_suggestions,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GenerateConversionRatesResponse) Reset() {
	*x = GenerateConversionRatesResponse{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateConversionRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateConversionRatesResponse) ProtoMessage() {}

func (x *GenerateConversionRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateConversionRatesResponse.ProtoReflect.Descriptor instead.
func (*GenerateConversionRatesResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateConversionRatesResponse) GetConversionRateSuggestions() []*ConversionRateSuggestion {
	if x != nil {
		return x.ConversionRateSuggestions
	}
	return nil
}

// A conversion rate suggestion.
type ConversionRateSuggestion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Model type used to calculate the suggested conversion rate.
	ConversionRateModel enums.ReachPlanConversionRateModelEnum_ReachPlanConversionRateModel `protobuf:"varint,1,opt,name=conversion_rate_model,json=conversionRateModel,proto3,enum=google.ads.googleads.v20.enums.ReachPlanConversionRateModelEnum_ReachPlanConversionRateModel" json:"conversion_rate_model,omitempty"`
	// The code associated with the plannable product (for example: DEMAND_GEN).
	// To list all plannable product codes, use
	// [ReachPlanService.ListPlannableProducts][google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts].
	PlannableProductCode string `protobuf:"bytes,2,opt,name=plannable_product_code,json=plannableProductCode,proto3" json:"plannable_product_code,omitempty"`
	// The suggested conversion rate. The value is between 0 and 1 (exclusive).
	ConversionRate float64 `protobuf:"fixed64,3,opt,name=conversion_rate,json=conversionRate,proto3" json:"conversion_rate,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConversionRateSuggestion) Reset() {
	*x = ConversionRateSuggestion{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionRateSuggestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionRateSuggestion) ProtoMessage() {}

func (x *ConversionRateSuggestion) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionRateSuggestion.ProtoReflect.Descriptor instead.
func (*ConversionRateSuggestion) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{2}
}

func (x *ConversionRateSuggestion) GetConversionRateModel() enums.ReachPlanConversionRateModelEnum_ReachPlanConversionRateModel {
	if x != nil {
		return x.ConversionRateModel
	}
	return enums.ReachPlanConversionRateModelEnum_ReachPlanConversionRateModel(0)
}

func (x *ConversionRateSuggestion) GetPlannableProductCode() string {
	if x != nil {
		return x.PlannableProductCode
	}
	return ""
}

func (x *ConversionRateSuggestion) GetConversionRate() float64 {
	if x != nil {
		return x.ConversionRate
	}
	return 0
}

// Request message for
// [ReachPlanService.ListPlannableLocations][google.ads.googleads.v20.services.ReachPlanService.ListPlannableLocations].
type ListPlannableLocationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Additional information on the application issuing the request.
	ReachApplicationInfo *common.AdditionalApplicationInfo `protobuf:"bytes,1,opt,name=reach_application_info,json=reachApplicationInfo,proto3" json:"reach_application_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListPlannableLocationsRequest) Reset() {
	*x = ListPlannableLocationsRequest{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlannableLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlannableLocationsRequest) ProtoMessage() {}

func (x *ListPlannableLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlannableLocationsRequest.ProtoReflect.Descriptor instead.
func (*ListPlannableLocationsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListPlannableLocationsRequest) GetReachApplicationInfo() *common.AdditionalApplicationInfo {
	if x != nil {
		return x.ReachApplicationInfo
	}
	return nil
}

// The list of plannable locations.
type ListPlannableLocationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of locations available for planning.
	// See
	// https://developers.google.com/google-ads/api/reference/data/geotargets
	// for sample locations.
	PlannableLocations []*PlannableLocation `protobuf:"bytes,1,rep,name=plannable_locations,json=plannableLocations,proto3" json:"plannable_locations,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListPlannableLocationsResponse) Reset() {
	*x = ListPlannableLocationsResponse{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlannableLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlannableLocationsResponse) ProtoMessage() {}

func (x *ListPlannableLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlannableLocationsResponse.ProtoReflect.Descriptor instead.
func (*ListPlannableLocationsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListPlannableLocationsResponse) GetPlannableLocations() []*PlannableLocation {
	if x != nil {
		return x.PlannableLocations
	}
	return nil
}

// A plannable location: country, metro region, province, etc.
type PlannableLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The location identifier.
	Id *string `protobuf:"bytes,4,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The unique location name in English.
	Name *string `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// The parent country (not present if location is a country).
	// If present, will always be a GeoTargetConstant ID. Additional information
	// such as country name is provided by
	// [ReachPlanService.ListPlannableLocations][google.ads.googleads.v20.services.ReachPlanService.ListPlannableLocations]
	// or GoogleAdsService.Search/SearchStream.
	ParentCountryId *int64 `protobuf:"varint,6,opt,name=parent_country_id,json=parentCountryId,proto3,oneof" json:"parent_country_id,omitempty"`
	// The ISO-3166-1 alpha-2 country code that is associated with the location.
	CountryCode *string `protobuf:"bytes,7,opt,name=country_code,json=countryCode,proto3,oneof" json:"country_code,omitempty"`
	// The location's type. Location types correspond to target_type returned by
	// searching location type in GoogleAdsService.Search/SearchStream.
	LocationType  *string `protobuf:"bytes,8,opt,name=location_type,json=locationType,proto3,oneof" json:"location_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlannableLocation) Reset() {
	*x = PlannableLocation{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlannableLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannableLocation) ProtoMessage() {}

func (x *PlannableLocation) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannableLocation.ProtoReflect.Descriptor instead.
func (*PlannableLocation) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{5}
}

func (x *PlannableLocation) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PlannableLocation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PlannableLocation) GetParentCountryId() int64 {
	if x != nil && x.ParentCountryId != nil {
		return *x.ParentCountryId
	}
	return 0
}

func (x *PlannableLocation) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *PlannableLocation) GetLocationType() string {
	if x != nil && x.LocationType != nil {
		return *x.LocationType
	}
	return ""
}

// Request to list available products in a given location.
type ListPlannableProductsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the selected location for planning. To list the
	// available plannable location IDs use
	// [ReachPlanService.ListPlannableLocations][google.ads.googleads.v20.services.ReachPlanService.ListPlannableLocations].
	PlannableLocationId string `protobuf:"bytes,2,opt,name=plannable_location_id,json=plannableLocationId,proto3" json:"plannable_location_id,omitempty"`
	// Optional. Additional information on the application issuing the request.
	ReachApplicationInfo *common.AdditionalApplicationInfo `protobuf:"bytes,3,opt,name=reach_application_info,json=reachApplicationInfo,proto3" json:"reach_application_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListPlannableProductsRequest) Reset() {
	*x = ListPlannableProductsRequest{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlannableProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlannableProductsRequest) ProtoMessage() {}

func (x *ListPlannableProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlannableProductsRequest.ProtoReflect.Descriptor instead.
func (*ListPlannableProductsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListPlannableProductsRequest) GetPlannableLocationId() string {
	if x != nil {
		return x.PlannableLocationId
	}
	return ""
}

func (x *ListPlannableProductsRequest) GetReachApplicationInfo() *common.AdditionalApplicationInfo {
	if x != nil {
		return x.ReachApplicationInfo
	}
	return nil
}

// A response with all available products.
type ListPlannableProductsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of products available for planning and related targeting metadata.
	ProductMetadata []*ProductMetadata `protobuf:"bytes,1,rep,name=product_metadata,json=productMetadata,proto3" json:"product_metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListPlannableProductsResponse) Reset() {
	*x = ListPlannableProductsResponse{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlannableProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlannableProductsResponse) ProtoMessage() {}

func (x *ListPlannableProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlannableProductsResponse.ProtoReflect.Descriptor instead.
func (*ListPlannableProductsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListPlannableProductsResponse) GetProductMetadata() []*ProductMetadata {
	if x != nil {
		return x.ProductMetadata
	}
	return nil
}

// The metadata associated with an available plannable product.
type ProductMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The code associated with the ad product (for example: BUMPER,
	// TRUEVIEW_IN_STREAM).
	// To list the available plannable product codes use
	// [ReachPlanService.ListPlannableProducts][google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts].
	PlannableProductCode *string `protobuf:"bytes,4,opt,name=plannable_product_code,json=plannableProductCode,proto3,oneof" json:"plannable_product_code,omitempty"`
	// The name associated with the ad product.
	PlannableProductName string `protobuf:"bytes,3,opt,name=plannable_product_name,json=plannableProductName,proto3" json:"plannable_product_name,omitempty"`
	// The allowed plannable targeting for this product.
	PlannableTargeting *PlannableTargeting `protobuf:"bytes,2,opt,name=plannable_targeting,json=plannableTargeting,proto3" json:"plannable_targeting,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProductMetadata) Reset() {
	*x = ProductMetadata{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductMetadata) ProtoMessage() {}

func (x *ProductMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductMetadata.ProtoReflect.Descriptor instead.
func (*ProductMetadata) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{8}
}

func (x *ProductMetadata) GetPlannableProductCode() string {
	if x != nil && x.PlannableProductCode != nil {
		return *x.PlannableProductCode
	}
	return ""
}

func (x *ProductMetadata) GetPlannableProductName() string {
	if x != nil {
		return x.PlannableProductName
	}
	return ""
}

func (x *ProductMetadata) GetPlannableTargeting() *PlannableTargeting {
	if x != nil {
		return x.PlannableTargeting
	}
	return nil
}

// Request message for
// [ReachPlanService.ListPlannableUserLists][google.ads.googleads.v20.services.ReachPlanService.ListPlannableUserLists]
// that lists the available user lists for a customer.
type ListPlannableUserListsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the customer.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The name of the customer being planned for. This is a user-defined value.
	CustomerReachGroup *string `protobuf:"bytes,2,opt,name=customer_reach_group,json=customerReachGroup,proto3,oneof" json:"customer_reach_group,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListPlannableUserListsRequest) Reset() {
	*x = ListPlannableUserListsRequest{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlannableUserListsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlannableUserListsRequest) ProtoMessage() {}

func (x *ListPlannableUserListsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlannableUserListsRequest.ProtoReflect.Descriptor instead.
func (*ListPlannableUserListsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListPlannableUserListsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ListPlannableUserListsRequest) GetCustomerReachGroup() string {
	if x != nil && x.CustomerReachGroup != nil {
		return *x.CustomerReachGroup
	}
	return ""
}

// A response with all available user lists with their plannable status.
type ListPlannableUserListsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of user lists available for planning and related targeting
	// metadata.
	PlannableUserLists []*PlannableUserList `protobuf:"bytes,1,rep,name=plannable_user_lists,json=plannableUserLists,proto3" json:"plannable_user_lists,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListPlannableUserListsResponse) Reset() {
	*x = ListPlannableUserListsResponse{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlannableUserListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlannableUserListsResponse) ProtoMessage() {}

func (x *ListPlannableUserListsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlannableUserListsResponse.ProtoReflect.Descriptor instead.
func (*ListPlannableUserListsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListPlannableUserListsResponse) GetPlannableUserLists() []*PlannableUserList {
	if x != nil {
		return x.PlannableUserLists
	}
	return nil
}

// A plannable user list.
type PlannableUserList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user list ID.
	UserListInfo *common.UserListInfo `protobuf:"bytes,1,opt,name=user_list_info,json=userListInfo,proto3" json:"user_list_info,omitempty"`
	// The name of the user list.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The user list type.
	UserListType enums.UserListTypeEnum_UserListType `protobuf:"varint,3,opt,name=user_list_type,json=userListType,proto3,enum=google.ads.googleads.v20.enums.UserListTypeEnum_UserListType" json:"user_list_type,omitempty"`
	// The plannable status of the user list.
	PlannableStatus enums.ReachPlanPlannableUserListStatusEnum_ReachPlanPlannableUserListStatus `protobuf:"varint,4,opt,name=plannable_status,json=plannableStatus,proto3,enum=google.ads.googleads.v20.enums.ReachPlanPlannableUserListStatusEnum_ReachPlanPlannableUserListStatus" json:"plannable_status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PlannableUserList) Reset() {
	*x = PlannableUserList{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlannableUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannableUserList) ProtoMessage() {}

func (x *PlannableUserList) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannableUserList.ProtoReflect.Descriptor instead.
func (*PlannableUserList) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{11}
}

func (x *PlannableUserList) GetUserListInfo() *common.UserListInfo {
	if x != nil {
		return x.UserListInfo
	}
	return nil
}

func (x *PlannableUserList) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PlannableUserList) GetUserListType() enums.UserListTypeEnum_UserListType {
	if x != nil {
		return x.UserListType
	}
	return enums.UserListTypeEnum_UserListType(0)
}

func (x *PlannableUserList) GetPlannableStatus() enums.ReachPlanPlannableUserListStatusEnum_ReachPlanPlannableUserListStatus {
	if x != nil {
		return x.PlannableStatus
	}
	return enums.ReachPlanPlannableUserListStatusEnum_ReachPlanPlannableUserListStatus(0)
}

// The targeting for which traffic metrics will be reported.
type PlannableTargeting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Allowed plannable age ranges for the product for which metrics will be
	// reported. Actual targeting is computed by mapping this age range onto
	// standard Google common.AgeRangeInfo values.
	AgeRanges []enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange `protobuf:"varint,1,rep,packed,name=age_ranges,json=ageRanges,proto3,enum=google.ads.googleads.v20.enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange" json:"age_ranges,omitempty"`
	// Targetable genders for the ad product.
	Genders []*common.GenderInfo `protobuf:"bytes,2,rep,name=genders,proto3" json:"genders,omitempty"`
	// Targetable devices for the ad product.
	// TABLET device targeting is automatically applied to reported metrics
	// when MOBILE targeting is selected for CPM_MASTHEAD,
	// GOOGLE_PREFERRED_BUMPER, and GOOGLE_PREFERRED_SHORT products.
	Devices []*common.DeviceInfo `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`
	// Targetable networks for the ad product.
	Networks []enums.ReachPlanNetworkEnum_ReachPlanNetwork `protobuf:"varint,4,rep,packed,name=networks,proto3,enum=google.ads.googleads.v20.enums.ReachPlanNetworkEnum_ReachPlanNetwork" json:"networks,omitempty"`
	// Targetable YouTube Select Lineups for the ad product.
	YoutubeSelectLineups []*YouTubeSelectLineUp `protobuf:"bytes,5,rep,name=youtube_select_lineups,json=youtubeSelectLineups,proto3" json:"youtube_select_lineups,omitempty"`
	// Targetable surface combinations for the ad product.
	SurfaceTargeting *SurfaceTargetingCombinations `protobuf:"bytes,6,opt,name=surface_targeting,json=surfaceTargeting,proto3" json:"surface_targeting,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlannableTargeting) Reset() {
	*x = PlannableTargeting{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlannableTargeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannableTargeting) ProtoMessage() {}

func (x *PlannableTargeting) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannableTargeting.ProtoReflect.Descriptor instead.
func (*PlannableTargeting) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{12}
}

func (x *PlannableTargeting) GetAgeRanges() []enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange {
	if x != nil {
		return x.AgeRanges
	}
	return nil
}

func (x *PlannableTargeting) GetGenders() []*common.GenderInfo {
	if x != nil {
		return x.Genders
	}
	return nil
}

func (x *PlannableTargeting) GetDevices() []*common.DeviceInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *PlannableTargeting) GetNetworks() []enums.ReachPlanNetworkEnum_ReachPlanNetwork {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *PlannableTargeting) GetYoutubeSelectLineups() []*YouTubeSelectLineUp {
	if x != nil {
		return x.YoutubeSelectLineups
	}
	return nil
}

func (x *PlannableTargeting) GetSurfaceTargeting() *SurfaceTargetingCombinations {
	if x != nil {
		return x.SurfaceTargeting
	}
	return nil
}

// Request message for
// [ReachPlanService.GenerateReachForecast][google.ads.googleads.v20.services.ReachPlanService.GenerateReachForecast].
type GenerateReachForecastRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the customer.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The currency code.
	// Three-character ISO 4217 currency code.
	CurrencyCode *string `protobuf:"bytes,9,opt,name=currency_code,json=currencyCode,proto3,oneof" json:"currency_code,omitempty"`
	// Required. Campaign duration.
	CampaignDuration *CampaignDuration `protobuf:"bytes,3,opt,name=campaign_duration,json=campaignDuration,proto3" json:"campaign_duration,omitempty"`
	// Chosen cookie frequency cap to be applied to each planned product.
	// This is equivalent to the frequency cap exposed in Google Ads when creating
	// a campaign, it represents the maximum number of times an ad can be shown to
	// the same user.
	// If not specified, no cap is applied.
	//
	// This field is deprecated in v4 and will eventually be removed.
	// Use cookie_frequency_cap_setting instead.
	CookieFrequencyCap *int32 `protobuf:"varint,10,opt,name=cookie_frequency_cap,json=cookieFrequencyCap,proto3,oneof" json:"cookie_frequency_cap,omitempty"`
	// Chosen cookie frequency cap to be applied to each planned product.
	// This is equivalent to the frequency cap exposed in Google Ads when creating
	// a campaign, it represents the maximum number of times an ad can be shown to
	// the same user during a specified time interval.
	// If not specified, a default of 0 (no cap) is applied.
	//
	// This field replaces the deprecated cookie_frequency_cap field.
	CookieFrequencyCapSetting *FrequencyCap `protobuf:"bytes,8,opt,name=cookie_frequency_cap_setting,json=cookieFrequencyCapSetting,proto3" json:"cookie_frequency_cap_setting,omitempty"`
	// Chosen minimum effective frequency (the number of times a person was
	// exposed to the ad) for the reported reach metrics [1-10].
	// This won't affect the targeting, but just the reporting.
	// If not specified, a default of 1 is applied.
	//
	// This field cannot be combined with the effective_frequency_limit field.
	MinEffectiveFrequency *int32 `protobuf:"varint,11,opt,name=min_effective_frequency,json=minEffectiveFrequency,proto3,oneof" json:"min_effective_frequency,omitempty"`
	// The highest minimum effective frequency (the number of times a person was
	// exposed to the ad) value [1-10] to include in
	// Forecast.effective_frequency_breakdowns.
	// If not specified, Forecast.effective_frequency_breakdowns will not be
	// provided.
	//
	// The effective frequency value provided here will also be used as the
	// minimum effective frequency for the reported reach metrics.
	//
	// This field cannot be combined with the min_effective_frequency field.
	EffectiveFrequencyLimit *EffectiveFrequencyLimit `protobuf:"bytes,12,opt,name=effective_frequency_limit,json=effectiveFrequencyLimit,proto3,oneof" json:"effective_frequency_limit,omitempty"`
	// The targeting to be applied to all products selected in the product mix.
	//
	// This is planned targeting: execution details might vary based on the
	// advertising product, consult an implementation specialist.
	//
	// See specific metrics for details on how targeting affects them.
	Targeting *Targeting `protobuf:"bytes,6,opt,name=targeting,proto3" json:"targeting,omitempty"`
	// Required. The products to be forecast.
	// The max number of allowed planned products is 15.
	PlannedProducts []*PlannedProduct `protobuf:"bytes,7,rep,name=planned_products,json=plannedProducts,proto3" json:"planned_products,omitempty"`
	// Controls the forecast metrics returned in the response.
	ForecastMetricOptions *ForecastMetricOptions `protobuf:"bytes,13,opt,name=forecast_metric_options,json=forecastMetricOptions,proto3" json:"forecast_metric_options,omitempty"`
	// The name of the customer being planned for. This is a user-defined value.
	CustomerReachGroup *string `protobuf:"bytes,14,opt,name=customer_reach_group,json=customerReachGroup,proto3,oneof" json:"customer_reach_group,omitempty"`
	// Optional. Additional information on the application issuing the request.
	ReachApplicationInfo *common.AdditionalApplicationInfo `protobuf:"bytes,15,opt,name=reach_application_info,json=reachApplicationInfo,proto3" json:"reach_application_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GenerateReachForecastRequest) Reset() {
	*x = GenerateReachForecastRequest{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateReachForecastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateReachForecastRequest) ProtoMessage() {}

func (x *GenerateReachForecastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateReachForecastRequest.ProtoReflect.Descriptor instead.
func (*GenerateReachForecastRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{13}
}

func (x *GenerateReachForecastRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *GenerateReachForecastRequest) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *GenerateReachForecastRequest) GetCampaignDuration() *CampaignDuration {
	if x != nil {
		return x.CampaignDuration
	}
	return nil
}

func (x *GenerateReachForecastRequest) GetCookieFrequencyCap() int32 {
	if x != nil && x.CookieFrequencyCap != nil {
		return *x.CookieFrequencyCap
	}
	return 0
}

func (x *GenerateReachForecastRequest) GetCookieFrequencyCapSetting() *FrequencyCap {
	if x != nil {
		return x.CookieFrequencyCapSetting
	}
	return nil
}

func (x *GenerateReachForecastRequest) GetMinEffectiveFrequency() int32 {
	if x != nil && x.MinEffectiveFrequency != nil {
		return *x.MinEffectiveFrequency
	}
	return 0
}

func (x *GenerateReachForecastRequest) GetEffectiveFrequencyLimit() *EffectiveFrequencyLimit {
	if x != nil {
		return x.EffectiveFrequencyLimit
	}
	return nil
}

func (x *GenerateReachForecastRequest) GetTargeting() *Targeting {
	if x != nil {
		return x.Targeting
	}
	return nil
}

func (x *GenerateReachForecastRequest) GetPlannedProducts() []*PlannedProduct {
	if x != nil {
		return x.PlannedProducts
	}
	return nil
}

func (x *GenerateReachForecastRequest) GetForecastMetricOptions() *ForecastMetricOptions {
	if x != nil {
		return x.ForecastMetricOptions
	}
	return nil
}

func (x *GenerateReachForecastRequest) GetCustomerReachGroup() string {
	if x != nil && x.CustomerReachGroup != nil {
		return *x.CustomerReachGroup
	}
	return ""
}

func (x *GenerateReachForecastRequest) GetReachApplicationInfo() *common.AdditionalApplicationInfo {
	if x != nil {
		return x.ReachApplicationInfo
	}
	return nil
}

// Effective frequency limit.
type EffectiveFrequencyLimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The highest effective frequency value to include in
	// Forecast.effective_frequency_breakdowns.
	// This field supports frequencies 1-10, inclusive.
	EffectiveFrequencyBreakdownLimit int32 `protobuf:"varint,1,opt,name=effective_frequency_breakdown_limit,json=effectiveFrequencyBreakdownLimit,proto3" json:"effective_frequency_breakdown_limit,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *EffectiveFrequencyLimit) Reset() {
	*x = EffectiveFrequencyLimit{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EffectiveFrequencyLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EffectiveFrequencyLimit) ProtoMessage() {}

func (x *EffectiveFrequencyLimit) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EffectiveFrequencyLimit.ProtoReflect.Descriptor instead.
func (*EffectiveFrequencyLimit) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{14}
}

func (x *EffectiveFrequencyLimit) GetEffectiveFrequencyBreakdownLimit() int32 {
	if x != nil {
		return x.EffectiveFrequencyBreakdownLimit
	}
	return 0
}

// A rule specifying the maximum number of times an ad can be shown to a user
// over a particular time period.
type FrequencyCap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The number of impressions, inclusive.
	Impressions int32 `protobuf:"varint,3,opt,name=impressions,proto3" json:"impressions,omitempty"`
	// Required. The type of time unit.
	TimeUnit      enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit `protobuf:"varint,2,opt,name=time_unit,json=timeUnit,proto3,enum=google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit" json:"time_unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrequencyCap) Reset() {
	*x = FrequencyCap{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequencyCap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyCap) ProtoMessage() {}

func (x *FrequencyCap) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyCap.ProtoReflect.Descriptor instead.
func (*FrequencyCap) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{15}
}

func (x *FrequencyCap) GetImpressions() int32 {
	if x != nil {
		return x.Impressions
	}
	return 0
}

func (x *FrequencyCap) GetTimeUnit() enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit {
	if x != nil {
		return x.TimeUnit
	}
	return enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit(0)
}

// The targeting for which traffic metrics will be reported.
type Targeting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the selected location. Plannable location IDs can be
	// obtained from
	// [ReachPlanService.ListPlannableLocations][google.ads.googleads.v20.services.ReachPlanService.ListPlannableLocations].
	//
	// Requests must set either this field or `plannable_location_ids`.
	//
	// This field is deprecated as of V12 and will be removed in a future release.
	// Use `plannable_location_ids` instead.
	PlannableLocationId *string `protobuf:"bytes,6,opt,name=plannable_location_id,json=plannableLocationId,proto3,oneof" json:"plannable_location_id,omitempty"`
	// The list of plannable location IDs to target with this forecast.
	//
	// If more than one ID is provided, all IDs must have the same
	// `parent_country_id`. Planning for more than `parent_county` is not
	// supported. Plannable location IDs and their `parent_country_id` can be
	// obtained from
	// [ReachPlanService.ListPlannableLocations][google.ads.googleads.v20.services.ReachPlanService.ListPlannableLocations].
	//
	// Requests must set either this field or `plannable_location_id`.
	PlannableLocationIds []string `protobuf:"bytes,8,rep,name=plannable_location_ids,json=plannableLocationIds,proto3" json:"plannable_location_ids,omitempty"`
	// Targeted age range.
	// An unset value is equivalent to targeting all ages.
	AgeRange enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange `protobuf:"varint,2,opt,name=age_range,json=ageRange,proto3,enum=google.ads.googleads.v20.enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange" json:"age_range,omitempty"`
	// Targeted genders.
	// An unset value is equivalent to targeting MALE and FEMALE.
	Genders []*common.GenderInfo `protobuf:"bytes,3,rep,name=genders,proto3" json:"genders,omitempty"`
	// Targeted devices.
	// If not specified, targets all applicable devices. Applicable devices vary
	// by product and region and can be obtained from
	// [ReachPlanService.ListPlannableProducts][google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts].
	Devices []*common.DeviceInfo `protobuf:"bytes,4,rep,name=devices,proto3" json:"devices,omitempty"`
	// Targetable network for the ad product.
	// If not specified, targets all applicable networks. Applicable networks vary
	// by product and region and can be obtained from
	// [ReachPlanService.ListPlannableProducts][google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts].
	Network enums.ReachPlanNetworkEnum_ReachPlanNetwork `protobuf:"varint,5,opt,name=network,proto3,enum=google.ads.googleads.v20.enums.ReachPlanNetworkEnum_ReachPlanNetwork" json:"network,omitempty"`
	// Targeted audiences.
	// If not specified, does not target any specific audience.
	AudienceTargeting *AudienceTargeting `protobuf:"bytes,7,opt,name=audience_targeting,json=audienceTargeting,proto3" json:"audience_targeting,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Targeting) Reset() {
	*x = Targeting{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Targeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targeting) ProtoMessage() {}

func (x *Targeting) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targeting.ProtoReflect.Descriptor instead.
func (*Targeting) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{16}
}

func (x *Targeting) GetPlannableLocationId() string {
	if x != nil && x.PlannableLocationId != nil {
		return *x.PlannableLocationId
	}
	return ""
}

func (x *Targeting) GetPlannableLocationIds() []string {
	if x != nil {
		return x.PlannableLocationIds
	}
	return nil
}

func (x *Targeting) GetAgeRange() enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange {
	if x != nil {
		return x.AgeRange
	}
	return enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange(0)
}

func (x *Targeting) GetGenders() []*common.GenderInfo {
	if x != nil {
		return x.Genders
	}
	return nil
}

func (x *Targeting) GetDevices() []*common.DeviceInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *Targeting) GetNetwork() enums.ReachPlanNetworkEnum_ReachPlanNetwork {
	if x != nil {
		return x.Network
	}
	return enums.ReachPlanNetworkEnum_ReachPlanNetwork(0)
}

func (x *Targeting) GetAudienceTargeting() *AudienceTargeting {
	if x != nil {
		return x.AudienceTargeting
	}
	return nil
}

// The duration of a planned campaign.
type CampaignDuration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The duration value in days.
	//
	// This field cannot be combined with the date_range field.
	DurationInDays *int32 `protobuf:"varint,2,opt,name=duration_in_days,json=durationInDays,proto3,oneof" json:"duration_in_days,omitempty"`
	// Date range of the campaign.
	// Dates are in the yyyy-mm-dd format and inclusive.
	// The end date must be < 1 year in the future and the
	// date range must be <= 92 days long.
	//
	// This field cannot be combined with the duration_in_days field.
	DateRange     *common.DateRange `protobuf:"bytes,3,opt,name=date_range,json=dateRange,proto3" json:"date_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CampaignDuration) Reset() {
	*x = CampaignDuration{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CampaignDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignDuration) ProtoMessage() {}

func (x *CampaignDuration) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignDuration.ProtoReflect.Descriptor instead.
func (*CampaignDuration) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{17}
}

func (x *CampaignDuration) GetDurationInDays() int32 {
	if x != nil && x.DurationInDays != nil {
		return *x.DurationInDays
	}
	return 0
}

func (x *CampaignDuration) GetDateRange() *common.DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

// A product being planned for reach.
type PlannedProduct struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Selected product for planning.
	// The code associated with the ad product (for example: Trueview, Bumper).
	// To list the available plannable product codes use
	// [ReachPlanService.ListPlannableProducts][google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts].
	PlannableProductCode *string `protobuf:"bytes,3,opt,name=plannable_product_code,json=plannableProductCode,proto3,oneof" json:"plannable_product_code,omitempty"`
	// Required. Maximum budget allocation in micros for the selected product.
	// The value is specified in the selected planning currency_code.
	// For example: 1 000 000$ = 1 000 000 000 000 micros.
	BudgetMicros *int64 `protobuf:"varint,4,opt,name=budget_micros,json=budgetMicros,proto3,oneof" json:"budget_micros,omitempty"`
	// Conversion rate as a decimal between 0 and 1, exclusive.
	// For example: if 2% of ad interactions are expected to lead to conversions,
	// conversion_rate should be 0.02.
	// This field is required for DEMAND_GEN plannable products. It is not
	// supported for other plannable products.
	ConversionRate *float64 `protobuf:"fixed64,6,opt,name=conversion_rate,json=conversionRate,proto3,oneof" json:"conversion_rate,omitempty"`
	// Targeting settings for the selected product.
	// To list the available targeting for each product use
	// [ReachPlanService.ListPlannableProducts][google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts].
	AdvancedProductTargeting *AdvancedProductTargeting `protobuf:"bytes,5,opt,name=advanced_product_targeting,json=advancedProductTargeting,proto3" json:"advanced_product_targeting,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *PlannedProduct) Reset() {
	*x = PlannedProduct{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlannedProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedProduct) ProtoMessage() {}

func (x *PlannedProduct) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedProduct.ProtoReflect.Descriptor instead.
func (*PlannedProduct) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{18}
}

func (x *PlannedProduct) GetPlannableProductCode() string {
	if x != nil && x.PlannableProductCode != nil {
		return *x.PlannableProductCode
	}
	return ""
}

func (x *PlannedProduct) GetBudgetMicros() int64 {
	if x != nil && x.BudgetMicros != nil {
		return *x.BudgetMicros
	}
	return 0
}

func (x *PlannedProduct) GetConversionRate() float64 {
	if x != nil && x.ConversionRate != nil {
		return *x.ConversionRate
	}
	return 0
}

func (x *PlannedProduct) GetAdvancedProductTargeting() *AdvancedProductTargeting {
	if x != nil {
		return x.AdvancedProductTargeting
	}
	return nil
}

// Response message containing the generated reach curve.
type GenerateReachForecastResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reference on target audiences for this curve.
	OnTargetAudienceMetrics *OnTargetAudienceMetrics `protobuf:"bytes,1,opt,name=on_target_audience_metrics,json=onTargetAudienceMetrics,proto3" json:"on_target_audience_metrics,omitempty"`
	// The generated reach curve for the planned product mix.
	ReachCurve    *ReachCurve `protobuf:"bytes,2,opt,name=reach_curve,json=reachCurve,proto3" json:"reach_curve,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateReachForecastResponse) Reset() {
	*x = GenerateReachForecastResponse{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateReachForecastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateReachForecastResponse) ProtoMessage() {}

func (x *GenerateReachForecastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateReachForecastResponse.ProtoReflect.Descriptor instead.
func (*GenerateReachForecastResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{19}
}

func (x *GenerateReachForecastResponse) GetOnTargetAudienceMetrics() *OnTargetAudienceMetrics {
	if x != nil {
		return x.OnTargetAudienceMetrics
	}
	return nil
}

func (x *GenerateReachForecastResponse) GetReachCurve() *ReachCurve {
	if x != nil {
		return x.ReachCurve
	}
	return nil
}

// The reach curve for the planned products.
type ReachCurve struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All points on the reach curve.
	ReachForecasts []*ReachForecast `protobuf:"bytes,1,rep,name=reach_forecasts,json=reachForecasts,proto3" json:"reach_forecasts,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReachCurve) Reset() {
	*x = ReachCurve{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReachCurve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReachCurve) ProtoMessage() {}

func (x *ReachCurve) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReachCurve.ProtoReflect.Descriptor instead.
func (*ReachCurve) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{20}
}

func (x *ReachCurve) GetReachForecasts() []*ReachForecast {
	if x != nil {
		return x.ReachForecasts
	}
	return nil
}

// A point on reach curve.
type ReachForecast struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The cost in micros.
	CostMicros int64 `protobuf:"varint,5,opt,name=cost_micros,json=costMicros,proto3" json:"cost_micros,omitempty"`
	// Forecasted traffic metrics for this point.
	Forecast *Forecast `protobuf:"bytes,2,opt,name=forecast,proto3" json:"forecast,omitempty"`
	// The forecasted allocation and traffic metrics for each planned product
	// at this point on the reach curve.
	PlannedProductReachForecasts []*PlannedProductReachForecast `protobuf:"bytes,4,rep,name=planned_product_reach_forecasts,json=plannedProductReachForecasts,proto3" json:"planned_product_reach_forecasts,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ReachForecast) Reset() {
	*x = ReachForecast{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReachForecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReachForecast) ProtoMessage() {}

func (x *ReachForecast) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReachForecast.ProtoReflect.Descriptor instead.
func (*ReachForecast) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{21}
}

func (x *ReachForecast) GetCostMicros() int64 {
	if x != nil {
		return x.CostMicros
	}
	return 0
}

func (x *ReachForecast) GetForecast() *Forecast {
	if x != nil {
		return x.Forecast
	}
	return nil
}

func (x *ReachForecast) GetPlannedProductReachForecasts() []*PlannedProductReachForecast {
	if x != nil {
		return x.PlannedProductReachForecasts
	}
	return nil
}

// Forecasted traffic metrics for the planned products and targeting.
type Forecast struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of unique people reached at least
	// GenerateReachForecastRequest.min_effective_frequency or
	// GenerateReachForecastRequest.effective_frequency_limit times that exactly
	// matches the Targeting.
	//
	// Note that a minimum number of unique people must be reached in order for
	// data to be reported. If the minimum number is not met, the on_target_reach
	// value will be rounded to 0.
	OnTargetReach *int64 `protobuf:"varint,5,opt,name=on_target_reach,json=onTargetReach,proto3,oneof" json:"on_target_reach,omitempty"`
	// Total number of unique people reached at least
	// GenerateReachForecastRequest.min_effective_frequency or
	// GenerateReachForecastRequest.effective_frequency_limit times. This includes
	// people that may fall outside the specified Targeting.
	//
	// Note that a minimum number of unique people must be reached in order for
	// data to be reported. If the minimum number is not met, the total_reach
	// value will be rounded to 0.
	TotalReach *int64 `protobuf:"varint,6,opt,name=total_reach,json=totalReach,proto3,oneof" json:"total_reach,omitempty"`
	// Number of ad impressions that exactly matches the Targeting.
	OnTargetImpressions *int64 `protobuf:"varint,7,opt,name=on_target_impressions,json=onTargetImpressions,proto3,oneof" json:"on_target_impressions,omitempty"`
	// Total number of ad impressions. This includes impressions that may fall
	// outside the specified Targeting, due to insufficient information on
	// signed-in users.
	TotalImpressions *int64 `protobuf:"varint,8,opt,name=total_impressions,json=totalImpressions,proto3,oneof" json:"total_impressions,omitempty"`
	// Number of times the ad's impressions were considered viewable.
	// See https://support.google.com/google-ads/answer/7029393 for
	// more information about what makes an ad viewable and how
	// viewability is measured.
	ViewableImpressions *int64 `protobuf:"varint,9,opt,name=viewable_impressions,json=viewableImpressions,proto3,oneof" json:"viewable_impressions,omitempty"`
	// A list of effective frequency forecasts. The list is ordered starting with
	// 1+ and ending with the value set in
	// GenerateReachForecastRequest.effective_frequency_limit. If no
	// effective_frequency_limit was set, this list will be empty.
	EffectiveFrequencyBreakdowns []*EffectiveFrequencyBreakdown `protobuf:"bytes,10,rep,name=effective_frequency_breakdowns,json=effectiveFrequencyBreakdowns,proto3" json:"effective_frequency_breakdowns,omitempty"`
	// Number of unique people reached that exactly matches the Targeting
	// including co-viewers.
	OnTargetCoviewReach *int64 `protobuf:"varint,11,opt,name=on_target_coview_reach,json=onTargetCoviewReach,proto3,oneof" json:"on_target_coview_reach,omitempty"`
	// Number of unique people reached including co-viewers. This includes
	// people that may fall outside the specified Targeting.
	TotalCoviewReach *int64 `protobuf:"varint,12,opt,name=total_coview_reach,json=totalCoviewReach,proto3,oneof" json:"total_coview_reach,omitempty"`
	// Number of ad impressions that exactly matches the Targeting including
	// co-viewers.
	OnTargetCoviewImpressions *int64 `protobuf:"varint,13,opt,name=on_target_coview_impressions,json=onTargetCoviewImpressions,proto3,oneof" json:"on_target_coview_impressions,omitempty"`
	// Total number of ad impressions including co-viewers. This includes
	// impressions that may fall outside the specified Targeting, due to
	// insufficient information on signed-in users.
	TotalCoviewImpressions *int64 `protobuf:"varint,14,opt,name=total_coview_impressions,json=totalCoviewImpressions,proto3,oneof" json:"total_coview_impressions,omitempty"`
	// Number of ad views forecasted for the specified product and targeting.
	// A view is counted when a viewer views a larger portion or the entirety of
	// an ad beyond an impression.
	//
	// See https://support.google.com/google-ads/answer/2375431 for
	// more information on views.
	Views *int64 `protobuf:"varint,15,opt,name=views,proto3,oneof" json:"views,omitempty"`
	// The number of conversions.
	// This metric is only available for DEMAND_GEN plannable products.
	//
	// See https://support.google.com/google-ads/answer/2375431 for
	// more information on conversions.
	Conversions   *float64 `protobuf:"fixed64,16,opt,name=conversions,proto3,oneof" json:"conversions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Forecast) Reset() {
	*x = Forecast{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Forecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Forecast) ProtoMessage() {}

func (x *Forecast) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Forecast.ProtoReflect.Descriptor instead.
func (*Forecast) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{22}
}

func (x *Forecast) GetOnTargetReach() int64 {
	if x != nil && x.OnTargetReach != nil {
		return *x.OnTargetReach
	}
	return 0
}

func (x *Forecast) GetTotalReach() int64 {
	if x != nil && x.TotalReach != nil {
		return *x.TotalReach
	}
	return 0
}

func (x *Forecast) GetOnTargetImpressions() int64 {
	if x != nil && x.OnTargetImpressions != nil {
		return *x.OnTargetImpressions
	}
	return 0
}

func (x *Forecast) GetTotalImpressions() int64 {
	if x != nil && x.TotalImpressions != nil {
		return *x.TotalImpressions
	}
	return 0
}

func (x *Forecast) GetViewableImpressions() int64 {
	if x != nil && x.ViewableImpressions != nil {
		return *x.ViewableImpressions
	}
	return 0
}

func (x *Forecast) GetEffectiveFrequencyBreakdowns() []*EffectiveFrequencyBreakdown {
	if x != nil {
		return x.EffectiveFrequencyBreakdowns
	}
	return nil
}

func (x *Forecast) GetOnTargetCoviewReach() int64 {
	if x != nil && x.OnTargetCoviewReach != nil {
		return *x.OnTargetCoviewReach
	}
	return 0
}

func (x *Forecast) GetTotalCoviewReach() int64 {
	if x != nil && x.TotalCoviewReach != nil {
		return *x.TotalCoviewReach
	}
	return 0
}

func (x *Forecast) GetOnTargetCoviewImpressions() int64 {
	if x != nil && x.OnTargetCoviewImpressions != nil {
		return *x.OnTargetCoviewImpressions
	}
	return 0
}

func (x *Forecast) GetTotalCoviewImpressions() int64 {
	if x != nil && x.TotalCoviewImpressions != nil {
		return *x.TotalCoviewImpressions
	}
	return 0
}

func (x *Forecast) GetViews() int64 {
	if x != nil && x.Views != nil {
		return *x.Views
	}
	return 0
}

func (x *Forecast) GetConversions() float64 {
	if x != nil && x.Conversions != nil {
		return *x.Conversions
	}
	return 0
}

// The forecasted allocation and traffic metrics for a specific product
// at a point on the reach curve.
type PlannedProductReachForecast struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Selected product for planning. The product codes returned are within the
	// set of the ones returned by ListPlannableProducts when using the same
	// location ID.
	PlannableProductCode string `protobuf:"bytes,1,opt,name=plannable_product_code,json=plannableProductCode,proto3" json:"plannable_product_code,omitempty"`
	// The cost in micros. This may differ from the product's input allocation
	// if one or more planned products cannot fulfill the budget because of
	// limited inventory.
	CostMicros int64 `protobuf:"varint,2,opt,name=cost_micros,json=costMicros,proto3" json:"cost_micros,omitempty"`
	// Forecasted traffic metrics for this product.
	PlannedProductForecast *PlannedProductForecast `protobuf:"bytes,3,opt,name=planned_product_forecast,json=plannedProductForecast,proto3" json:"planned_product_forecast,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PlannedProductReachForecast) Reset() {
	*x = PlannedProductReachForecast{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlannedProductReachForecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedProductReachForecast) ProtoMessage() {}

func (x *PlannedProductReachForecast) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedProductReachForecast.ProtoReflect.Descriptor instead.
func (*PlannedProductReachForecast) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{23}
}

func (x *PlannedProductReachForecast) GetPlannableProductCode() string {
	if x != nil {
		return x.PlannableProductCode
	}
	return ""
}

func (x *PlannedProductReachForecast) GetCostMicros() int64 {
	if x != nil {
		return x.CostMicros
	}
	return 0
}

func (x *PlannedProductReachForecast) GetPlannedProductForecast() *PlannedProductForecast {
	if x != nil {
		return x.PlannedProductForecast
	}
	return nil
}

// Forecasted traffic metrics for a planned product.
type PlannedProductForecast struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of unique people reached that exactly matches the Targeting.
	//
	// Note that a minimum number of unique people must be reached in order for
	// data to be reported. If the minimum number is not met, the on_target_reach
	// value will be rounded to 0.
	OnTargetReach int64 `protobuf:"varint,1,opt,name=on_target_reach,json=onTargetReach,proto3" json:"on_target_reach,omitempty"`
	// Number of unique people reached. This includes people that may fall
	// outside the specified Targeting.
	//
	// Note that a minimum number of unique people must be reached in order for
	// data to be reported. If the minimum number is not met, the total_reach
	// value will be rounded to 0.
	TotalReach int64 `protobuf:"varint,2,opt,name=total_reach,json=totalReach,proto3" json:"total_reach,omitempty"`
	// Number of ad impressions that exactly matches the Targeting.
	OnTargetImpressions int64 `protobuf:"varint,3,opt,name=on_target_impressions,json=onTargetImpressions,proto3" json:"on_target_impressions,omitempty"`
	// Total number of ad impressions. This includes impressions that may fall
	// outside the specified Targeting, due to insufficient information on
	// signed-in users.
	TotalImpressions int64 `protobuf:"varint,4,opt,name=total_impressions,json=totalImpressions,proto3" json:"total_impressions,omitempty"`
	// Number of times the ad's impressions were considered viewable.
	// See https://support.google.com/google-ads/answer/7029393 for
	// more information about what makes an ad viewable and how
	// viewability is measured.
	ViewableImpressions *int64 `protobuf:"varint,5,opt,name=viewable_impressions,json=viewableImpressions,proto3,oneof" json:"viewable_impressions,omitempty"`
	// Number of unique people reached that exactly matches the Targeting
	// including co-viewers.
	OnTargetCoviewReach *int64 `protobuf:"varint,6,opt,name=on_target_coview_reach,json=onTargetCoviewReach,proto3,oneof" json:"on_target_coview_reach,omitempty"`
	// Number of unique people reached including co-viewers. This includes
	// people that may fall outside the specified Targeting.
	TotalCoviewReach *int64 `protobuf:"varint,7,opt,name=total_coview_reach,json=totalCoviewReach,proto3,oneof" json:"total_coview_reach,omitempty"`
	// Number of ad impressions that exactly matches the Targeting including
	// co-viewers.
	OnTargetCoviewImpressions *int64 `protobuf:"varint,8,opt,name=on_target_coview_impressions,json=onTargetCoviewImpressions,proto3,oneof" json:"on_target_coview_impressions,omitempty"`
	// Total number of ad impressions including co-viewers. This includes
	// impressions that may fall outside the specified Targeting, due to
	// insufficient information on signed-in users.
	TotalCoviewImpressions *int64 `protobuf:"varint,9,opt,name=total_coview_impressions,json=totalCoviewImpressions,proto3,oneof" json:"total_coview_impressions,omitempty"`
	// The number of times per selected time unit a user will see an ad, averaged
	// over the number of time units in the forecast length. This field will only
	// be populated for a Target Frequency campaign.
	//
	// See https://support.google.com/google-ads/answer/12400225 for more
	// information about Target Frequency campaigns.
	AverageFrequency *float64 `protobuf:"fixed64,10,opt,name=average_frequency,json=averageFrequency,proto3,oneof" json:"average_frequency,omitempty"`
	// Number of ad views forecasted for the specified product and targeting.
	// A view is counted when a viewer views a larger portion or the entirety of
	// an ad beyond an impression.
	//
	// See https://support.google.com/google-ads/answer/2375431 for
	// more information on views.
	Views *int64 `protobuf:"varint,11,opt,name=views,proto3,oneof" json:"views,omitempty"`
	// The number of conversions.
	// This metric is only available for DEMAND_GEN plannable products.
	//
	// See https://support.google.com/google-ads/answer/2375431 for
	// more information on conversions.
	Conversions   *float64 `protobuf:"fixed64,12,opt,name=conversions,proto3,oneof" json:"conversions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlannedProductForecast) Reset() {
	*x = PlannedProductForecast{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlannedProductForecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedProductForecast) ProtoMessage() {}

func (x *PlannedProductForecast) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedProductForecast.ProtoReflect.Descriptor instead.
func (*PlannedProductForecast) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{24}
}

func (x *PlannedProductForecast) GetOnTargetReach() int64 {
	if x != nil {
		return x.OnTargetReach
	}
	return 0
}

func (x *PlannedProductForecast) GetTotalReach() int64 {
	if x != nil {
		return x.TotalReach
	}
	return 0
}

func (x *PlannedProductForecast) GetOnTargetImpressions() int64 {
	if x != nil {
		return x.OnTargetImpressions
	}
	return 0
}

func (x *PlannedProductForecast) GetTotalImpressions() int64 {
	if x != nil {
		return x.TotalImpressions
	}
	return 0
}

func (x *PlannedProductForecast) GetViewableImpressions() int64 {
	if x != nil && x.ViewableImpressions != nil {
		return *x.ViewableImpressions
	}
	return 0
}

func (x *PlannedProductForecast) GetOnTargetCoviewReach() int64 {
	if x != nil && x.OnTargetCoviewReach != nil {
		return *x.OnTargetCoviewReach
	}
	return 0
}

func (x *PlannedProductForecast) GetTotalCoviewReach() int64 {
	if x != nil && x.TotalCoviewReach != nil {
		return *x.TotalCoviewReach
	}
	return 0
}

func (x *PlannedProductForecast) GetOnTargetCoviewImpressions() int64 {
	if x != nil && x.OnTargetCoviewImpressions != nil {
		return *x.OnTargetCoviewImpressions
	}
	return 0
}

func (x *PlannedProductForecast) GetTotalCoviewImpressions() int64 {
	if x != nil && x.TotalCoviewImpressions != nil {
		return *x.TotalCoviewImpressions
	}
	return 0
}

func (x *PlannedProductForecast) GetAverageFrequency() float64 {
	if x != nil && x.AverageFrequency != nil {
		return *x.AverageFrequency
	}
	return 0
}

func (x *PlannedProductForecast) GetViews() int64 {
	if x != nil && x.Views != nil {
		return *x.Views
	}
	return 0
}

func (x *PlannedProductForecast) GetConversions() float64 {
	if x != nil && x.Conversions != nil {
		return *x.Conversions
	}
	return 0
}

// Audience metrics for the planned products.
// These metrics consider the following targeting dimensions:
//
// - Location
// - PlannableAgeRange
// - Gender
// - AudienceTargeting (only for youtube_audience_size)
type OnTargetAudienceMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reference audience size matching the considered targeting for YouTube.
	YoutubeAudienceSize *int64 `protobuf:"varint,3,opt,name=youtube_audience_size,json=youtubeAudienceSize,proto3,oneof" json:"youtube_audience_size,omitempty"`
	// Reference audience size matching the considered targeting for Census.
	CensusAudienceSize *int64 `protobuf:"varint,4,opt,name=census_audience_size,json=censusAudienceSize,proto3,oneof" json:"census_audience_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OnTargetAudienceMetrics) Reset() {
	*x = OnTargetAudienceMetrics{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnTargetAudienceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnTargetAudienceMetrics) ProtoMessage() {}

func (x *OnTargetAudienceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnTargetAudienceMetrics.ProtoReflect.Descriptor instead.
func (*OnTargetAudienceMetrics) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{25}
}

func (x *OnTargetAudienceMetrics) GetYoutubeAudienceSize() int64 {
	if x != nil && x.YoutubeAudienceSize != nil {
		return *x.YoutubeAudienceSize
	}
	return 0
}

func (x *OnTargetAudienceMetrics) GetCensusAudienceSize() int64 {
	if x != nil && x.CensusAudienceSize != nil {
		return *x.CensusAudienceSize
	}
	return 0
}

// A breakdown of the number of unique people reached at a given effective
// frequency.
type EffectiveFrequencyBreakdown struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The effective frequency [1-10].
	EffectiveFrequency int32 `protobuf:"varint,1,opt,name=effective_frequency,json=effectiveFrequency,proto3" json:"effective_frequency,omitempty"`
	// The number of unique people reached at least effective_frequency times that
	// exactly matches the Targeting.
	//
	// Note that a minimum number of unique people must be reached in order for
	// data to be reported. If the minimum number is not met, the on_target_reach
	// value will be rounded to 0.
	OnTargetReach int64 `protobuf:"varint,2,opt,name=on_target_reach,json=onTargetReach,proto3" json:"on_target_reach,omitempty"`
	// Total number of unique people reached at least effective_frequency times.
	// This includes people that may fall outside the specified Targeting.
	//
	// Note that a minimum number of unique people must be reached in order for
	// data to be reported. If the minimum number is not met, the total_reach
	// value will be rounded to 0.
	TotalReach int64 `protobuf:"varint,3,opt,name=total_reach,json=totalReach,proto3" json:"total_reach,omitempty"`
	// The number of users (including co-viewing users) reached for the associated
	// effective_frequency value.
	EffectiveCoviewReach *int64 `protobuf:"varint,4,opt,name=effective_coview_reach,json=effectiveCoviewReach,proto3,oneof" json:"effective_coview_reach,omitempty"`
	// The number of users (including co-viewing users) reached for the associated
	// effective_frequency value within the specified plan demographic.
	OnTargetEffectiveCoviewReach *int64 `protobuf:"varint,5,opt,name=on_target_effective_coview_reach,json=onTargetEffectiveCoviewReach,proto3,oneof" json:"on_target_effective_coview_reach,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *EffectiveFrequencyBreakdown) Reset() {
	*x = EffectiveFrequencyBreakdown{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EffectiveFrequencyBreakdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EffectiveFrequencyBreakdown) ProtoMessage() {}

func (x *EffectiveFrequencyBreakdown) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EffectiveFrequencyBreakdown.ProtoReflect.Descriptor instead.
func (*EffectiveFrequencyBreakdown) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{26}
}

func (x *EffectiveFrequencyBreakdown) GetEffectiveFrequency() int32 {
	if x != nil {
		return x.EffectiveFrequency
	}
	return 0
}

func (x *EffectiveFrequencyBreakdown) GetOnTargetReach() int64 {
	if x != nil {
		return x.OnTargetReach
	}
	return 0
}

func (x *EffectiveFrequencyBreakdown) GetTotalReach() int64 {
	if x != nil {
		return x.TotalReach
	}
	return 0
}

func (x *EffectiveFrequencyBreakdown) GetEffectiveCoviewReach() int64 {
	if x != nil && x.EffectiveCoviewReach != nil {
		return *x.EffectiveCoviewReach
	}
	return 0
}

func (x *EffectiveFrequencyBreakdown) GetOnTargetEffectiveCoviewReach() int64 {
	if x != nil && x.OnTargetEffectiveCoviewReach != nil {
		return *x.OnTargetEffectiveCoviewReach
	}
	return 0
}

// Controls forecast metrics to return.
type ForecastMetricOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates whether to include co-view metrics in the response forecast.
	IncludeCoview bool `protobuf:"varint,1,opt,name=include_coview,json=includeCoview,proto3" json:"include_coview,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForecastMetricOptions) Reset() {
	*x = ForecastMetricOptions{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForecastMetricOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastMetricOptions) ProtoMessage() {}

func (x *ForecastMetricOptions) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastMetricOptions.ProtoReflect.Descriptor instead.
func (*ForecastMetricOptions) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{27}
}

func (x *ForecastMetricOptions) GetIncludeCoview() bool {
	if x != nil {
		return x.IncludeCoview
	}
	return false
}

// Audience targeting for reach forecast.
type AudienceTargeting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of audiences based on user interests to be targeted.
	UserInterest []*common.UserInterestInfo `protobuf:"bytes,1,rep,name=user_interest,json=userInterest,proto3" json:"user_interest,omitempty"`
	// List of audiences based on user lists to be targeted.
	UserLists     []*common.UserListInfo `protobuf:"bytes,2,rep,name=user_lists,json=userLists,proto3" json:"user_lists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudienceTargeting) Reset() {
	*x = AudienceTargeting{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudienceTargeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudienceTargeting) ProtoMessage() {}

func (x *AudienceTargeting) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudienceTargeting.ProtoReflect.Descriptor instead.
func (*AudienceTargeting) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{28}
}

func (x *AudienceTargeting) GetUserInterest() []*common.UserInterestInfo {
	if x != nil {
		return x.UserInterest
	}
	return nil
}

func (x *AudienceTargeting) GetUserLists() []*common.UserListInfo {
	if x != nil {
		return x.UserLists
	}
	return nil
}

// Advanced targeting settings for products.
type AdvancedProductTargeting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Surface targeting settings for this product.
	SurfaceTargetingSettings *SurfaceTargeting `protobuf:"bytes,2,opt,name=surface_targeting_settings,json=surfaceTargetingSettings,proto3" json:"surface_targeting_settings,omitempty"`
	// Settings for a Target frequency campaign. Must be set when selecting the
	// TARGET_FREQUENCY product.
	//
	// See https://support.google.com/google-ads/answer/12400225 for more
	// information about Target Frequency campaigns.
	TargetFrequencySettings *TargetFrequencySettings `protobuf:"bytes,3,opt,name=target_frequency_settings,json=targetFrequencySettings,proto3" json:"target_frequency_settings,omitempty"`
	// Targeting options for this product.
	//
	// Types that are valid to be assigned to AdvancedTargeting:
	//
	//	*AdvancedProductTargeting_YoutubeSelectSettings
	AdvancedTargeting isAdvancedProductTargeting_AdvancedTargeting `protobuf_oneof:"advanced_targeting"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AdvancedProductTargeting) Reset() {
	*x = AdvancedProductTargeting{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdvancedProductTargeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedProductTargeting) ProtoMessage() {}

func (x *AdvancedProductTargeting) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedProductTargeting.ProtoReflect.Descriptor instead.
func (*AdvancedProductTargeting) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{29}
}

func (x *AdvancedProductTargeting) GetSurfaceTargetingSettings() *SurfaceTargeting {
	if x != nil {
		return x.SurfaceTargetingSettings
	}
	return nil
}

func (x *AdvancedProductTargeting) GetTargetFrequencySettings() *TargetFrequencySettings {
	if x != nil {
		return x.TargetFrequencySettings
	}
	return nil
}

func (x *AdvancedProductTargeting) GetAdvancedTargeting() isAdvancedProductTargeting_AdvancedTargeting {
	if x != nil {
		return x.AdvancedTargeting
	}
	return nil
}

func (x *AdvancedProductTargeting) GetYoutubeSelectSettings() *YouTubeSelectSettings {
	if x != nil {
		if x, ok := x.AdvancedTargeting.(*AdvancedProductTargeting_YoutubeSelectSettings); ok {
			return x.YoutubeSelectSettings
		}
	}
	return nil
}

type isAdvancedProductTargeting_AdvancedTargeting interface {
	isAdvancedProductTargeting_AdvancedTargeting()
}

type AdvancedProductTargeting_YoutubeSelectSettings struct {
	// Settings for YouTube Select targeting.
	YoutubeSelectSettings *YouTubeSelectSettings `protobuf:"bytes,1,opt,name=youtube_select_settings,json=youtubeSelectSettings,proto3,oneof"`
}

func (*AdvancedProductTargeting_YoutubeSelectSettings) isAdvancedProductTargeting_AdvancedTargeting() {
}

// Request settings for YouTube Select Lineups
type YouTubeSelectSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Lineup for YouTube Select Targeting.
	LineupId      int64 `protobuf:"varint,1,opt,name=lineup_id,json=lineupId,proto3" json:"lineup_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YouTubeSelectSettings) Reset() {
	*x = YouTubeSelectSettings{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YouTubeSelectSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouTubeSelectSettings) ProtoMessage() {}

func (x *YouTubeSelectSettings) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouTubeSelectSettings.ProtoReflect.Descriptor instead.
func (*YouTubeSelectSettings) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{30}
}

func (x *YouTubeSelectSettings) GetLineupId() int64 {
	if x != nil {
		return x.LineupId
	}
	return 0
}

// A Plannable YouTube Select Lineup for product targeting.
type YouTubeSelectLineUp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the YouTube Select Lineup.
	LineupId int64 `protobuf:"varint,1,opt,name=lineup_id,json=lineupId,proto3" json:"lineup_id,omitempty"`
	// The unique name of the YouTube Select Lineup.
	LineupName    string `protobuf:"bytes,2,opt,name=lineup_name,json=lineupName,proto3" json:"lineup_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YouTubeSelectLineUp) Reset() {
	*x = YouTubeSelectLineUp{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YouTubeSelectLineUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouTubeSelectLineUp) ProtoMessage() {}

func (x *YouTubeSelectLineUp) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouTubeSelectLineUp.ProtoReflect.Descriptor instead.
func (*YouTubeSelectLineUp) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{31}
}

func (x *YouTubeSelectLineUp) GetLineupId() int64 {
	if x != nil {
		return x.LineupId
	}
	return 0
}

func (x *YouTubeSelectLineUp) GetLineupName() string {
	if x != nil {
		return x.LineupName
	}
	return ""
}

// The surface targeting combinations available for an ad product.
type SurfaceTargetingCombinations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Default surface targeting applied to the ad product.
	DefaultTargeting *SurfaceTargeting `protobuf:"bytes,1,opt,name=default_targeting,json=defaultTargeting,proto3" json:"default_targeting,omitempty"`
	// Available surface target combinations for the ad product.
	AvailableTargetingCombinations []*SurfaceTargeting `protobuf:"bytes,2,rep,name=available_targeting_combinations,json=availableTargetingCombinations,proto3" json:"available_targeting_combinations,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *SurfaceTargetingCombinations) Reset() {
	*x = SurfaceTargetingCombinations{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurfaceTargetingCombinations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurfaceTargetingCombinations) ProtoMessage() {}

func (x *SurfaceTargetingCombinations) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurfaceTargetingCombinations.ProtoReflect.Descriptor instead.
func (*SurfaceTargetingCombinations) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{32}
}

func (x *SurfaceTargetingCombinations) GetDefaultTargeting() *SurfaceTargeting {
	if x != nil {
		return x.DefaultTargeting
	}
	return nil
}

func (x *SurfaceTargetingCombinations) GetAvailableTargetingCombinations() []*SurfaceTargeting {
	if x != nil {
		return x.AvailableTargetingCombinations
	}
	return nil
}

// Container for surfaces for a product. Surfaces refer to the available types
// of ad inventories such as In-Feed, In-Stream, and Shorts.
type SurfaceTargeting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of surfaces available to target.
	Surfaces      []enums.ReachPlanSurfaceEnum_ReachPlanSurface `protobuf:"varint,1,rep,packed,name=surfaces,proto3,enum=google.ads.googleads.v20.enums.ReachPlanSurfaceEnum_ReachPlanSurface" json:"surfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SurfaceTargeting) Reset() {
	*x = SurfaceTargeting{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurfaceTargeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurfaceTargeting) ProtoMessage() {}

func (x *SurfaceTargeting) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurfaceTargeting.ProtoReflect.Descriptor instead.
func (*SurfaceTargeting) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{33}
}

func (x *SurfaceTargeting) GetSurfaces() []enums.ReachPlanSurfaceEnum_ReachPlanSurface {
	if x != nil {
		return x.Surfaces
	}
	return nil
}

// Target Frequency settings for a supported product.
type TargetFrequencySettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The time unit used to describe the time frame for
	// target_frequency.
	TimeUnit enums.TargetFrequencyTimeUnitEnum_TargetFrequencyTimeUnit `protobuf:"varint,1,opt,name=time_unit,json=timeUnit,proto3,enum=google.ads.googleads.v20.enums.TargetFrequencyTimeUnitEnum_TargetFrequencyTimeUnit" json:"time_unit,omitempty"`
	// Required. The target frequency goal per selected time unit.
	TargetFrequency int32 `protobuf:"varint,2,opt,name=target_frequency,json=targetFrequency,proto3" json:"target_frequency,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TargetFrequencySettings) Reset() {
	*x = TargetFrequencySettings{}
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetFrequencySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetFrequencySettings) ProtoMessage() {}

func (x *TargetFrequencySettings) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetFrequencySettings.ProtoReflect.Descriptor instead.
func (*TargetFrequencySettings) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP(), []int{34}
}

func (x *TargetFrequencySettings) GetTimeUnit() enums.TargetFrequencyTimeUnitEnum_TargetFrequencyTimeUnit {
	if x != nil {
		return x.TimeUnit
	}
	return enums.TargetFrequencyTimeUnitEnum_TargetFrequencyTimeUnit(0)
}

func (x *TargetFrequencySettings) GetTargetFrequency() int32 {
	if x != nil {
		return x.TargetFrequency
	}
	return 0
}

var File_google_ads_googleads_v20_services_reach_plan_service_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDesc = "" +
	"\n" +
	":google/ads/googleads/v20/services/reach_plan_service.proto\x12!google.ads.googleads.v20.services\x1aAgoogle/ads/googleads/v20/common/additional_application_info.proto\x1a.google/ads/googleads/v20/common/criteria.proto\x1a+google/ads/googleads/v20/common/dates.proto\x1a<google/ads/googleads/v20/enums/frequency_cap_time_unit.proto\x1a9google/ads/googleads/v20/enums/reach_plan_age_range.proto\x1aEgoogle/ads/googleads/v20/enums/reach_plan_conversion_rate_model.proto\x1a7google/ads/googleads/v20/enums/reach_plan_network.proto\x1aJgoogle/ads/googleads/v20/enums/reach_plan_plannable_user_list_status.proto\x1a7google/ads/googleads/v20/enums/reach_plan_surface.proto\x1a?google/ads/googleads/v20/enums/target_frequency_time_unit.proto\x1a3google/ads/googleads/v20/enums/user_list_type.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\"\x8d\x02\n" +
	"\x1eGenerateConversionRatesRequest\x12$\n" +
	"\vcustomer_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"customerId\x125\n" +
	"\x14customer_reach_group\x18\x02 \x01(\tH\x00R\x12customerReachGroup\x88\x01\x01\x12u\n" +
	"\x16reach_application_info\x18\x03 \x01(\v2:.google.ads.googleads.v20.common.AdditionalApplicationInfoB\x03\xe0A\x01R\x14reachApplicationInfoB\x17\n" +
	"\x15_customer_reach_group\"\x9e\x01\n" +
	"\x1fGenerateConversionRatesResponse\x12{\n" +
	"\x1bconversion_rate_suggestions\x18\x01 \x03(\v2;.google.ads.googleads.v20.services.ConversionRateSuggestionR\x19conversionRateSuggestions\"\x8d\x02\n" +
	"\x18ConversionRateSuggestion\x12\x91\x01\n" +
	"\x15conversion_rate_model\x18\x01 \x01(\x0e2].google.ads.googleads.v20.enums.ReachPlanConversionRateModelEnum.ReachPlanConversionRateModelR\x13conversionRateModel\x124\n" +
	"\x16plannable_product_code\x18\x02 \x01(\tR\x14plannableProductCode\x12'\n" +
	"\x0fconversion_rate\x18\x03 \x01(\x01R\x0econversionRate\"\x96\x01\n" +
	"\x1dListPlannableLocationsRequest\x12u\n" +
	"\x16reach_application_info\x18\x01 \x01(\v2:.google.ads.googleads.v20.common.AdditionalApplicationInfoB\x03\xe0A\x01R\x14reachApplicationInfo\"\x87\x01\n" +
	"\x1eListPlannableLocationsResponse\x12e\n" +
	"\x13plannable_locations\x18\x01 \x03(\v24.google.ads.googleads.v20.services.PlannableLocationR\x12plannableLocations\"\x8d\x02\n" +
	"\x11PlannableLocation\x12\x13\n" +
	"\x02id\x18\x04 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x05 \x01(\tH\x01R\x04name\x88\x01\x01\x12/\n" +
	"\x11parent_country_id\x18\x06 \x01(\x03H\x02R\x0fparentCountryId\x88\x01\x01\x12&\n" +
	"\fcountry_code\x18\a \x01(\tH\x03R\vcountryCode\x88\x01\x01\x12(\n" +
	"\rlocation_type\x18\b \x01(\tH\x04R\flocationType\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_nameB\x14\n" +
	"\x12_parent_country_idB\x0f\n" +
	"\r_country_codeB\x10\n" +
	"\x0e_location_type\"\xce\x01\n" +
	"\x1cListPlannableProductsRequest\x127\n" +
	"\x15plannable_location_id\x18\x02 \x01(\tB\x03\xe0A\x02R\x13plannableLocationId\x12u\n" +
	"\x16reach_application_info\x18\x03 \x01(\v2:.google.ads.googleads.v20.common.AdditionalApplicationInfoB\x03\xe0A\x01R\x14reachApplicationInfo\"~\n" +
	"\x1dListPlannableProductsResponse\x12]\n" +
	"\x10product_metadata\x18\x01 \x03(\v22.google.ads.googleads.v20.services.ProductMetadataR\x0fproductMetadata\"\x85\x02\n" +
	"\x0fProductMetadata\x129\n" +
	"\x16plannable_product_code\x18\x04 \x01(\tH\x00R\x14plannableProductCode\x88\x01\x01\x124\n" +
	"\x16plannable_product_name\x18\x03 \x01(\tR\x14plannableProductName\x12f\n" +
	"\x13plannable_targeting\x18\x02 \x01(\v25.google.ads.googleads.v20.services.PlannableTargetingR\x12plannableTargetingB\x19\n" +
	"\x17_plannable_product_code\"\x95\x01\n" +
	"\x1dListPlannableUserListsRequest\x12$\n" +
	"\vcustomer_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"customerId\x125\n" +
	"\x14customer_reach_group\x18\x02 \x01(\tH\x00R\x12customerReachGroup\x88\x01\x01B\x17\n" +
	"\x15_customer_reach_group\"\x88\x01\n" +
	"\x1eListPlannableUserListsResponse\x12f\n" +
	"\x14plannable_user_lists\x18\x01 \x03(\v24.google.ads.googleads.v20.services.PlannableUserListR\x12plannableUserLists\"\x83\x03\n" +
	"\x11PlannableUserList\x12S\n" +
	"\x0euser_list_info\x18\x01 \x01(\v2-.google.ads.googleads.v20.common.UserListInfoR\fuserListInfo\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12c\n" +
	"\x0euser_list_type\x18\x03 \x01(\x0e2=.google.ads.googleads.v20.enums.UserListTypeEnum.UserListTypeR\fuserListType\x12\x90\x01\n" +
	"\x10plannable_status\x18\x04 \x01(\x0e2e.google.ads.googleads.v20.enums.ReachPlanPlannableUserListStatusEnum.ReachPlanPlannableUserListStatusR\x0fplannableStatus\"\xc9\x04\n" +
	"\x12PlannableTargeting\x12f\n" +
	"\n" +
	"age_ranges\x18\x01 \x03(\x0e2G.google.ads.googleads.v20.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRangeR\tageRanges\x12E\n" +
	"\agenders\x18\x02 \x03(\v2+.google.ads.googleads.v20.common.GenderInfoR\agenders\x12E\n" +
	"\adevices\x18\x03 \x03(\v2+.google.ads.googleads.v20.common.DeviceInfoR\adevices\x12a\n" +
	"\bnetworks\x18\x04 \x03(\x0e2E.google.ads.googleads.v20.enums.ReachPlanNetworkEnum.ReachPlanNetworkR\bnetworks\x12l\n" +
	"\x16youtube_select_lineups\x18\x05 \x03(\v26.google.ads.googleads.v20.services.YouTubeSelectLineUpR\x14youtubeSelectLineups\x12l\n" +
	"\x11surface_targeting\x18\x06 \x01(\v2?.google.ads.googleads.v20.services.SurfaceTargetingCombinationsR\x10surfaceTargeting\"\x85\t\n" +
	"\x1cGenerateReachForecastRequest\x12$\n" +
	"\vcustomer_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"customerId\x12(\n" +
	"\rcurrency_code\x18\t \x01(\tH\x00R\fcurrencyCode\x88\x01\x01\x12e\n" +
	"\x11campaign_duration\x18\x03 \x01(\v23.google.ads.googleads.v20.services.CampaignDurationB\x03\xe0A\x02R\x10campaignDuration\x125\n" +
	"\x14cookie_frequency_cap\x18\n" +
	" \x01(\x05H\x01R\x12cookieFrequencyCap\x88\x01\x01\x12p\n" +
	"\x1ccookie_frequency_cap_setting\x18\b \x01(\v2/.google.ads.googleads.v20.services.FrequencyCapR\x19cookieFrequencyCapSetting\x12;\n" +
	"\x17min_effective_frequency\x18\v \x01(\x05H\x02R\x15minEffectiveFrequency\x88\x01\x01\x12{\n" +
	"\x19effective_frequency_limit\x18\f \x01(\v2:.google.ads.googleads.v20.services.EffectiveFrequencyLimitH\x03R\x17effectiveFrequencyLimit\x88\x01\x01\x12J\n" +
	"\ttargeting\x18\x06 \x01(\v2,.google.ads.googleads.v20.services.TargetingR\ttargeting\x12a\n" +
	"\x10planned_products\x18\a \x03(\v21.google.ads.googleads.v20.services.PlannedProductB\x03\xe0A\x02R\x0fplannedProducts\x12p\n" +
	"\x17forecast_metric_options\x18\r \x01(\v28.google.ads.googleads.v20.services.ForecastMetricOptionsR\x15forecastMetricOptions\x125\n" +
	"\x14customer_reach_group\x18\x0e \x01(\tH\x04R\x12customerReachGroup\x88\x01\x01\x12u\n" +
	"\x16reach_application_info\x18\x0f \x01(\v2:.google.ads.googleads.v20.common.AdditionalApplicationInfoB\x03\xe0A\x01R\x14reachApplicationInfoB\x10\n" +
	"\x0e_currency_codeB\x17\n" +
	"\x15_cookie_frequency_capB\x1a\n" +
	"\x18_min_effective_frequencyB\x1c\n" +
	"\x1a_effective_frequency_limitB\x17\n" +
	"\x15_customer_reach_group\"h\n" +
	"\x17EffectiveFrequencyLimit\x12M\n" +
	"#effective_frequency_breakdown_limit\x18\x01 \x01(\x05R effectiveFrequencyBreakdownLimit\"\xa6\x01\n" +
	"\fFrequencyCap\x12%\n" +
	"\vimpressions\x18\x03 \x01(\x05B\x03\xe0A\x02R\vimpressions\x12o\n" +
	"\ttime_unit\x18\x02 \x01(\x0e2M.google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnitB\x03\xe0A\x02R\btimeUnit\"\xce\x04\n" +
	"\tTargeting\x127\n" +
	"\x15plannable_location_id\x18\x06 \x01(\tH\x00R\x13plannableLocationId\x88\x01\x01\x124\n" +
	"\x16plannable_location_ids\x18\b \x03(\tR\x14plannableLocationIds\x12d\n" +
	"\tage_range\x18\x02 \x01(\x0e2G.google.ads.googleads.v20.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRangeR\bageRange\x12E\n" +
	"\agenders\x18\x03 \x03(\v2+.google.ads.googleads.v20.common.GenderInfoR\agenders\x12E\n" +
	"\adevices\x18\x04 \x03(\v2+.google.ads.googleads.v20.common.DeviceInfoR\adevices\x12_\n" +
	"\anetwork\x18\x05 \x01(\x0e2E.google.ads.googleads.v20.enums.ReachPlanNetworkEnum.ReachPlanNetworkR\anetwork\x12c\n" +
	"\x12audience_targeting\x18\a \x01(\v24.google.ads.googleads.v20.services.AudienceTargetingR\x11audienceTargetingB\x18\n" +
	"\x16_plannable_location_id\"\xa1\x01\n" +
	"\x10CampaignDuration\x12-\n" +
	"\x10duration_in_days\x18\x02 \x01(\x05H\x00R\x0edurationInDays\x88\x01\x01\x12I\n" +
	"\n" +
	"date_range\x18\x03 \x01(\v2*.google.ads.googleads.v20.common.DateRangeR\tdateRangeB\x13\n" +
	"\x11_duration_in_days\"\xe9\x02\n" +
	"\x0ePlannedProduct\x12>\n" +
	"\x16plannable_product_code\x18\x03 \x01(\tB\x03\xe0A\x02H\x00R\x14plannableProductCode\x88\x01\x01\x12-\n" +
	"\rbudget_micros\x18\x04 \x01(\x03B\x03\xe0A\x02H\x01R\fbudgetMicros\x88\x01\x01\x12,\n" +
	"\x0fconversion_rate\x18\x06 \x01(\x01H\x02R\x0econversionRate\x88\x01\x01\x12y\n" +
	"\x1aadvanced_product_targeting\x18\x05 \x01(\v2;.google.ads.googleads.v20.services.AdvancedProductTargetingR\x18advancedProductTargetingB\x19\n" +
	"\x17_plannable_product_codeB\x10\n" +
	"\x0e_budget_microsB\x12\n" +
	"\x10_conversion_rate\"\xe8\x01\n" +
	"\x1dGenerateReachForecastResponse\x12w\n" +
	"\x1aon_target_audience_metrics\x18\x01 \x01(\v2:.google.ads.googleads.v20.services.OnTargetAudienceMetricsR\x17onTargetAudienceMetrics\x12N\n" +
	"\vreach_curve\x18\x02 \x01(\v2-.google.ads.googleads.v20.services.ReachCurveR\n" +
	"reachCurve\"g\n" +
	"\n" +
	"ReachCurve\x12Y\n" +
	"\x0freach_forecasts\x18\x01 \x03(\v20.google.ads.googleads.v20.services.ReachForecastR\x0ereachForecasts\"\x81\x02\n" +
	"\rReachForecast\x12\x1f\n" +
	"\vcost_micros\x18\x05 \x01(\x03R\n" +
	"costMicros\x12G\n" +
	"\bforecast\x18\x02 \x01(\v2+.google.ads.googleads.v20.services.ForecastR\bforecast\x12\x85\x01\n" +
	"\x1fplanned_product_reach_forecasts\x18\x04 \x03(\v2>.google.ads.googleads.v20.services.PlannedProductReachForecastR\x1cplannedProductReachForecasts\"\xb2\a\n" +
	"\bForecast\x12+\n" +
	"\x0fon_target_reach\x18\x05 \x01(\x03H\x00R\ronTargetReach\x88\x01\x01\x12$\n" +
	"\vtotal_reach\x18\x06 \x01(\x03H\x01R\n" +
	"totalReach\x88\x01\x01\x127\n" +
	"\x15on_target_impressions\x18\a \x01(\x03H\x02R\x13onTargetImpressions\x88\x01\x01\x120\n" +
	"\x11total_impressions\x18\b \x01(\x03H\x03R\x10totalImpressions\x88\x01\x01\x126\n" +
	"\x14viewable_impressions\x18\t \x01(\x03H\x04R\x13viewableImpressions\x88\x01\x01\x12\x84\x01\n" +
	"\x1eeffective_frequency_breakdowns\x18\n" +
	" \x03(\v2>.google.ads.googleads.v20.services.EffectiveFrequencyBreakdownR\x1ceffectiveFrequencyBreakdowns\x128\n" +
	"\x16on_target_coview_reach\x18\v \x01(\x03H\x05R\x13onTargetCoviewReach\x88\x01\x01\x121\n" +
	"\x12total_coview_reach\x18\f \x01(\x03H\x06R\x10totalCoviewReach\x88\x01\x01\x12D\n" +
	"\x1con_target_coview_impressions\x18\r \x01(\x03H\aR\x19onTargetCoviewImpressions\x88\x01\x01\x12=\n" +
	"\x18total_coview_impressions\x18\x0e \x01(\x03H\bR\x16totalCoviewImpressions\x88\x01\x01\x12\x19\n" +
	"\x05views\x18\x0f \x01(\x03H\tR\x05views\x88\x01\x01\x12%\n" +
	"\vconversions\x18\x10 \x01(\x01H\n" +
	"R\vconversions\x88\x01\x01B\x12\n" +
	"\x10_on_target_reachB\x0e\n" +
	"\f_total_reachB\x18\n" +
	"\x16_on_target_impressionsB\x14\n" +
	"\x12_total_impressionsB\x17\n" +
	"\x15_viewable_impressionsB\x19\n" +
	"\x17_on_target_coview_reachB\x15\n" +
	"\x13_total_coview_reachB\x1f\n" +
	"\x1d_on_target_coview_impressionsB\x1b\n" +
	"\x19_total_coview_impressionsB\b\n" +
	"\x06_viewsB\x0e\n" +
	"\f_conversions\"\xe9\x01\n" +
	"\x1bPlannedProductReachForecast\x124\n" +
	"\x16plannable_product_code\x18\x01 \x01(\tR\x14plannableProductCode\x12\x1f\n" +
	"\vcost_micros\x18\x02 \x01(\x03R\n" +
	"costMicros\x12s\n" +
	"\x18planned_product_forecast\x18\x03 \x01(\v29.google.ads.googleads.v20.services.PlannedProductForecastR\x16plannedProductForecast\"\x99\x06\n" +
	"\x16PlannedProductForecast\x12&\n" +
	"\x0fon_target_reach\x18\x01 \x01(\x03R\ronTargetReach\x12\x1f\n" +
	"\vtotal_reach\x18\x02 \x01(\x03R\n" +
	"totalReach\x122\n" +
	"\x15on_target_impressions\x18\x03 \x01(\x03R\x13onTargetImpressions\x12+\n" +
	"\x11total_impressions\x18\x04 \x01(\x03R\x10totalImpressions\x126\n" +
	"\x14viewable_impressions\x18\x05 \x01(\x03H\x00R\x13viewableImpressions\x88\x01\x01\x128\n" +
	"\x16on_target_coview_reach\x18\x06 \x01(\x03H\x01R\x13onTargetCoviewReach\x88\x01\x01\x121\n" +
	"\x12total_coview_reach\x18\a \x01(\x03H\x02R\x10totalCoviewReach\x88\x01\x01\x12D\n" +
	"\x1con_target_coview_impressions\x18\b \x01(\x03H\x03R\x19onTargetCoviewImpressions\x88\x01\x01\x12=\n" +
	"\x18total_coview_impressions\x18\t \x01(\x03H\x04R\x16totalCoviewImpressions\x88\x01\x01\x120\n" +
	"\x11average_frequency\x18\n" +
	" \x01(\x01H\x05R\x10averageFrequency\x88\x01\x01\x12\x19\n" +
	"\x05views\x18\v \x01(\x03H\x06R\x05views\x88\x01\x01\x12%\n" +
	"\vconversions\x18\f \x01(\x01H\aR\vconversions\x88\x01\x01B\x17\n" +
	"\x15_viewable_impressionsB\x19\n" +
	"\x17_on_target_coview_reachB\x15\n" +
	"\x13_total_coview_reachB\x1f\n" +
	"\x1d_on_target_coview_impressionsB\x1b\n" +
	"\x19_total_coview_impressionsB\x14\n" +
	"\x12_average_frequencyB\b\n" +
	"\x06_viewsB\x0e\n" +
	"\f_conversions\"\xbc\x01\n" +
	"\x17OnTargetAudienceMetrics\x127\n" +
	"\x15youtube_audience_size\x18\x03 \x01(\x03H\x00R\x13youtubeAudienceSize\x88\x01\x01\x125\n" +
	"\x14census_audience_size\x18\x04 \x01(\x03H\x01R\x12censusAudienceSize\x88\x01\x01B\x18\n" +
	"\x16_youtube_audience_sizeB\x17\n" +
	"\x15_census_audience_size\"\xdf\x02\n" +
	"\x1bEffectiveFrequencyBreakdown\x12/\n" +
	"\x13effective_frequency\x18\x01 \x01(\x05R\x12effectiveFrequency\x12&\n" +
	"\x0fon_target_reach\x18\x02 \x01(\x03R\ronTargetReach\x12\x1f\n" +
	"\vtotal_reach\x18\x03 \x01(\x03R\n" +
	"totalReach\x129\n" +
	"\x16effective_coview_reach\x18\x04 \x01(\x03H\x00R\x14effectiveCoviewReach\x88\x01\x01\x12K\n" +
	" on_target_effective_coview_reach\x18\x05 \x01(\x03H\x01R\x1conTargetEffectiveCoviewReach\x88\x01\x01B\x19\n" +
	"\x17_effective_coview_reachB#\n" +
	"!_on_target_effective_coview_reach\">\n" +
	"\x15ForecastMetricOptions\x12%\n" +
	"\x0einclude_coview\x18\x01 \x01(\bR\rincludeCoview\"\xb9\x01\n" +
	"\x11AudienceTargeting\x12V\n" +
	"\ruser_interest\x18\x01 \x03(\v21.google.ads.googleads.v20.common.UserInterestInfoR\fuserInterest\x12L\n" +
	"\n" +
	"user_lists\x18\x02 \x03(\v2-.google.ads.googleads.v20.common.UserListInfoR\tuserLists\"\x8f\x03\n" +
	"\x18AdvancedProductTargeting\x12q\n" +
	"\x1asurface_targeting_settings\x18\x02 \x01(\v23.google.ads.googleads.v20.services.SurfaceTargetingR\x18surfaceTargetingSettings\x12v\n" +
	"\x19target_frequency_settings\x18\x03 \x01(\v2:.google.ads.googleads.v20.services.TargetFrequencySettingsR\x17targetFrequencySettings\x12r\n" +
	"\x17youtube_select_settings\x18\x01 \x01(\v28.google.ads.googleads.v20.services.YouTubeSelectSettingsH\x00R\x15youtubeSelectSettingsB\x14\n" +
	"\x12advanced_targeting\"4\n" +
	"\x15YouTubeSelectSettings\x12\x1b\n" +
	"\tlineup_id\x18\x01 \x01(\x03R\blineupId\"S\n" +
	"\x13YouTubeSelectLineUp\x12\x1b\n" +
	"\tlineup_id\x18\x01 \x01(\x03R\blineupId\x12\x1f\n" +
	"\vlineup_name\x18\x02 \x01(\tR\n" +
	"lineupName\"\xff\x01\n" +
	"\x1cSurfaceTargetingCombinations\x12`\n" +
	"\x11default_targeting\x18\x01 \x01(\v23.google.ads.googleads.v20.services.SurfaceTargetingR\x10defaultTargeting\x12}\n" +
	" available_targeting_combinations\x18\x02 \x03(\v23.google.ads.googleads.v20.services.SurfaceTargetingR\x1eavailableTargetingCombinations\"u\n" +
	"\x10SurfaceTargeting\x12a\n" +
	"\bsurfaces\x18\x01 \x03(\x0e2E.google.ads.googleads.v20.enums.ReachPlanSurfaceEnum.ReachPlanSurfaceR\bsurfaces\"\xc0\x01\n" +
	"\x17TargetFrequencySettings\x12u\n" +
	"\ttime_unit\x18\x01 \x01(\x0e2S.google.ads.googleads.v20.enums.TargetFrequencyTimeUnitEnum.TargetFrequencyTimeUnitB\x03\xe0A\x02R\btimeUnit\x12.\n" +
	"\x10target_frequency\x18\x02 \x01(\x05B\x03\xe0A\x02R\x0ftargetFrequency2\xbc\t\n" +
	"\x10ReachPlanService\x12\xd7\x01\n" +
	"\x17GenerateConversionRates\x12A.google.ads.googleads.v20.services.GenerateConversionRatesRequest\x1aB.google.ads.googleads.v20.services.GenerateConversionRatesResponse\"5\xdaA\vcustomer_id\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v20:generateConversionRates\x12\xc5\x01\n" +
	"\x16ListPlannableLocations\x12@.google.ads.googleads.v20.services.ListPlannableLocationsRequest\x1aA.google.ads.googleads.v20.services.ListPlannableLocationsResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v20:listPlannableLocations\x12\xd9\x01\n" +
	"\x15ListPlannableProducts\x12?.google.ads.googleads.v20.services.ListPlannableProductsRequest\x1a@.google.ads.googleads.v20.services.ListPlannableProductsResponse\"=\xdaA\x15plannable_location_id\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v20:listPlannableProducts\x12\x8c\x02\n" +
	"\x15GenerateReachForecast\x12?.google.ads.googleads.v20.services.GenerateReachForecastRequest\x1a@.google.ads.googleads.v20.services.GenerateReachForecastResponse\"p\xdaA.customer_id,campaign_duration,planned_products\x82\xd3\xe4\x93\x029:\x01*\"4/v20/customers/{customer_id=*}:generateReachForecast\x12\xd3\x01\n" +
	"\x16ListPlannableUserLists\x12@.google.ads.googleads.v20.services.ListPlannableUserListsRequest\x1aA.google.ads.googleads.v20.services.ListPlannableUserListsResponse\"4\xdaA\vcustomer_id\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v20:listPlannableUserLists\x1aE\xcaA\x18googleads.googleapis.com\xd2A'https://www.googleapis.com/auth/adwordsB\x81\x02\n" +
	"%com.google.ads.googleads.v20.servicesB\x15ReachPlanServiceProtoP\x01ZIgoogle.golang.org/genproto/googleapis/ads/googleads/v20/services;services\xa2\x02\x03GAA\xaa\x02!Google.Ads.GoogleAds.V20.Services\xca\x02!Google\\Ads\\GoogleAds\\V20\\Services\xea\x02%Google::Ads::GoogleAds::V20::Servicesb\x06proto3"

var (
	file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDescData
}

var file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_google_ads_googleads_v20_services_reach_plan_service_proto_goTypes = []any{
	(*GenerateConversionRatesRequest)(nil),                                   // 0: google.ads.googleads.v20.services.GenerateConversionRatesRequest
	(*GenerateConversionRatesResponse)(nil),                                  // 1: google.ads.googleads.v20.services.GenerateConversionRatesResponse
	(*ConversionRateSuggestion)(nil),                                         // 2: google.ads.googleads.v20.services.ConversionRateSuggestion
	(*ListPlannableLocationsRequest)(nil),                                    // 3: google.ads.googleads.v20.services.ListPlannableLocationsRequest
	(*ListPlannableLocationsResponse)(nil),                                   // 4: google.ads.googleads.v20.services.ListPlannableLocationsResponse
	(*PlannableLocation)(nil),                                                // 5: google.ads.googleads.v20.services.PlannableLocation
	(*ListPlannableProductsRequest)(nil),                                     // 6: google.ads.googleads.v20.services.ListPlannableProductsRequest
	(*ListPlannableProductsResponse)(nil),                                    // 7: google.ads.googleads.v20.services.ListPlannableProductsResponse
	(*ProductMetadata)(nil),                                                  // 8: google.ads.googleads.v20.services.ProductMetadata
	(*ListPlannableUserListsRequest)(nil),                                    // 9: google.ads.googleads.v20.services.ListPlannableUserListsRequest
	(*ListPlannableUserListsResponse)(nil),                                   // 10: google.ads.googleads.v20.services.ListPlannableUserListsResponse
	(*PlannableUserList)(nil),                                                // 11: google.ads.googleads.v20.services.PlannableUserList
	(*PlannableTargeting)(nil),                                               // 12: google.ads.googleads.v20.services.PlannableTargeting
	(*GenerateReachForecastRequest)(nil),                                     // 13: google.ads.googleads.v20.services.GenerateReachForecastRequest
	(*EffectiveFrequencyLimit)(nil),                                          // 14: google.ads.googleads.v20.services.EffectiveFrequencyLimit
	(*FrequencyCap)(nil),                                                     // 15: google.ads.googleads.v20.services.FrequencyCap
	(*Targeting)(nil),                                                        // 16: google.ads.googleads.v20.services.Targeting
	(*CampaignDuration)(nil),                                                 // 17: google.ads.googleads.v20.services.CampaignDuration
	(*PlannedProduct)(nil),                                                   // 18: google.ads.googleads.v20.services.PlannedProduct
	(*GenerateReachForecastResponse)(nil),                                    // 19: google.ads.googleads.v20.services.GenerateReachForecastResponse
	(*ReachCurve)(nil),                                                       // 20: google.ads.googleads.v20.services.ReachCurve
	(*ReachForecast)(nil),                                                    // 21: google.ads.googleads.v20.services.ReachForecast
	(*Forecast)(nil),                                                         // 22: google.ads.googleads.v20.services.Forecast
	(*PlannedProductReachForecast)(nil),                                      // 23: google.ads.googleads.v20.services.PlannedProductReachForecast
	(*PlannedProductForecast)(nil),                                           // 24: google.ads.googleads.v20.services.PlannedProductForecast
	(*OnTargetAudienceMetrics)(nil),                                          // 25: google.ads.googleads.v20.services.OnTargetAudienceMetrics
	(*EffectiveFrequencyBreakdown)(nil),                                      // 26: google.ads.googleads.v20.services.EffectiveFrequencyBreakdown
	(*ForecastMetricOptions)(nil),                                            // 27: google.ads.googleads.v20.services.ForecastMetricOptions
	(*AudienceTargeting)(nil),                                                // 28: google.ads.googleads.v20.services.AudienceTargeting
	(*AdvancedProductTargeting)(nil),                                         // 29: google.ads.googleads.v20.services.AdvancedProductTargeting
	(*YouTubeSelectSettings)(nil),                                            // 30: google.ads.googleads.v20.services.YouTubeSelectSettings
	(*YouTubeSelectLineUp)(nil),                                              // 31: google.ads.googleads.v20.services.YouTubeSelectLineUp
	(*SurfaceTargetingCombinations)(nil),                                     // 32: google.ads.googleads.v20.services.SurfaceTargetingCombinations
	(*SurfaceTargeting)(nil),                                                 // 33: google.ads.googleads.v20.services.SurfaceTargeting
	(*TargetFrequencySettings)(nil),                                          // 34: google.ads.googleads.v20.services.TargetFrequencySettings
	(*common.AdditionalApplicationInfo)(nil),                                 // 35: google.ads.googleads.v20.common.AdditionalApplicationInfo
	(enums.ReachPlanConversionRateModelEnum_ReachPlanConversionRateModel)(0), // 36: google.ads.googleads.v20.enums.ReachPlanConversionRateModelEnum.ReachPlanConversionRateModel
	(*common.UserListInfo)(nil),                                              // 37: google.ads.googleads.v20.common.UserListInfo
	(enums.UserListTypeEnum_UserListType)(0),                                 // 38: google.ads.googleads.v20.enums.UserListTypeEnum.UserListType
	(enums.ReachPlanPlannableUserListStatusEnum_ReachPlanPlannableUserListStatus)(0), // 39: google.ads.googleads.v20.enums.ReachPlanPlannableUserListStatusEnum.ReachPlanPlannableUserListStatus
	(enums.ReachPlanAgeRangeEnum_ReachPlanAgeRange)(0),                               // 40: google.ads.googleads.v20.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange
	(*common.GenderInfo)(nil),                                      // 41: google.ads.googleads.v20.common.GenderInfo
	(*common.DeviceInfo)(nil),                                      // 42: google.ads.googleads.v20.common.DeviceInfo
	(enums.ReachPlanNetworkEnum_ReachPlanNetwork)(0),               // 43: google.ads.googleads.v20.enums.ReachPlanNetworkEnum.ReachPlanNetwork
	(enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit)(0),       // 44: google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit
	(*common.DateRange)(nil),                                       // 45: google.ads.googleads.v20.common.DateRange
	(*common.UserInterestInfo)(nil),                                // 46: google.ads.googleads.v20.common.UserInterestInfo
	(enums.ReachPlanSurfaceEnum_ReachPlanSurface)(0),               // 47: google.ads.googleads.v20.enums.ReachPlanSurfaceEnum.ReachPlanSurface
	(enums.TargetFrequencyTimeUnitEnum_TargetFrequencyTimeUnit)(0), // 48: google.ads.googleads.v20.enums.TargetFrequencyTimeUnitEnum.TargetFrequencyTimeUnit
}
var file_google_ads_googleads_v20_services_reach_plan_service_proto_depIdxs = []int32{
	35, // 0: google.ads.googleads.v20.services.GenerateConversionRatesRequest.reach_application_info:type_name -> google.ads.googleads.v20.common.AdditionalApplicationInfo
	2,  // 1: google.ads.googleads.v20.services.GenerateConversionRatesResponse.conversion_rate_suggestions:type_name -> google.ads.googleads.v20.services.ConversionRateSuggestion
	36, // 2: google.ads.googleads.v20.services.ConversionRateSuggestion.conversion_rate_model:type_name -> google.ads.googleads.v20.enums.ReachPlanConversionRateModelEnum.ReachPlanConversionRateModel
	35, // 3: google.ads.googleads.v20.services.ListPlannableLocationsRequest.reach_application_info:type_name -> google.ads.googleads.v20.common.AdditionalApplicationInfo
	5,  // 4: google.ads.googleads.v20.services.ListPlannableLocationsResponse.plannable_locations:type_name -> google.ads.googleads.v20.services.PlannableLocation
	35, // 5: google.ads.googleads.v20.services.ListPlannableProductsRequest.reach_application_info:type_name -> google.ads.googleads.v20.common.AdditionalApplicationInfo
	8,  // 6: google.ads.googleads.v20.services.ListPlannableProductsResponse.product_metadata:type_name -> google.ads.googleads.v20.services.ProductMetadata
	12, // 7: google.ads.googleads.v20.services.ProductMetadata.plannable_targeting:type_name -> google.ads.googleads.v20.services.PlannableTargeting
	11, // 8: google.ads.googleads.v20.services.ListPlannableUserListsResponse.plannable_user_lists:type_name -> google.ads.googleads.v20.services.PlannableUserList
	37, // 9: google.ads.googleads.v20.services.PlannableUserList.user_list_info:type_name -> google.ads.googleads.v20.common.UserListInfo
	38, // 10: google.ads.googleads.v20.services.PlannableUserList.user_list_type:type_name -> google.ads.googleads.v20.enums.UserListTypeEnum.UserListType
	39, // 11: google.ads.googleads.v20.services.PlannableUserList.plannable_status:type_name -> google.ads.googleads.v20.enums.ReachPlanPlannableUserListStatusEnum.ReachPlanPlannableUserListStatus
	40, // 12: google.ads.googleads.v20.services.PlannableTargeting.age_ranges:type_name -> google.ads.googleads.v20.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange
	41, // 13: google.ads.googleads.v20.services.PlannableTargeting.genders:type_name -> google.ads.googleads.v20.common.GenderInfo
	42, // 14: google.ads.googleads.v20.services.PlannableTargeting.devices:type_name -> google.ads.googleads.v20.common.DeviceInfo
	43, // 15: google.ads.googleads.v20.services.PlannableTargeting.networks:type_name -> google.ads.googleads.v20.enums.ReachPlanNetworkEnum.ReachPlanNetwork
	31, // 16: google.ads.googleads.v20.services.PlannableTargeting.youtube_select_lineups:type_name -> google.ads.googleads.v20.services.YouTubeSelectLineUp
	32, // 17: google.ads.googleads.v20.services.PlannableTargeting.surface_targeting:type_name -> google.ads.googleads.v20.services.SurfaceTargetingCombinations
	17, // 18: google.ads.googleads.v20.services.GenerateReachForecastRequest.campaign_duration:type_name -> google.ads.googleads.v20.services.CampaignDuration
	15, // 19: google.ads.googleads.v20.services.GenerateReachForecastRequest.cookie_frequency_cap_setting:type_name -> google.ads.googleads.v20.services.FrequencyCap
	14, // 20: google.ads.googleads.v20.services.GenerateReachForecastRequest.effective_frequency_limit:type_name -> google.ads.googleads.v20.services.EffectiveFrequencyLimit
	16, // 21: google.ads.googleads.v20.services.GenerateReachForecastRequest.targeting:type_name -> google.ads.googleads.v20.services.Targeting
	18, // 22: google.ads.googleads.v20.services.GenerateReachForecastRequest.planned_products:type_name -> google.ads.googleads.v20.services.PlannedProduct
	27, // 23: google.ads.googleads.v20.services.GenerateReachForecastRequest.forecast_metric_options:type_name -> google.ads.googleads.v20.services.ForecastMetricOptions
	35, // 24: google.ads.googleads.v20.services.GenerateReachForecastRequest.reach_application_info:type_name -> google.ads.googleads.v20.common.AdditionalApplicationInfo
	44, // 25: google.ads.googleads.v20.services.FrequencyCap.time_unit:type_name -> google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit
	40, // 26: google.ads.googleads.v20.services.Targeting.age_range:type_name -> google.ads.googleads.v20.enums.ReachPlanAgeRangeEnum.ReachPlanAgeRange
	41, // 27: google.ads.googleads.v20.services.Targeting.genders:type_name -> google.ads.googleads.v20.common.GenderInfo
	42, // 28: google.ads.googleads.v20.services.Targeting.devices:type_name -> google.ads.googleads.v20.common.DeviceInfo
	43, // 29: google.ads.googleads.v20.services.Targeting.network:type_name -> google.ads.googleads.v20.enums.ReachPlanNetworkEnum.ReachPlanNetwork
	28, // 30: google.ads.googleads.v20.services.Targeting.audience_targeting:type_name -> google.ads.googleads.v20.services.AudienceTargeting
	45, // 31: google.ads.googleads.v20.services.CampaignDuration.date_range:type_name -> google.ads.googleads.v20.common.DateRange
	29, // 32: google.ads.googleads.v20.services.PlannedProduct.advanced_product_targeting:type_name -> google.ads.googleads.v20.services.AdvancedProductTargeting
	25, // 33: google.ads.googleads.v20.services.GenerateReachForecastResponse.on_target_audience_metrics:type_name -> google.ads.googleads.v20.services.OnTargetAudienceMetrics
	20, // 34: google.ads.googleads.v20.services.GenerateReachForecastResponse.reach_curve:type_name -> google.ads.googleads.v20.services.ReachCurve
	21, // 35: google.ads.googleads.v20.services.ReachCurve.reach_forecasts:type_name -> google.ads.googleads.v20.services.ReachForecast
	22, // 36: google.ads.googleads.v20.services.ReachForecast.forecast:type_name -> google.ads.googleads.v20.services.Forecast
	23, // 37: google.ads.googleads.v20.services.ReachForecast.planned_product_reach_forecasts:type_name -> google.ads.googleads.v20.services.PlannedProductReachForecast
	26, // 38: google.ads.googleads.v20.services.Forecast.effective_frequency_breakdowns:type_name -> google.ads.googleads.v20.services.EffectiveFrequencyBreakdown
	24, // 39: google.ads.googleads.v20.services.PlannedProductReachForecast.planned_product_forecast:type_name -> google.ads.googleads.v20.services.PlannedProductForecast
	46, // 40: google.ads.googleads.v20.services.AudienceTargeting.user_interest:type_name -> google.ads.googleads.v20.common.UserInterestInfo
	37, // 41: google.ads.googleads.v20.services.AudienceTargeting.user_lists:type_name -> google.ads.googleads.v20.common.UserListInfo
	33, // 42: google.ads.googleads.v20.services.AdvancedProductTargeting.surface_targeting_settings:type_name -> google.ads.googleads.v20.services.SurfaceTargeting
	34, // 43: google.ads.googleads.v20.services.AdvancedProductTargeting.target_frequency_settings:type_name -> google.ads.googleads.v20.services.TargetFrequencySettings
	30, // 44: google.ads.googleads.v20.services.AdvancedProductTargeting.youtube_select_settings:type_name -> google.ads.googleads.v20.services.YouTubeSelectSettings
	33, // 45: google.ads.googleads.v20.services.SurfaceTargetingCombinations.default_targeting:type_name -> google.ads.googleads.v20.services.SurfaceTargeting
	33, // 46: google.ads.googleads.v20.services.SurfaceTargetingCombinations.available_targeting_combinations:type_name -> google.ads.googleads.v20.services.SurfaceTargeting
	47, // 47: google.ads.googleads.v20.services.SurfaceTargeting.surfaces:type_name -> google.ads.googleads.v20.enums.ReachPlanSurfaceEnum.ReachPlanSurface
	48, // 48: google.ads.googleads.v20.services.TargetFrequencySettings.time_unit:type_name -> google.ads.googleads.v20.enums.TargetFrequencyTimeUnitEnum.TargetFrequencyTimeUnit
	0,  // 49: google.ads.googleads.v20.services.ReachPlanService.GenerateConversionRates:input_type -> google.ads.googleads.v20.services.GenerateConversionRatesRequest
	3,  // 50: google.ads.googleads.v20.services.ReachPlanService.ListPlannableLocations:input_type -> google.ads.googleads.v20.services.ListPlannableLocationsRequest
	6,  // 51: google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts:input_type -> google.ads.googleads.v20.services.ListPlannableProductsRequest
	13, // 52: google.ads.googleads.v20.services.ReachPlanService.GenerateReachForecast:input_type -> google.ads.googleads.v20.services.GenerateReachForecastRequest
	9,  // 53: google.ads.googleads.v20.services.ReachPlanService.ListPlannableUserLists:input_type -> google.ads.googleads.v20.services.ListPlannableUserListsRequest
	1,  // 54: google.ads.googleads.v20.services.ReachPlanService.GenerateConversionRates:output_type -> google.ads.googleads.v20.services.GenerateConversionRatesResponse
	4,  // 55: google.ads.googleads.v20.services.ReachPlanService.ListPlannableLocations:output_type -> google.ads.googleads.v20.services.ListPlannableLocationsResponse
	7,  // 56: google.ads.googleads.v20.services.ReachPlanService.ListPlannableProducts:output_type -> google.ads.googleads.v20.services.ListPlannableProductsResponse
	19, // 57: google.ads.googleads.v20.services.ReachPlanService.GenerateReachForecast:output_type -> google.ads.googleads.v20.services.GenerateReachForecastResponse
	10, // 58: google.ads.googleads.v20.services.ReachPlanService.ListPlannableUserLists:output_type -> google.ads.googleads.v20.services.ListPlannableUserListsResponse
	54, // [54:59] is the sub-list for method output_type
	49, // [49:54] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_services_reach_plan_service_proto_init() }
func file_google_ads_googleads_v20_services_reach_plan_service_proto_init() {
	if File_google_ads_googleads_v20_services_reach_plan_service_proto != nil {
		return
	}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[5].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[8].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[9].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[13].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[16].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[17].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[18].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[22].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[24].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[25].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[26].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes[29].OneofWrappers = []any{
		(*AdvancedProductTargeting_YoutubeSelectSettings)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_reach_plan_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_ads_googleads_v20_services_reach_plan_service_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_services_reach_plan_service_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_services_reach_plan_service_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_services_reach_plan_service_proto = out.File
	file_google_ads_googleads_v20_services_reach_plan_service_proto_goTypes = nil
	file_google_ads_googleads_v20_services_reach_plan_service_proto_depIdxs = nil
}
