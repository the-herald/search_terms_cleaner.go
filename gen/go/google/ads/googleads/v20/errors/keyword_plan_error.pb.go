// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/errors/keyword_plan_error.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum describing possible errors from applying a keyword plan.
type KeywordPlanErrorEnum_KeywordPlanError int32

const (
	// Enum unspecified.
	KeywordPlanErrorEnum_UNSPECIFIED KeywordPlanErrorEnum_KeywordPlanError = 0
	// The received error code is not known in this version.
	KeywordPlanErrorEnum_UNKNOWN KeywordPlanErrorEnum_KeywordPlanError = 1
	// The plan's bid multiplier value is outside the valid range.
	KeywordPlanErrorEnum_BID_MULTIPLIER_OUT_OF_RANGE KeywordPlanErrorEnum_KeywordPlanError = 2
	// The plan's bid value is too high.
	KeywordPlanErrorEnum_BID_TOO_HIGH KeywordPlanErrorEnum_KeywordPlanError = 3
	// The plan's bid value is too low.
	KeywordPlanErrorEnum_BID_TOO_LOW KeywordPlanErrorEnum_KeywordPlanError = 4
	// The plan's cpc bid is not a multiple of the minimum billable unit.
	KeywordPlanErrorEnum_BID_TOO_MANY_FRACTIONAL_DIGITS KeywordPlanErrorEnum_KeywordPlanError = 5
	// The plan's daily budget value is too low.
	KeywordPlanErrorEnum_DAILY_BUDGET_TOO_LOW KeywordPlanErrorEnum_KeywordPlanError = 6
	// The plan's daily budget is not a multiple of the minimum billable unit.
	KeywordPlanErrorEnum_DAILY_BUDGET_TOO_MANY_FRACTIONAL_DIGITS KeywordPlanErrorEnum_KeywordPlanError = 7
	// The input has an invalid value.
	KeywordPlanErrorEnum_INVALID_VALUE KeywordPlanErrorEnum_KeywordPlanError = 8
	// The plan has no keyword.
	KeywordPlanErrorEnum_KEYWORD_PLAN_HAS_NO_KEYWORDS KeywordPlanErrorEnum_KeywordPlanError = 9
	// The plan is not enabled and API cannot provide mutation, forecast or
	// stats.
	KeywordPlanErrorEnum_KEYWORD_PLAN_NOT_ENABLED KeywordPlanErrorEnum_KeywordPlanError = 10
	// The requested plan cannot be found for providing forecast or stats.
	KeywordPlanErrorEnum_KEYWORD_PLAN_NOT_FOUND KeywordPlanErrorEnum_KeywordPlanError = 11
	// The plan is missing a cpc bid.
	KeywordPlanErrorEnum_MISSING_BID KeywordPlanErrorEnum_KeywordPlanError = 13
	// The plan is missing required forecast_period field.
	KeywordPlanErrorEnum_MISSING_FORECAST_PERIOD KeywordPlanErrorEnum_KeywordPlanError = 14
	// The plan's forecast_period has invalid forecast date range.
	KeywordPlanErrorEnum_INVALID_FORECAST_DATE_RANGE KeywordPlanErrorEnum_KeywordPlanError = 15
	// The plan's name is invalid.
	KeywordPlanErrorEnum_INVALID_NAME KeywordPlanErrorEnum_KeywordPlanError = 16
)

// Enum value maps for KeywordPlanErrorEnum_KeywordPlanError.
var (
	KeywordPlanErrorEnum_KeywordPlanError_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "UNKNOWN",
		2:  "BID_MULTIPLIER_OUT_OF_RANGE",
		3:  "BID_TOO_HIGH",
		4:  "BID_TOO_LOW",
		5:  "BID_TOO_MANY_FRACTIONAL_DIGITS",
		6:  "DAILY_BUDGET_TOO_LOW",
		7:  "DAILY_BUDGET_TOO_MANY_FRACTIONAL_DIGITS",
		8:  "INVALID_VALUE",
		9:  "KEYWORD_PLAN_HAS_NO_KEYWORDS",
		10: "KEYWORD_PLAN_NOT_ENABLED",
		11: "KEYWORD_PLAN_NOT_FOUND",
		13: "MISSING_BID",
		14: "MISSING_FORECAST_PERIOD",
		15: "INVALID_FORECAST_DATE_RANGE",
		16: "INVALID_NAME",
	}
	KeywordPlanErrorEnum_KeywordPlanError_value = map[string]int32{
		"UNSPECIFIED":                             0,
		"UNKNOWN":                                 1,
		"BID_MULTIPLIER_OUT_OF_RANGE":             2,
		"BID_TOO_HIGH":                            3,
		"BID_TOO_LOW":                             4,
		"BID_TOO_MANY_FRACTIONAL_DIGITS":          5,
		"DAILY_BUDGET_TOO_LOW":                    6,
		"DAILY_BUDGET_TOO_MANY_FRACTIONAL_DIGITS": 7,
		"INVALID_VALUE":                           8,
		"KEYWORD_PLAN_HAS_NO_KEYWORDS":            9,
		"KEYWORD_PLAN_NOT_ENABLED":                10,
		"KEYWORD_PLAN_NOT_FOUND":                  11,
		"MISSING_BID":                             13,
		"MISSING_FORECAST_PERIOD":                 14,
		"INVALID_FORECAST_DATE_RANGE":             15,
		"INVALID_NAME":                            16,
	}
)

func (x KeywordPlanErrorEnum_KeywordPlanError) Enum() *KeywordPlanErrorEnum_KeywordPlanError {
	p := new(KeywordPlanErrorEnum_KeywordPlanError)
	*p = x
	return p
}

func (x KeywordPlanErrorEnum_KeywordPlanError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeywordPlanErrorEnum_KeywordPlanError) Descriptor() protoreflect.EnumDescriptor {
	return file_google_ads_googleads_v20_errors_keyword_plan_error_proto_enumTypes[0].Descriptor()
}

func (KeywordPlanErrorEnum_KeywordPlanError) Type() protoreflect.EnumType {
	return &file_google_ads_googleads_v20_errors_keyword_plan_error_proto_enumTypes[0]
}

func (x KeywordPlanErrorEnum_KeywordPlanError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeywordPlanErrorEnum_KeywordPlanError.Descriptor instead.
func (KeywordPlanErrorEnum_KeywordPlanError) EnumDescriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescGZIP(), []int{0, 0}
}

// Container for enum describing possible errors from applying a keyword plan
// resource (keyword plan, keyword plan campaign, keyword plan ad group or
// keyword plan keyword) or KeywordPlanService RPC.
type KeywordPlanErrorEnum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordPlanErrorEnum) Reset() {
	*x = KeywordPlanErrorEnum{}
	mi := &file_google_ads_googleads_v20_errors_keyword_plan_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordPlanErrorEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordPlanErrorEnum) ProtoMessage() {}

func (x *KeywordPlanErrorEnum) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_errors_keyword_plan_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordPlanErrorEnum.ProtoReflect.Descriptor instead.
func (*KeywordPlanErrorEnum) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescGZIP(), []int{0}
}

var File_google_ads_googleads_v20_errors_keyword_plan_error_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDesc = "" +
	"\n" +
	"8google/ads/googleads/v20/errors/keyword_plan_error.proto\x12\x1fgoogle.ads.googleads.v20.errors\"\xc8\x03\n" +
	"\x14KeywordPlanErrorEnum\"\xaf\x03\n" +
	"\x10KeywordPlanError\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aUNKNOWN\x10\x01\x12\x1f\n" +
	"\x1bBID_MULTIPLIER_OUT_OF_RANGE\x10\x02\x12\x10\n" +
	"\fBID_TOO_HIGH\x10\x03\x12\x0f\n" +
	"\vBID_TOO_LOW\x10\x04\x12\"\n" +
	"\x1eBID_TOO_MANY_FRACTIONAL_DIGITS\x10\x05\x12\x18\n" +
	"\x14DAILY_BUDGET_TOO_LOW\x10\x06\x12+\n" +
	"'DAILY_BUDGET_TOO_MANY_FRACTIONAL_DIGITS\x10\a\x12\x11\n" +
	"\rINVALID_VALUE\x10\b\x12 \n" +
	"\x1cKEYWORD_PLAN_HAS_NO_KEYWORDS\x10\t\x12\x1c\n" +
	"\x18KEYWORD_PLAN_NOT_ENABLED\x10\n" +
	"\x12\x1a\n" +
	"\x16KEYWORD_PLAN_NOT_FOUND\x10\v\x12\x0f\n" +
	"\vMISSING_BID\x10\r\x12\x1b\n" +
	"\x17MISSING_FORECAST_PERIOD\x10\x0e\x12\x1f\n" +
	"\x1bINVALID_FORECAST_DATE_RANGE\x10\x0f\x12\x10\n" +
	"\fINVALID_NAME\x10\x10B\xf5\x01\n" +
	"#com.google.ads.googleads.v20.errorsB\x15KeywordPlanErrorProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v20/errors;errors\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V20.Errors\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V20\\Errors\xea\x02#Google::Ads::GoogleAds::V20::Errorsb\x06proto3"

var (
	file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDescData
}

var file_google_ads_googleads_v20_errors_keyword_plan_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_ads_googleads_v20_errors_keyword_plan_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_googleads_v20_errors_keyword_plan_error_proto_goTypes = []any{
	(KeywordPlanErrorEnum_KeywordPlanError)(0), // 0: google.ads.googleads.v20.errors.KeywordPlanErrorEnum.KeywordPlanError
	(*KeywordPlanErrorEnum)(nil),               // 1: google.ads.googleads.v20.errors.KeywordPlanErrorEnum
}
var file_google_ads_googleads_v20_errors_keyword_plan_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_errors_keyword_plan_error_proto_init() }
func file_google_ads_googleads_v20_errors_keyword_plan_error_proto_init() {
	if File_google_ads_googleads_v20_errors_keyword_plan_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_keyword_plan_error_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_errors_keyword_plan_error_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_errors_keyword_plan_error_proto_depIdxs,
		EnumInfos:         file_google_ads_googleads_v20_errors_keyword_plan_error_proto_enumTypes,
		MessageInfos:      file_google_ads_googleads_v20_errors_keyword_plan_error_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_errors_keyword_plan_error_proto = out.File
	file_google_ads_googleads_v20_errors_keyword_plan_error_proto_goTypes = nil
	file_google_ads_googleads_v20_errors_keyword_plan_error_proto_depIdxs = nil
}
