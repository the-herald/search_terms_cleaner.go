// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/errors/batch_job_error.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum describing possible request errors.
type BatchJobErrorEnum_BatchJobError int32

const (
	// Enum unspecified.
	BatchJobErrorEnum_UNSPECIFIED BatchJobErrorEnum_BatchJobError = 0
	// The received error code is not known in this version.
	BatchJobErrorEnum_UNKNOWN BatchJobErrorEnum_BatchJobError = 1
	// The batch job cannot add more operations or run after it has started
	// running.
	BatchJobErrorEnum_CANNOT_MODIFY_JOB_AFTER_JOB_STARTS_RUNNING BatchJobErrorEnum_BatchJobError = 2
	// The operations for an AddBatchJobOperations request were empty.
	BatchJobErrorEnum_EMPTY_OPERATIONS BatchJobErrorEnum_BatchJobError = 3
	// The sequence token for an AddBatchJobOperations request was invalid.
	BatchJobErrorEnum_INVALID_SEQUENCE_TOKEN BatchJobErrorEnum_BatchJobError = 4
	// Batch job results can only be retrieved once the job is finished.
	BatchJobErrorEnum_RESULTS_NOT_READY BatchJobErrorEnum_BatchJobError = 5
	// The page size for ListBatchJobResults was invalid.
	BatchJobErrorEnum_INVALID_PAGE_SIZE BatchJobErrorEnum_BatchJobError = 6
	// The batch job cannot be removed because it has started running.
	BatchJobErrorEnum_CAN_ONLY_REMOVE_PENDING_JOB BatchJobErrorEnum_BatchJobError = 7
	// The batch job cannot be listed due to unexpected errors such as duplicate
	// checkpoints.
	BatchJobErrorEnum_CANNOT_LIST_RESULTS BatchJobErrorEnum_BatchJobError = 8
	// The request contains interdependent AssetGroup and AssetGroupAsset
	// operations that are treated atomically as a single transaction, and one
	// or more of the operations in that transaction failed, which caused the
	// entire transaction, and therefore this mutate operation, to fail. The
	// operations that caused the transaction to fail can be found in the
	// consecutive AssetGroup or AssetGroupAsset results with the same asset
	// group id. The mutate operation will be successful once the remaining
	// errors in the transaction are fixed.
	BatchJobErrorEnum_ASSET_GROUP_AND_ASSET_GROUP_ASSET_TRANSACTION_FAILURE BatchJobErrorEnum_BatchJobError = 9
	// The request contains interdependent AssetGroupListingGroupFilter
	// operations that are treated atomically as a single transaction, and one
	// or more of the operations in that transaction failed, which caused the
	// entire transaction, and therefore this mutate operation, to fail. The
	// operations that caused the transaction to fail can be found in the
	// consecutive AssetGroupListingGroupFilter results with the same asset
	// group id. The mutate operation will be successful once the remaining
	// errors in the transaction are fixed.
	BatchJobErrorEnum_ASSET_GROUP_LISTING_GROUP_FILTER_TRANSACTION_FAILURE BatchJobErrorEnum_BatchJobError = 10
	// The AddBatchJobOperationsRequest is too large. Split the request into
	// smaller requests. The maximum allowed request size is 10484504 bytes.
	BatchJobErrorEnum_REQUEST_TOO_LARGE BatchJobErrorEnum_BatchJobError = 11
	// This error indicates a failed transaction involving interdependent
	// Campaign and CampaignAsset operations that are treated atomically as a
	// single transaction. Because some operations within the transaction
	// failed, the entire set of changes was rejected. Related error details are
	// found in the results for the Campaign and CampaignAssets sharing the same
	// Campaign ID. The transaction will succeed after all associated errors are
	// resolved.
	BatchJobErrorEnum_CAMPAIGN_AND_CAMPAIGN_ASSET_TRANSACTION_FAILURE BatchJobErrorEnum_BatchJobError = 12
)

// Enum value maps for BatchJobErrorEnum_BatchJobError.
var (
	BatchJobErrorEnum_BatchJobError_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "UNKNOWN",
		2:  "CANNOT_MODIFY_JOB_AFTER_JOB_STARTS_RUNNING",
		3:  "EMPTY_OPERATIONS",
		4:  "INVALID_SEQUENCE_TOKEN",
		5:  "RESULTS_NOT_READY",
		6:  "INVALID_PAGE_SIZE",
		7:  "CAN_ONLY_REMOVE_PENDING_JOB",
		8:  "CANNOT_LIST_RESULTS",
		9:  "ASSET_GROUP_AND_ASSET_GROUP_ASSET_TRANSACTION_FAILURE",
		10: "ASSET_GROUP_LISTING_GROUP_FILTER_TRANSACTION_FAILURE",
		11: "REQUEST_TOO_LARGE",
		12: "CAMPAIGN_AND_CAMPAIGN_ASSET_TRANSACTION_FAILURE",
	}
	BatchJobErrorEnum_BatchJobError_value = map[string]int32{
		"UNSPECIFIED": 0,
		"UNKNOWN":     1,
		"CANNOT_MODIFY_JOB_AFTER_JOB_STARTS_RUNNING":            2,
		"EMPTY_OPERATIONS":                                      3,
		"INVALID_SEQUENCE_TOKEN":                                4,
		"RESULTS_NOT_READY":                                     5,
		"INVALID_PAGE_SIZE":                                     6,
		"CAN_ONLY_REMOVE_PENDING_JOB":                           7,
		"CANNOT_LIST_RESULTS":                                   8,
		"ASSET_GROUP_AND_ASSET_GROUP_ASSET_TRANSACTION_FAILURE": 9,
		"ASSET_GROUP_LISTING_GROUP_FILTER_TRANSACTION_FAILURE":  10,
		"REQUEST_TOO_LARGE":                                     11,
		"CAMPAIGN_AND_CAMPAIGN_ASSET_TRANSACTION_FAILURE":       12,
	}
)

func (x BatchJobErrorEnum_BatchJobError) Enum() *BatchJobErrorEnum_BatchJobError {
	p := new(BatchJobErrorEnum_BatchJobError)
	*p = x
	return p
}

func (x BatchJobErrorEnum_BatchJobError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BatchJobErrorEnum_BatchJobError) Descriptor() protoreflect.EnumDescriptor {
	return file_google_ads_googleads_v20_errors_batch_job_error_proto_enumTypes[0].Descriptor()
}

func (BatchJobErrorEnum_BatchJobError) Type() protoreflect.EnumType {
	return &file_google_ads_googleads_v20_errors_batch_job_error_proto_enumTypes[0]
}

func (x BatchJobErrorEnum_BatchJobError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BatchJobErrorEnum_BatchJobError.Descriptor instead.
func (BatchJobErrorEnum_BatchJobError) EnumDescriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescGZIP(), []int{0, 0}
}

// Container for enum describing possible batch job errors.
type BatchJobErrorEnum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchJobErrorEnum) Reset() {
	*x = BatchJobErrorEnum{}
	mi := &file_google_ads_googleads_v20_errors_batch_job_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchJobErrorEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchJobErrorEnum) ProtoMessage() {}

func (x *BatchJobErrorEnum) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_errors_batch_job_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchJobErrorEnum.ProtoReflect.Descriptor instead.
func (*BatchJobErrorEnum) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescGZIP(), []int{0}
}

var File_google_ads_googleads_v20_errors_batch_job_error_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDesc = "" +
	"\n" +
	"5google/ads/googleads/v20/errors/batch_job_error.proto\x12\x1fgoogle.ads.googleads.v20.errors\"\xce\x03\n" +
	"\x11BatchJobErrorEnum\"\xb8\x03\n" +
	"\rBatchJobError\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aUNKNOWN\x10\x01\x12.\n" +
	"*CANNOT_MODIFY_JOB_AFTER_JOB_STARTS_RUNNING\x10\x02\x12\x14\n" +
	"\x10EMPTY_OPERATIONS\x10\x03\x12\x1a\n" +
	"\x16INVALID_SEQUENCE_TOKEN\x10\x04\x12\x15\n" +
	"\x11RESULTS_NOT_READY\x10\x05\x12\x15\n" +
	"\x11INVALID_PAGE_SIZE\x10\x06\x12\x1f\n" +
	"\x1bCAN_ONLY_REMOVE_PENDING_JOB\x10\a\x12\x17\n" +
	"\x13CANNOT_LIST_RESULTS\x10\b\x129\n" +
	"5ASSET_GROUP_AND_ASSET_GROUP_ASSET_TRANSACTION_FAILURE\x10\t\x128\n" +
	"4ASSET_GROUP_LISTING_GROUP_FILTER_TRANSACTION_FAILURE\x10\n" +
	"\x12\x15\n" +
	"\x11REQUEST_TOO_LARGE\x10\v\x123\n" +
	"/CAMPAIGN_AND_CAMPAIGN_ASSET_TRANSACTION_FAILURE\x10\fB\xf2\x01\n" +
	"#com.google.ads.googleads.v20.errorsB\x12BatchJobErrorProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v20/errors;errors\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V20.Errors\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V20\\Errors\xea\x02#Google::Ads::GoogleAds::V20::Errorsb\x06proto3"

var (
	file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDescData
}

var file_google_ads_googleads_v20_errors_batch_job_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_ads_googleads_v20_errors_batch_job_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_googleads_v20_errors_batch_job_error_proto_goTypes = []any{
	(BatchJobErrorEnum_BatchJobError)(0), // 0: google.ads.googleads.v20.errors.BatchJobErrorEnum.BatchJobError
	(*BatchJobErrorEnum)(nil),            // 1: google.ads.googleads.v20.errors.BatchJobErrorEnum
}
var file_google_ads_googleads_v20_errors_batch_job_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_errors_batch_job_error_proto_init() }
func file_google_ads_googleads_v20_errors_batch_job_error_proto_init() {
	if File_google_ads_googleads_v20_errors_batch_job_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_batch_job_error_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_errors_batch_job_error_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_errors_batch_job_error_proto_depIdxs,
		EnumInfos:         file_google_ads_googleads_v20_errors_batch_job_error_proto_enumTypes,
		MessageInfos:      file_google_ads_googleads_v20_errors_batch_job_error_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_errors_batch_job_error_proto = out.File
	file_google_ads_googleads_v20_errors_batch_job_error_proto_goTypes = nil
	file_google_ads_googleads_v20_errors_batch_job_error_proto_depIdxs = nil
}
