// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/errors/keyword_plan_ad_group_keyword_error.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum describing possible errors from applying a keyword plan ad group
// keyword or keyword plan campaign keyword.
type KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError int32

const (
	// Enum unspecified.
	KeywordPlanAdGroupKeywordErrorEnum_UNSPECIFIED KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 0
	// The received error code is not known in this version.
	KeywordPlanAdGroupKeywordErrorEnum_UNKNOWN KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 1
	// A keyword or negative keyword has invalid match type.
	KeywordPlanAdGroupKeywordErrorEnum_INVALID_KEYWORD_MATCH_TYPE KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 2
	// A keyword or negative keyword with same text and match type already
	// exists.
	KeywordPlanAdGroupKeywordErrorEnum_DUPLICATE_KEYWORD KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 3
	// Keyword or negative keyword text exceeds the allowed limit.
	KeywordPlanAdGroupKeywordErrorEnum_KEYWORD_TEXT_TOO_LONG KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 4
	// Keyword or negative keyword text has invalid characters or symbols.
	KeywordPlanAdGroupKeywordErrorEnum_KEYWORD_HAS_INVALID_CHARS KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 5
	// Keyword or negative keyword text has too many words.
	KeywordPlanAdGroupKeywordErrorEnum_KEYWORD_HAS_TOO_MANY_WORDS KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 6
	// Keyword or negative keyword has invalid text.
	KeywordPlanAdGroupKeywordErrorEnum_INVALID_KEYWORD_TEXT KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 7
	// Cpc Bid set for negative keyword.
	KeywordPlanAdGroupKeywordErrorEnum_NEGATIVE_KEYWORD_HAS_CPC_BID KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 8
	// New broad match modifier (BMM) KpAdGroupKeywords are not allowed.
	KeywordPlanAdGroupKeywordErrorEnum_NEW_BMM_KEYWORDS_NOT_ALLOWED KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError = 9
)

// Enum value maps for KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError.
var (
	KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "INVALID_KEYWORD_MATCH_TYPE",
		3: "DUPLICATE_KEYWORD",
		4: "KEYWORD_TEXT_TOO_LONG",
		5: "KEYWORD_HAS_INVALID_CHARS",
		6: "KEYWORD_HAS_TOO_MANY_WORDS",
		7: "INVALID_KEYWORD_TEXT",
		8: "NEGATIVE_KEYWORD_HAS_CPC_BID",
		9: "NEW_BMM_KEYWORDS_NOT_ALLOWED",
	}
	KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError_value = map[string]int32{
		"UNSPECIFIED":                  0,
		"UNKNOWN":                      1,
		"INVALID_KEYWORD_MATCH_TYPE":   2,
		"DUPLICATE_KEYWORD":            3,
		"KEYWORD_TEXT_TOO_LONG":        4,
		"KEYWORD_HAS_INVALID_CHARS":    5,
		"KEYWORD_HAS_TOO_MANY_WORDS":   6,
		"INVALID_KEYWORD_TEXT":         7,
		"NEGATIVE_KEYWORD_HAS_CPC_BID": 8,
		"NEW_BMM_KEYWORDS_NOT_ALLOWED": 9,
	}
)

func (x KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError) Enum() *KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError {
	p := new(KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError)
	*p = x
	return p
}

func (x KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError) Descriptor() protoreflect.EnumDescriptor {
	return file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_enumTypes[0].Descriptor()
}

func (KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError) Type() protoreflect.EnumType {
	return &file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_enumTypes[0]
}

func (x KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError.Descriptor instead.
func (KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError) EnumDescriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescGZIP(), []int{0, 0}
}

// Container for enum describing possible errors from applying an ad group
// keyword or a campaign keyword from a keyword plan.
type KeywordPlanAdGroupKeywordErrorEnum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordPlanAdGroupKeywordErrorEnum) Reset() {
	*x = KeywordPlanAdGroupKeywordErrorEnum{}
	mi := &file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordPlanAdGroupKeywordErrorEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordPlanAdGroupKeywordErrorEnum) ProtoMessage() {}

func (x *KeywordPlanAdGroupKeywordErrorEnum) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordPlanAdGroupKeywordErrorEnum.ProtoReflect.Descriptor instead.
func (*KeywordPlanAdGroupKeywordErrorEnum) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescGZIP(), []int{0}
}

var File_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDesc = "" +
	"\n" +
	"Igoogle/ads/googleads/v20/errors/keyword_plan_ad_group_keyword_error.proto\x12\x1fgoogle.ads.googleads.v20.errors\"\xd4\x02\n" +
	"\"KeywordPlanAdGroupKeywordErrorEnum\"\xad\x02\n" +
	"\x1eKeywordPlanAdGroupKeywordError\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aUNKNOWN\x10\x01\x12\x1e\n" +
	"\x1aINVALID_KEYWORD_MATCH_TYPE\x10\x02\x12\x15\n" +
	"\x11DUPLICATE_KEYWORD\x10\x03\x12\x19\n" +
	"\x15KEYWORD_TEXT_TOO_LONG\x10\x04\x12\x1d\n" +
	"\x19KEYWORD_HAS_INVALID_CHARS\x10\x05\x12\x1e\n" +
	"\x1aKEYWORD_HAS_TOO_MANY_WORDS\x10\x06\x12\x18\n" +
	"\x14INVALID_KEYWORD_TEXT\x10\a\x12 \n" +
	"\x1cNEGATIVE_KEYWORD_HAS_CPC_BID\x10\b\x12 \n" +
	"\x1cNEW_BMM_KEYWORDS_NOT_ALLOWED\x10\tB\x83\x02\n" +
	"#com.google.ads.googleads.v20.errorsB#KeywordPlanAdGroupKeywordErrorProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v20/errors;errors\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V20.Errors\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V20\\Errors\xea\x02#Google::Ads::GoogleAds::V20::Errorsb\x06proto3"

var (
	file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDescData
}

var file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_goTypes = []any{
	(KeywordPlanAdGroupKeywordErrorEnum_KeywordPlanAdGroupKeywordError)(0), // 0: google.ads.googleads.v20.errors.KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordError
	(*KeywordPlanAdGroupKeywordErrorEnum)(nil),                             // 1: google.ads.googleads.v20.errors.KeywordPlanAdGroupKeywordErrorEnum
}
var file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_init() }
func file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_init() {
	if File_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_depIdxs,
		EnumInfos:         file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_enumTypes,
		MessageInfos:      file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto = out.File
	file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_goTypes = nil
	file_google_ads_googleads_v20_errors_keyword_plan_ad_group_keyword_error_proto_depIdxs = nil
}
