// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/common/frequency_cap.proto

package common

import (
	enums "google.golang.org/genproto/googleapis/ads/googleads/v20/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A rule specifying the maximum number of times an ad (or some set of ads) can
// be shown to a user over a particular time period.
type FrequencyCapEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The key of a particular frequency cap. There can be no more
	// than one frequency cap with the same key.
	Key *FrequencyCapKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Maximum number of events allowed during the time range by this cap.
	Cap           *int32 `protobuf:"varint,3,opt,name=cap,proto3,oneof" json:"cap,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrequencyCapEntry) Reset() {
	*x = FrequencyCapEntry{}
	mi := &file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequencyCapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyCapEntry) ProtoMessage() {}

func (x *FrequencyCapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyCapEntry.ProtoReflect.Descriptor instead.
func (*FrequencyCapEntry) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescGZIP(), []int{0}
}

func (x *FrequencyCapEntry) GetKey() *FrequencyCapKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *FrequencyCapEntry) GetCap() int32 {
	if x != nil && x.Cap != nil {
		return *x.Cap
	}
	return 0
}

// A group of fields used as keys for a frequency cap.
// There can be no more than one frequency cap with the same key.
type FrequencyCapKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The level on which the cap is to be applied (for example, ad group ad, ad
	// group). The cap is applied to all the entities of this level.
	Level enums.FrequencyCapLevelEnum_FrequencyCapLevel `protobuf:"varint,1,opt,name=level,proto3,enum=google.ads.googleads.v20.enums.FrequencyCapLevelEnum_FrequencyCapLevel" json:"level,omitempty"`
	// The type of event that the cap applies to (for example, impression).
	EventType enums.FrequencyCapEventTypeEnum_FrequencyCapEventType `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=google.ads.googleads.v20.enums.FrequencyCapEventTypeEnum_FrequencyCapEventType" json:"event_type,omitempty"`
	// Unit of time the cap is defined at (for example, day, week).
	TimeUnit enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit `protobuf:"varint,2,opt,name=time_unit,json=timeUnit,proto3,enum=google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit" json:"time_unit,omitempty"`
	// Number of time units the cap lasts.
	TimeLength    *int32 `protobuf:"varint,5,opt,name=time_length,json=timeLength,proto3,oneof" json:"time_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrequencyCapKey) Reset() {
	*x = FrequencyCapKey{}
	mi := &file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequencyCapKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyCapKey) ProtoMessage() {}

func (x *FrequencyCapKey) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyCapKey.ProtoReflect.Descriptor instead.
func (*FrequencyCapKey) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescGZIP(), []int{1}
}

func (x *FrequencyCapKey) GetLevel() enums.FrequencyCapLevelEnum_FrequencyCapLevel {
	if x != nil {
		return x.Level
	}
	return enums.FrequencyCapLevelEnum_FrequencyCapLevel(0)
}

func (x *FrequencyCapKey) GetEventType() enums.FrequencyCapEventTypeEnum_FrequencyCapEventType {
	if x != nil {
		return x.EventType
	}
	return enums.FrequencyCapEventTypeEnum_FrequencyCapEventType(0)
}

func (x *FrequencyCapKey) GetTimeUnit() enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit {
	if x != nil {
		return x.TimeUnit
	}
	return enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit(0)
}

func (x *FrequencyCapKey) GetTimeLength() int32 {
	if x != nil && x.TimeLength != nil {
		return *x.TimeLength
	}
	return 0
}

var File_google_ads_googleads_v20_common_frequency_cap_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_common_frequency_cap_proto_rawDesc = "" +
	"\n" +
	"3google/ads/googleads/v20/common/frequency_cap.proto\x12\x1fgoogle.ads.googleads.v20.common\x1a=google/ads/googleads/v20/enums/frequency_cap_event_type.proto\x1a8google/ads/googleads/v20/enums/frequency_cap_level.proto\x1a<google/ads/googleads/v20/enums/frequency_cap_time_unit.proto\"v\n" +
	"\x11FrequencyCapEntry\x12B\n" +
	"\x03key\x18\x01 \x01(\v20.google.ads.googleads.v20.common.FrequencyCapKeyR\x03key\x12\x15\n" +
	"\x03cap\x18\x03 \x01(\x05H\x00R\x03cap\x88\x01\x01B\x06\n" +
	"\x04_cap\"\x82\x03\n" +
	"\x0fFrequencyCapKey\x12]\n" +
	"\x05level\x18\x01 \x01(\x0e2G.google.ads.googleads.v20.enums.FrequencyCapLevelEnum.FrequencyCapLevelR\x05level\x12n\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2O.google.ads.googleads.v20.enums.FrequencyCapEventTypeEnum.FrequencyCapEventTypeR\teventType\x12j\n" +
	"\ttime_unit\x18\x02 \x01(\x0e2M.google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnitR\btimeUnit\x12$\n" +
	"\vtime_length\x18\x05 \x01(\x05H\x00R\n" +
	"timeLength\x88\x01\x01B\x0e\n" +
	"\f_time_lengthB\xf1\x01\n" +
	"#com.google.ads.googleads.v20.commonB\x11FrequencyCapProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v20/common;common\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V20.Common\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V20\\Common\xea\x02#Google::Ads::GoogleAds::V20::Commonb\x06proto3"

var (
	file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_common_frequency_cap_proto_rawDesc), len(file_google_ads_googleads_v20_common_frequency_cap_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_common_frequency_cap_proto_rawDescData
}

var file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_google_ads_googleads_v20_common_frequency_cap_proto_goTypes = []any{
	(*FrequencyCapEntry)(nil),                                  // 0: google.ads.googleads.v20.common.FrequencyCapEntry
	(*FrequencyCapKey)(nil),                                    // 1: google.ads.googleads.v20.common.FrequencyCapKey
	(enums.FrequencyCapLevelEnum_FrequencyCapLevel)(0),         // 2: google.ads.googleads.v20.enums.FrequencyCapLevelEnum.FrequencyCapLevel
	(enums.FrequencyCapEventTypeEnum_FrequencyCapEventType)(0), // 3: google.ads.googleads.v20.enums.FrequencyCapEventTypeEnum.FrequencyCapEventType
	(enums.FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit)(0),   // 4: google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit
}
var file_google_ads_googleads_v20_common_frequency_cap_proto_depIdxs = []int32{
	1, // 0: google.ads.googleads.v20.common.FrequencyCapEntry.key:type_name -> google.ads.googleads.v20.common.FrequencyCapKey
	2, // 1: google.ads.googleads.v20.common.FrequencyCapKey.level:type_name -> google.ads.googleads.v20.enums.FrequencyCapLevelEnum.FrequencyCapLevel
	3, // 2: google.ads.googleads.v20.common.FrequencyCapKey.event_type:type_name -> google.ads.googleads.v20.enums.FrequencyCapEventTypeEnum.FrequencyCapEventType
	4, // 3: google.ads.googleads.v20.common.FrequencyCapKey.time_unit:type_name -> google.ads.googleads.v20.enums.FrequencyCapTimeUnitEnum.FrequencyCapTimeUnit
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_common_frequency_cap_proto_init() }
func file_google_ads_googleads_v20_common_frequency_cap_proto_init() {
	if File_google_ads_googleads_v20_common_frequency_cap_proto != nil {
		return
	}
	file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes[0].OneofWrappers = []any{}
	file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_common_frequency_cap_proto_rawDesc), len(file_google_ads_googleads_v20_common_frequency_cap_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_common_frequency_cap_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_common_frequency_cap_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_common_frequency_cap_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_common_frequency_cap_proto = out.File
	file_google_ads_googleads_v20_common_frequency_cap_proto_goTypes = nil
	file_google_ads_googleads_v20_common_frequency_cap_proto_depIdxs = nil
}
