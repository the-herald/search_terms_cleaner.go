// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/errors/campaign_experiment_error.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum describing possible campaign experiment errors.
type CampaignExperimentErrorEnum_CampaignExperimentError int32

const (
	// Enum unspecified.
	CampaignExperimentErrorEnum_UNSPECIFIED CampaignExperimentErrorEnum_CampaignExperimentError = 0
	// The received error code is not known in this version.
	CampaignExperimentErrorEnum_UNKNOWN CampaignExperimentErrorEnum_CampaignExperimentError = 1
	// An active campaign or experiment with this name already exists.
	CampaignExperimentErrorEnum_DUPLICATE_NAME CampaignExperimentErrorEnum_CampaignExperimentError = 2
	// Experiment cannot be updated from the current state to the
	// requested target state. For example, an experiment can only graduate
	// if its status is ENABLED.
	CampaignExperimentErrorEnum_INVALID_TRANSITION CampaignExperimentErrorEnum_CampaignExperimentError = 3
	// Cannot create an experiment from a campaign using an explicitly shared
	// budget.
	CampaignExperimentErrorEnum_CANNOT_CREATE_EXPERIMENT_WITH_SHARED_BUDGET CampaignExperimentErrorEnum_CampaignExperimentError = 4
	// Cannot create an experiment for a removed base campaign.
	CampaignExperimentErrorEnum_CANNOT_CREATE_EXPERIMENT_FOR_REMOVED_BASE_CAMPAIGN CampaignExperimentErrorEnum_CampaignExperimentError = 5
	// Cannot create an experiment from a draft, which has a status other than
	// proposed.
	CampaignExperimentErrorEnum_CANNOT_CREATE_EXPERIMENT_FOR_NON_PROPOSED_DRAFT CampaignExperimentErrorEnum_CampaignExperimentError = 6
	// This customer is not allowed to create an experiment.
	CampaignExperimentErrorEnum_CUSTOMER_CANNOT_CREATE_EXPERIMENT CampaignExperimentErrorEnum_CampaignExperimentError = 7
	// This campaign is not allowed to create an experiment.
	CampaignExperimentErrorEnum_CAMPAIGN_CANNOT_CREATE_EXPERIMENT CampaignExperimentErrorEnum_CampaignExperimentError = 8
	// Trying to set an experiment duration which overlaps with another
	// experiment.
	CampaignExperimentErrorEnum_EXPERIMENT_DURATIONS_MUST_NOT_OVERLAP CampaignExperimentErrorEnum_CampaignExperimentError = 9
	// All non-removed experiments must start and end within their campaign's
	// duration.
	CampaignExperimentErrorEnum_EXPERIMENT_DURATION_MUST_BE_WITHIN_CAMPAIGN_DURATION CampaignExperimentErrorEnum_CampaignExperimentError = 10
	// The experiment cannot be modified because its status is in a terminal
	// state, such as REMOVED.
	CampaignExperimentErrorEnum_CANNOT_MUTATE_EXPERIMENT_DUE_TO_STATUS CampaignExperimentErrorEnum_CampaignExperimentError = 11
)

// Enum value maps for CampaignExperimentErrorEnum_CampaignExperimentError.
var (
	CampaignExperimentErrorEnum_CampaignExperimentError_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "UNKNOWN",
		2:  "DUPLICATE_NAME",
		3:  "INVALID_TRANSITION",
		4:  "CANNOT_CREATE_EXPERIMENT_WITH_SHARED_BUDGET",
		5:  "CANNOT_CREATE_EXPERIMENT_FOR_REMOVED_BASE_CAMPAIGN",
		6:  "CANNOT_CREATE_EXPERIMENT_FOR_NON_PROPOSED_DRAFT",
		7:  "CUSTOMER_CANNOT_CREATE_EXPERIMENT",
		8:  "CAMPAIGN_CANNOT_CREATE_EXPERIMENT",
		9:  "EXPERIMENT_DURATIONS_MUST_NOT_OVERLAP",
		10: "EXPERIMENT_DURATION_MUST_BE_WITHIN_CAMPAIGN_DURATION",
		11: "CANNOT_MUTATE_EXPERIMENT_DUE_TO_STATUS",
	}
	CampaignExperimentErrorEnum_CampaignExperimentError_value = map[string]int32{
		"UNSPECIFIED":        0,
		"UNKNOWN":            1,
		"DUPLICATE_NAME":     2,
		"INVALID_TRANSITION": 3,
		"CANNOT_CREATE_EXPERIMENT_WITH_SHARED_BUDGET":          4,
		"CANNOT_CREATE_EXPERIMENT_FOR_REMOVED_BASE_CAMPAIGN":   5,
		"CANNOT_CREATE_EXPERIMENT_FOR_NON_PROPOSED_DRAFT":      6,
		"CUSTOMER_CANNOT_CREATE_EXPERIMENT":                    7,
		"CAMPAIGN_CANNOT_CREATE_EXPERIMENT":                    8,
		"EXPERIMENT_DURATIONS_MUST_NOT_OVERLAP":                9,
		"EXPERIMENT_DURATION_MUST_BE_WITHIN_CAMPAIGN_DURATION": 10,
		"CANNOT_MUTATE_EXPERIMENT_DUE_TO_STATUS":               11,
	}
)

func (x CampaignExperimentErrorEnum_CampaignExperimentError) Enum() *CampaignExperimentErrorEnum_CampaignExperimentError {
	p := new(CampaignExperimentErrorEnum_CampaignExperimentError)
	*p = x
	return p
}

func (x CampaignExperimentErrorEnum_CampaignExperimentError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CampaignExperimentErrorEnum_CampaignExperimentError) Descriptor() protoreflect.EnumDescriptor {
	return file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_enumTypes[0].Descriptor()
}

func (CampaignExperimentErrorEnum_CampaignExperimentError) Type() protoreflect.EnumType {
	return &file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_enumTypes[0]
}

func (x CampaignExperimentErrorEnum_CampaignExperimentError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CampaignExperimentErrorEnum_CampaignExperimentError.Descriptor instead.
func (CampaignExperimentErrorEnum_CampaignExperimentError) EnumDescriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescGZIP(), []int{0, 0}
}

// Container for enum describing possible campaign experiment errors.
type CampaignExperimentErrorEnum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CampaignExperimentErrorEnum) Reset() {
	*x = CampaignExperimentErrorEnum{}
	mi := &file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CampaignExperimentErrorEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignExperimentErrorEnum) ProtoMessage() {}

func (x *CampaignExperimentErrorEnum) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignExperimentErrorEnum.ProtoReflect.Descriptor instead.
func (*CampaignExperimentErrorEnum) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescGZIP(), []int{0}
}

var File_google_ads_googleads_v20_errors_campaign_experiment_error_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDesc = "" +
	"\n" +
	"?google/ads/googleads/v20/errors/campaign_experiment_error.proto\x12\x1fgoogle.ads.googleads.v20.errors\"\x80\x04\n" +
	"\x1bCampaignExperimentErrorEnum\"\xe0\x03\n" +
	"\x17CampaignExperimentError\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aUNKNOWN\x10\x01\x12\x12\n" +
	"\x0eDUPLICATE_NAME\x10\x02\x12\x16\n" +
	"\x12INVALID_TRANSITION\x10\x03\x12/\n" +
	"+CANNOT_CREATE_EXPERIMENT_WITH_SHARED_BUDGET\x10\x04\x126\n" +
	"2CANNOT_CREATE_EXPERIMENT_FOR_REMOVED_BASE_CAMPAIGN\x10\x05\x123\n" +
	"/CANNOT_CREATE_EXPERIMENT_FOR_NON_PROPOSED_DRAFT\x10\x06\x12%\n" +
	"!CUSTOMER_CANNOT_CREATE_EXPERIMENT\x10\a\x12%\n" +
	"!CAMPAIGN_CANNOT_CREATE_EXPERIMENT\x10\b\x12)\n" +
	"%EXPERIMENT_DURATIONS_MUST_NOT_OVERLAP\x10\t\x128\n" +
	"4EXPERIMENT_DURATION_MUST_BE_WITHIN_CAMPAIGN_DURATION\x10\n" +
	"\x12*\n" +
	"&CANNOT_MUTATE_EXPERIMENT_DUE_TO_STATUS\x10\vB\xfc\x01\n" +
	"#com.google.ads.googleads.v20.errorsB\x1cCampaignExperimentErrorProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v20/errors;errors\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V20.Errors\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V20\\Errors\xea\x02#Google::Ads::GoogleAds::V20::Errorsb\x06proto3"

var (
	file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDescData
}

var file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_goTypes = []any{
	(CampaignExperimentErrorEnum_CampaignExperimentError)(0), // 0: google.ads.googleads.v20.errors.CampaignExperimentErrorEnum.CampaignExperimentError
	(*CampaignExperimentErrorEnum)(nil),                      // 1: google.ads.googleads.v20.errors.CampaignExperimentErrorEnum
}
var file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_init() }
func file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_init() {
	if File_google_ads_googleads_v20_errors_campaign_experiment_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_depIdxs,
		EnumInfos:         file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_enumTypes,
		MessageInfos:      file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_errors_campaign_experiment_error_proto = out.File
	file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_goTypes = nil
	file_google_ads_googleads_v20_errors_campaign_experiment_error_proto_depIdxs = nil
}
