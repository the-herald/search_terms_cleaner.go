// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/services/experiment_service.proto

package services

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	resources "google.golang.org/genproto/googleapis/ads/googleads/v20/resources"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for
// [ExperimentService.MutateExperiments][google.ads.googleads.v20.services.ExperimentService.MutateExperiments].
type MutateExperimentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the customer whose experiments are being modified.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Required. The list of operations to perform on individual experiments.
	Operations []*ExperimentOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	// If true, successful operations will be carried out and invalid
	// operations will return errors. If false, all operations will be carried
	// out in one transaction if and only if they are all valid.
	// Default is false.
	PartialFailure bool `protobuf:"varint,3,opt,name=partial_failure,json=partialFailure,proto3" json:"partial_failure,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly  bool `protobuf:"varint,4,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateExperimentsRequest) Reset() {
	*x = MutateExperimentsRequest{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateExperimentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateExperimentsRequest) ProtoMessage() {}

func (x *MutateExperimentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateExperimentsRequest.ProtoReflect.Descriptor instead.
func (*MutateExperimentsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{0}
}

func (x *MutateExperimentsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *MutateExperimentsRequest) GetOperations() []*ExperimentOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *MutateExperimentsRequest) GetPartialFailure() bool {
	if x != nil {
		return x.PartialFailure
	}
	return false
}

func (x *MutateExperimentsRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

// A single operation on an experiment.
type ExperimentOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FieldMask that determines which resource fields are modified in an update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// The mutate operation.
	//
	// Types that are valid to be assigned to Operation:
	//
	//	*ExperimentOperation_Create
	//	*ExperimentOperation_Update
	//	*ExperimentOperation_Remove
	Operation     isExperimentOperation_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExperimentOperation) Reset() {
	*x = ExperimentOperation{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentOperation) ProtoMessage() {}

func (x *ExperimentOperation) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentOperation.ProtoReflect.Descriptor instead.
func (*ExperimentOperation) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExperimentOperation) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *ExperimentOperation) GetOperation() isExperimentOperation_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ExperimentOperation) GetCreate() *resources.Experiment {
	if x != nil {
		if x, ok := x.Operation.(*ExperimentOperation_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *ExperimentOperation) GetUpdate() *resources.Experiment {
	if x != nil {
		if x, ok := x.Operation.(*ExperimentOperation_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *ExperimentOperation) GetRemove() string {
	if x != nil {
		if x, ok := x.Operation.(*ExperimentOperation_Remove); ok {
			return x.Remove
		}
	}
	return ""
}

type isExperimentOperation_Operation interface {
	isExperimentOperation_Operation()
}

type ExperimentOperation_Create struct {
	// Create operation
	Create *resources.Experiment `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type ExperimentOperation_Update struct {
	// Update operation: The experiment is expected to have a valid
	// resource name.
	Update *resources.Experiment `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type ExperimentOperation_Remove struct {
	// Remove operation: The experiment is expected to have a valid
	// resource name, in this format:
	//
	// `customers/{customer_id}/experiments/{campaign_experiment_id}`
	Remove string `protobuf:"bytes,3,opt,name=remove,proto3,oneof"`
}

func (*ExperimentOperation_Create) isExperimentOperation_Operation() {}

func (*ExperimentOperation_Update) isExperimentOperation_Operation() {}

func (*ExperimentOperation_Remove) isExperimentOperation_Operation() {}

// Response message for experiment mutate.
type MutateExperimentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Errors that pertain to operation failures in the partial failure mode.
	// Returned only when partial_failure = true and all errors occur inside the
	// operations. If any errors occur outside the operations (for example, auth
	// errors), we return an RPC level error.
	PartialFailureError *status.Status `protobuf:"bytes,1,opt,name=partial_failure_error,json=partialFailureError,proto3" json:"partial_failure_error,omitempty"`
	// All results for the mutate.
	Results       []*MutateExperimentResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateExperimentsResponse) Reset() {
	*x = MutateExperimentsResponse{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateExperimentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateExperimentsResponse) ProtoMessage() {}

func (x *MutateExperimentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateExperimentsResponse.ProtoReflect.Descriptor instead.
func (*MutateExperimentsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{2}
}

func (x *MutateExperimentsResponse) GetPartialFailureError() *status.Status {
	if x != nil {
		return x.PartialFailureError
	}
	return nil
}

func (x *MutateExperimentsResponse) GetResults() []*MutateExperimentResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// The result for the campaign experiment mutate.
type MutateExperimentResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returned for successful operations.
	ResourceName  string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateExperimentResult) Reset() {
	*x = MutateExperimentResult{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateExperimentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateExperimentResult) ProtoMessage() {}

func (x *MutateExperimentResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateExperimentResult.ProtoReflect.Descriptor instead.
func (*MutateExperimentResult) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{3}
}

func (x *MutateExperimentResult) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

// Request message for
// [ExperimentService.EndExperiment][google.ads.googleads.v20.services.ExperimentService.EndExperiment].
type EndExperimentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The resource name of the campaign experiment to end.
	Experiment string `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly  bool `protobuf:"varint,2,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndExperimentRequest) Reset() {
	*x = EndExperimentRequest{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndExperimentRequest) ProtoMessage() {}

func (x *EndExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndExperimentRequest.ProtoReflect.Descriptor instead.
func (*EndExperimentRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{4}
}

func (x *EndExperimentRequest) GetExperiment() string {
	if x != nil {
		return x.Experiment
	}
	return ""
}

func (x *EndExperimentRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

// Request message for
// [ExperimentService.ListExperimentAsyncErrors][google.ads.googleads.v20.services.ExperimentService.ListExperimentAsyncErrors].
type ListExperimentAsyncErrorsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The name of the experiment from which to retrieve the async
	// errors.
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Token of the page to retrieve. If not specified, the first
	// page of results will be returned. Use the value obtained from
	// `next_page_token` in the previous response in order to request
	// the next page of results.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Number of elements to retrieve in a single page.
	// When a page request is too large, the server may decide to
	// further limit the number of returned resources.
	// The maximum page size is 1000.
	PageSize      int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExperimentAsyncErrorsRequest) Reset() {
	*x = ListExperimentAsyncErrorsRequest{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExperimentAsyncErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExperimentAsyncErrorsRequest) ProtoMessage() {}

func (x *ListExperimentAsyncErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExperimentAsyncErrorsRequest.ProtoReflect.Descriptor instead.
func (*ListExperimentAsyncErrorsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListExperimentAsyncErrorsRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ListExperimentAsyncErrorsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListExperimentAsyncErrorsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Response message for
// [ExperimentService.ListExperimentAsyncErrors][google.ads.googleads.v20.services.ExperimentService.ListExperimentAsyncErrors].
type ListExperimentAsyncErrorsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// details of the errors when performing the asynchronous operation.
	Errors []*status.Status `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// Pagination token used to retrieve the next page of results.
	// Pass the content of this string as the `page_token` attribute of
	// the next request. `next_page_token` is not returned for the last
	// page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExperimentAsyncErrorsResponse) Reset() {
	*x = ListExperimentAsyncErrorsResponse{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExperimentAsyncErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExperimentAsyncErrorsResponse) ProtoMessage() {}

func (x *ListExperimentAsyncErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExperimentAsyncErrorsResponse.ProtoReflect.Descriptor instead.
func (*ListExperimentAsyncErrorsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListExperimentAsyncErrorsResponse) GetErrors() []*status.Status {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ListExperimentAsyncErrorsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request message for
// [ExperimentService.GraduateExperiment][google.ads.googleads.v20.services.ExperimentService.GraduateExperiment].
type GraduateExperimentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The experiment to be graduated.
	Experiment string `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	// Required. List of campaign budget mappings for graduation. Each campaign
	// that appears here will graduate, and will be assigned a new budget that is
	// paired with it in the mapping. The maximum size is one.
	CampaignBudgetMappings []*CampaignBudgetMapping `protobuf:"bytes,2,rep,name=campaign_budget_mappings,json=campaignBudgetMappings,proto3" json:"campaign_budget_mappings,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly  bool `protobuf:"varint,3,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraduateExperimentRequest) Reset() {
	*x = GraduateExperimentRequest{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraduateExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraduateExperimentRequest) ProtoMessage() {}

func (x *GraduateExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraduateExperimentRequest.ProtoReflect.Descriptor instead.
func (*GraduateExperimentRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{7}
}

func (x *GraduateExperimentRequest) GetExperiment() string {
	if x != nil {
		return x.Experiment
	}
	return ""
}

func (x *GraduateExperimentRequest) GetCampaignBudgetMappings() []*CampaignBudgetMapping {
	if x != nil {
		return x.CampaignBudgetMappings
	}
	return nil
}

func (x *GraduateExperimentRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

// The mapping of experiment campaign and budget to be graduated.
type CampaignBudgetMapping struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The experiment campaign to graduate.
	ExperimentCampaign string `protobuf:"bytes,1,opt,name=experiment_campaign,json=experimentCampaign,proto3" json:"experiment_campaign,omitempty"`
	// Required. The budget that should be attached to the graduating experiment
	// campaign.
	CampaignBudget string `protobuf:"bytes,2,opt,name=campaign_budget,json=campaignBudget,proto3" json:"campaign_budget,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CampaignBudgetMapping) Reset() {
	*x = CampaignBudgetMapping{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CampaignBudgetMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignBudgetMapping) ProtoMessage() {}

func (x *CampaignBudgetMapping) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignBudgetMapping.ProtoReflect.Descriptor instead.
func (*CampaignBudgetMapping) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{8}
}

func (x *CampaignBudgetMapping) GetExperimentCampaign() string {
	if x != nil {
		return x.ExperimentCampaign
	}
	return ""
}

func (x *CampaignBudgetMapping) GetCampaignBudget() string {
	if x != nil {
		return x.CampaignBudget
	}
	return ""
}

// Request message for
// [ExperimentService.ScheduleExperiment][google.ads.googleads.v20.services.ExperimentService.ScheduleExperiment].
type ScheduleExperimentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The scheduled experiment.
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly  bool `protobuf:"varint,2,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleExperimentRequest) Reset() {
	*x = ScheduleExperimentRequest{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleExperimentRequest) ProtoMessage() {}

func (x *ScheduleExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleExperimentRequest.ProtoReflect.Descriptor instead.
func (*ScheduleExperimentRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{9}
}

func (x *ScheduleExperimentRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ScheduleExperimentRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

// The metadata of the scheduled experiment.
type ScheduleExperimentMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The scheduled experiment.
	Experiment    string `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleExperimentMetadata) Reset() {
	*x = ScheduleExperimentMetadata{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleExperimentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleExperimentMetadata) ProtoMessage() {}

func (x *ScheduleExperimentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleExperimentMetadata.ProtoReflect.Descriptor instead.
func (*ScheduleExperimentMetadata) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{10}
}

func (x *ScheduleExperimentMetadata) GetExperiment() string {
	if x != nil {
		return x.Experiment
	}
	return ""
}

// Request message for
// [ExperimentService.PromoteExperiment][google.ads.googleads.v20.services.ExperimentService.PromoteExperiment].
type PromoteExperimentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The resource name of the experiment to promote.
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly  bool `protobuf:"varint,2,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoteExperimentRequest) Reset() {
	*x = PromoteExperimentRequest{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoteExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteExperimentRequest) ProtoMessage() {}

func (x *PromoteExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteExperimentRequest.ProtoReflect.Descriptor instead.
func (*PromoteExperimentRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{11}
}

func (x *PromoteExperimentRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *PromoteExperimentRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

// The metadata of the promoted experiment.
type PromoteExperimentMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The promoted experiment.
	Experiment    string `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoteExperimentMetadata) Reset() {
	*x = PromoteExperimentMetadata{}
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoteExperimentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteExperimentMetadata) ProtoMessage() {}

func (x *PromoteExperimentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteExperimentMetadata.ProtoReflect.Descriptor instead.
func (*PromoteExperimentMetadata) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP(), []int{12}
}

func (x *PromoteExperimentMetadata) GetExperiment() string {
	if x != nil {
		return x.Experiment
	}
	return ""
}

var File_google_ads_googleads_v20_services_experiment_service_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_services_experiment_service_proto_rawDesc = "" +
	"\n" +
	":google/ads/googleads/v20/services/experiment_service.proto\x12!google.ads.googleads.v20.services\x1a3google/ads/googleads/v20/resources/experiment.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a#google/longrunning/operations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x17google/rpc/status.proto\"\xeb\x01\n" +
	"\x18MutateExperimentsRequest\x12$\n" +
	"\vcustomer_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"customerId\x12[\n" +
	"\n" +
	"operations\x18\x02 \x03(\v26.google.ads.googleads.v20.services.ExperimentOperationB\x03\xe0A\x02R\n" +
	"operations\x12'\n" +
	"\x0fpartial_failure\x18\x03 \x01(\bR\x0epartialFailure\x12#\n" +
	"\rvalidate_only\x18\x04 \x01(\bR\fvalidateOnly\"\xb7\x02\n" +
	"\x13ExperimentOperation\x12;\n" +
	"\vupdate_mask\x18\x04 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12H\n" +
	"\x06create\x18\x01 \x01(\v2..google.ads.googleads.v20.resources.ExperimentH\x00R\x06create\x12H\n" +
	"\x06update\x18\x02 \x01(\v2..google.ads.googleads.v20.resources.ExperimentH\x00R\x06update\x12B\n" +
	"\x06remove\x18\x03 \x01(\tB(\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentH\x00R\x06removeB\v\n" +
	"\toperation\"\xb8\x01\n" +
	"\x19MutateExperimentsResponse\x12F\n" +
	"\x15partial_failure_error\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x13partialFailureError\x12S\n" +
	"\aresults\x18\x02 \x03(\v29.google.ads.googleads.v20.services.MutateExperimentResultR\aresults\"g\n" +
	"\x16MutateExperimentResult\x12M\n" +
	"\rresource_name\x18\x01 \x01(\tB(\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\fresourceName\"\x88\x01\n" +
	"\x14EndExperimentRequest\x12K\n" +
	"\n" +
	"experiment\x18\x01 \x01(\tB+\xe0A\x02\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\n" +
	"experiment\x12#\n" +
	"\rvalidate_only\x18\x02 \x01(\bR\fvalidateOnly\"\xb0\x01\n" +
	" ListExperimentAsyncErrorsRequest\x12P\n" +
	"\rresource_name\x18\x01 \x01(\tB+\xe0A\x02\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\fresourceName\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"w\n" +
	"!ListExperimentAsyncErrorsResponse\x12*\n" +
	"\x06errors\x18\x01 \x03(\v2\x12.google.rpc.StatusR\x06errors\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x86\x02\n" +
	"\x19GraduateExperimentRequest\x12K\n" +
	"\n" +
	"experiment\x18\x01 \x01(\tB+\xe0A\x02\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\n" +
	"experiment\x12w\n" +
	"\x18campaign_budget_mappings\x18\x02 \x03(\v28.google.ads.googleads.v20.services.CampaignBudgetMappingB\x03\xe0A\x02R\x16campaignBudgetMappings\x12#\n" +
	"\rvalidate_only\x18\x03 \x01(\bR\fvalidateOnly\"\xcd\x01\n" +
	"\x15CampaignBudgetMapping\x12Z\n" +
	"\x13experiment_campaign\x18\x01 \x01(\tB)\xe0A\x02\xfaA#\n" +
	"!googleads.googleapis.com/CampaignR\x12experimentCampaign\x12X\n" +
	"\x0fcampaign_budget\x18\x02 \x01(\tB/\xe0A\x02\xfaA)\n" +
	"'googleads.googleapis.com/CampaignBudgetR\x0ecampaignBudget\"\x92\x01\n" +
	"\x19ScheduleExperimentRequest\x12P\n" +
	"\rresource_name\x18\x01 \x01(\tB+\xe0A\x02\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\fresourceName\x12#\n" +
	"\rvalidate_only\x18\x02 \x01(\bR\fvalidateOnly\"i\n" +
	"\x1aScheduleExperimentMetadata\x12K\n" +
	"\n" +
	"experiment\x18\x01 \x01(\tB+\xe0A\x02\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\n" +
	"experiment\"\x91\x01\n" +
	"\x18PromoteExperimentRequest\x12P\n" +
	"\rresource_name\x18\x01 \x01(\tB+\xe0A\x02\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\fresourceName\x12#\n" +
	"\rvalidate_only\x18\x02 \x01(\bR\fvalidateOnly\"h\n" +
	"\x19PromoteExperimentMetadata\x12K\n" +
	"\n" +
	"experiment\x18\x01 \x01(\tB+\xe0A\x02\xfaA%\n" +
	"#googleads.googleapis.com/ExperimentR\n" +
	"experiment2\xb3\f\n" +
	"\x11ExperimentService\x12\xe5\x01\n" +
	"\x11MutateExperiments\x12;.google.ads.googleads.v20.services.MutateExperimentsRequest\x1a<.google.ads.googleads.v20.services.MutateExperimentsResponse\"U\xdaA\x16customer_id,operations\x82\xd3\xe4\x93\x026:\x01*\"1/v20/customers/{customer_id=*}/experiments:mutate\x12\xb3\x01\n" +
	"\rEndExperiment\x127.google.ads.googleads.v20.services.EndExperimentRequest\x1a\x16.google.protobuf.Empty\"Q\xdaA\n" +
	"experiment\x82\xd3\xe4\x93\x02>:\x01*\"9/v20/{experiment=customers/*/experiments/*}:endExperiment\x12\x88\x02\n" +
	"\x19ListExperimentAsyncErrors\x12C.google.ads.googleads.v20.services.ListExperimentAsyncErrorsRequest\x1aD.google.ads.googleads.v20.services.ListExperimentAsyncErrorsResponse\"`\xdaA\rresource_name\x82\xd3\xe4\x93\x02J\x12H/v20/{resource_name=customers/*/experiments/*}:listExperimentAsyncErrors\x12\xdb\x01\n" +
	"\x12GraduateExperiment\x12<.google.ads.googleads.v20.services.GraduateExperimentRequest\x1a\x16.google.protobuf.Empty\"o\xdaA#experiment,campaign_budget_mappings\x82\xd3\xe4\x93\x02C:\x01*\">/v20/{experiment=customers/*/experiments/*}:graduateExperiment\x12\xa8\x02\n" +
	"\x12ScheduleExperiment\x12<.google.ads.googleads.v20.services.ScheduleExperimentRequest\x1a\x1d.google.longrunning.Operation\"\xb4\x01\xcaAU\n" +
	"\x15google.protobuf.Empty\x12<google.ads.googleads.v20.services.ScheduleExperimentMetadata\xdaA\rresource_name\x82\xd3\xe4\x93\x02F:\x01*\"A/v20/{resource_name=customers/*/experiments/*}:scheduleExperiment\x12\xa4\x02\n" +
	"\x11PromoteExperiment\x12;.google.ads.googleads.v20.services.PromoteExperimentRequest\x1a\x1d.google.longrunning.Operation\"\xb2\x01\xcaAT\n" +
	"\x15google.protobuf.Empty\x12;google.ads.googleads.v20.services.PromoteExperimentMetadata\xdaA\rresource_name\x82\xd3\xe4\x93\x02E:\x01*\"@/v20/{resource_name=customers/*/experiments/*}:promoteExperiment\x1aE\xcaA\x18googleads.googleapis.com\xd2A'https://www.googleapis.com/auth/adwordsB\x82\x02\n" +
	"%com.google.ads.googleads.v20.servicesB\x16ExperimentServiceProtoP\x01ZIgoogle.golang.org/genproto/googleapis/ads/googleads/v20/services;services\xa2\x02\x03GAA\xaa\x02!Google.Ads.GoogleAds.V20.Services\xca\x02!Google\\Ads\\GoogleAds\\V20\\Services\xea\x02%Google::Ads::GoogleAds::V20::Servicesb\x06proto3"

var (
	file_google_ads_googleads_v20_services_experiment_service_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_services_experiment_service_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_services_experiment_service_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_services_experiment_service_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_services_experiment_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_experiment_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_experiment_service_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_services_experiment_service_proto_rawDescData
}

var file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_google_ads_googleads_v20_services_experiment_service_proto_goTypes = []any{
	(*MutateExperimentsRequest)(nil),          // 0: google.ads.googleads.v20.services.MutateExperimentsRequest
	(*ExperimentOperation)(nil),               // 1: google.ads.googleads.v20.services.ExperimentOperation
	(*MutateExperimentsResponse)(nil),         // 2: google.ads.googleads.v20.services.MutateExperimentsResponse
	(*MutateExperimentResult)(nil),            // 3: google.ads.googleads.v20.services.MutateExperimentResult
	(*EndExperimentRequest)(nil),              // 4: google.ads.googleads.v20.services.EndExperimentRequest
	(*ListExperimentAsyncErrorsRequest)(nil),  // 5: google.ads.googleads.v20.services.ListExperimentAsyncErrorsRequest
	(*ListExperimentAsyncErrorsResponse)(nil), // 6: google.ads.googleads.v20.services.ListExperimentAsyncErrorsResponse
	(*GraduateExperimentRequest)(nil),         // 7: google.ads.googleads.v20.services.GraduateExperimentRequest
	(*CampaignBudgetMapping)(nil),             // 8: google.ads.googleads.v20.services.CampaignBudgetMapping
	(*ScheduleExperimentRequest)(nil),         // 9: google.ads.googleads.v20.services.ScheduleExperimentRequest
	(*ScheduleExperimentMetadata)(nil),        // 10: google.ads.googleads.v20.services.ScheduleExperimentMetadata
	(*PromoteExperimentRequest)(nil),          // 11: google.ads.googleads.v20.services.PromoteExperimentRequest
	(*PromoteExperimentMetadata)(nil),         // 12: google.ads.googleads.v20.services.PromoteExperimentMetadata
	(*fieldmaskpb.FieldMask)(nil),             // 13: google.protobuf.FieldMask
	(*resources.Experiment)(nil),              // 14: google.ads.googleads.v20.resources.Experiment
	(*status.Status)(nil),                     // 15: google.rpc.Status
	(*emptypb.Empty)(nil),                     // 16: google.protobuf.Empty
	(*longrunningpb.Operation)(nil),           // 17: google.longrunning.Operation
}
var file_google_ads_googleads_v20_services_experiment_service_proto_depIdxs = []int32{
	1,  // 0: google.ads.googleads.v20.services.MutateExperimentsRequest.operations:type_name -> google.ads.googleads.v20.services.ExperimentOperation
	13, // 1: google.ads.googleads.v20.services.ExperimentOperation.update_mask:type_name -> google.protobuf.FieldMask
	14, // 2: google.ads.googleads.v20.services.ExperimentOperation.create:type_name -> google.ads.googleads.v20.resources.Experiment
	14, // 3: google.ads.googleads.v20.services.ExperimentOperation.update:type_name -> google.ads.googleads.v20.resources.Experiment
	15, // 4: google.ads.googleads.v20.services.MutateExperimentsResponse.partial_failure_error:type_name -> google.rpc.Status
	3,  // 5: google.ads.googleads.v20.services.MutateExperimentsResponse.results:type_name -> google.ads.googleads.v20.services.MutateExperimentResult
	15, // 6: google.ads.googleads.v20.services.ListExperimentAsyncErrorsResponse.errors:type_name -> google.rpc.Status
	8,  // 7: google.ads.googleads.v20.services.GraduateExperimentRequest.campaign_budget_mappings:type_name -> google.ads.googleads.v20.services.CampaignBudgetMapping
	0,  // 8: google.ads.googleads.v20.services.ExperimentService.MutateExperiments:input_type -> google.ads.googleads.v20.services.MutateExperimentsRequest
	4,  // 9: google.ads.googleads.v20.services.ExperimentService.EndExperiment:input_type -> google.ads.googleads.v20.services.EndExperimentRequest
	5,  // 10: google.ads.googleads.v20.services.ExperimentService.ListExperimentAsyncErrors:input_type -> google.ads.googleads.v20.services.ListExperimentAsyncErrorsRequest
	7,  // 11: google.ads.googleads.v20.services.ExperimentService.GraduateExperiment:input_type -> google.ads.googleads.v20.services.GraduateExperimentRequest
	9,  // 12: google.ads.googleads.v20.services.ExperimentService.ScheduleExperiment:input_type -> google.ads.googleads.v20.services.ScheduleExperimentRequest
	11, // 13: google.ads.googleads.v20.services.ExperimentService.PromoteExperiment:input_type -> google.ads.googleads.v20.services.PromoteExperimentRequest
	2,  // 14: google.ads.googleads.v20.services.ExperimentService.MutateExperiments:output_type -> google.ads.googleads.v20.services.MutateExperimentsResponse
	16, // 15: google.ads.googleads.v20.services.ExperimentService.EndExperiment:output_type -> google.protobuf.Empty
	6,  // 16: google.ads.googleads.v20.services.ExperimentService.ListExperimentAsyncErrors:output_type -> google.ads.googleads.v20.services.ListExperimentAsyncErrorsResponse
	16, // 17: google.ads.googleads.v20.services.ExperimentService.GraduateExperiment:output_type -> google.protobuf.Empty
	17, // 18: google.ads.googleads.v20.services.ExperimentService.ScheduleExperiment:output_type -> google.longrunning.Operation
	17, // 19: google.ads.googleads.v20.services.ExperimentService.PromoteExperiment:output_type -> google.longrunning.Operation
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_services_experiment_service_proto_init() }
func file_google_ads_googleads_v20_services_experiment_service_proto_init() {
	if File_google_ads_googleads_v20_services_experiment_service_proto != nil {
		return
	}
	file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes[1].OneofWrappers = []any{
		(*ExperimentOperation_Create)(nil),
		(*ExperimentOperation_Update)(nil),
		(*ExperimentOperation_Remove)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_experiment_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_experiment_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_ads_googleads_v20_services_experiment_service_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_services_experiment_service_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_services_experiment_service_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_services_experiment_service_proto = out.File
	file_google_ads_googleads_v20_services_experiment_service_proto_goTypes = nil
	file_google_ads_googleads_v20_services_experiment_service_proto_depIdxs = nil
}
