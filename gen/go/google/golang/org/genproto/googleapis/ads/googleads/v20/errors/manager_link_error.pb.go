// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/errors/manager_link_error.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum describing possible ManagerLink errors.
type ManagerLinkErrorEnum_ManagerLinkError int32

const (
	// Enum unspecified.
	ManagerLinkErrorEnum_UNSPECIFIED ManagerLinkErrorEnum_ManagerLinkError = 0
	// The received error code is not known in this version.
	ManagerLinkErrorEnum_UNKNOWN ManagerLinkErrorEnum_ManagerLinkError = 1
	// The manager and client have incompatible account types.
	ManagerLinkErrorEnum_ACCOUNTS_NOT_COMPATIBLE_FOR_LINKING ManagerLinkErrorEnum_ManagerLinkError = 2
	// Client is already linked to too many managers.
	ManagerLinkErrorEnum_TOO_MANY_MANAGERS ManagerLinkErrorEnum_ManagerLinkError = 3
	// Manager has too many pending invitations.
	ManagerLinkErrorEnum_TOO_MANY_INVITES ManagerLinkErrorEnum_ManagerLinkError = 4
	// Client is already invited by this manager.
	ManagerLinkErrorEnum_ALREADY_INVITED_BY_THIS_MANAGER ManagerLinkErrorEnum_ManagerLinkError = 5
	// The client is already managed by this manager.
	ManagerLinkErrorEnum_ALREADY_MANAGED_BY_THIS_MANAGER ManagerLinkErrorEnum_ManagerLinkError = 6
	// Client is already managed in hierarchy.
	ManagerLinkErrorEnum_ALREADY_MANAGED_IN_HIERARCHY ManagerLinkErrorEnum_ManagerLinkError = 7
	// Manager and sub-manager to be linked have duplicate client.
	ManagerLinkErrorEnum_DUPLICATE_CHILD_FOUND ManagerLinkErrorEnum_ManagerLinkError = 8
	// Client has no active user that can access the client account.
	ManagerLinkErrorEnum_CLIENT_HAS_NO_ADMIN_USER ManagerLinkErrorEnum_ManagerLinkError = 9
	// Adding this link would exceed the maximum hierarchy depth.
	ManagerLinkErrorEnum_MAX_DEPTH_EXCEEDED ManagerLinkErrorEnum_ManagerLinkError = 10
	// Adding this link will create a cycle.
	ManagerLinkErrorEnum_CYCLE_NOT_ALLOWED ManagerLinkErrorEnum_ManagerLinkError = 11
	// Manager account has the maximum number of linked clients.
	ManagerLinkErrorEnum_TOO_MANY_ACCOUNTS ManagerLinkErrorEnum_ManagerLinkError = 12
	// Parent manager account has the maximum number of linked clients.
	ManagerLinkErrorEnum_TOO_MANY_ACCOUNTS_AT_MANAGER ManagerLinkErrorEnum_ManagerLinkError = 13
	// The account is not authorized owner.
	ManagerLinkErrorEnum_NON_OWNER_USER_CANNOT_MODIFY_LINK ManagerLinkErrorEnum_ManagerLinkError = 14
	// Your manager account is suspended, and you are no longer allowed to link
	// to clients.
	ManagerLinkErrorEnum_SUSPENDED_ACCOUNT_CANNOT_ADD_CLIENTS ManagerLinkErrorEnum_ManagerLinkError = 15
	// You are not allowed to move a client to a manager that is not under your
	// current hierarchy.
	ManagerLinkErrorEnum_CLIENT_OUTSIDE_TREE ManagerLinkErrorEnum_ManagerLinkError = 16
	// The changed status for mutate link is invalid.
	ManagerLinkErrorEnum_INVALID_STATUS_CHANGE ManagerLinkErrorEnum_ManagerLinkError = 17
	// The change for mutate link is invalid.
	ManagerLinkErrorEnum_INVALID_CHANGE ManagerLinkErrorEnum_ManagerLinkError = 18
	// You are not allowed to link a manager account to itself.
	ManagerLinkErrorEnum_CUSTOMER_CANNOT_MANAGE_SELF ManagerLinkErrorEnum_ManagerLinkError = 19
	// The link was created with status ACTIVE and not PENDING.
	ManagerLinkErrorEnum_CREATING_ENABLED_LINK_NOT_ALLOWED ManagerLinkErrorEnum_ManagerLinkError = 20
)

// Enum value maps for ManagerLinkErrorEnum_ManagerLinkError.
var (
	ManagerLinkErrorEnum_ManagerLinkError_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "UNKNOWN",
		2:  "ACCOUNTS_NOT_COMPATIBLE_FOR_LINKING",
		3:  "TOO_MANY_MANAGERS",
		4:  "TOO_MANY_INVITES",
		5:  "ALREADY_INVITED_BY_THIS_MANAGER",
		6:  "ALREADY_MANAGED_BY_THIS_MANAGER",
		7:  "ALREADY_MANAGED_IN_HIERARCHY",
		8:  "DUPLICATE_CHILD_FOUND",
		9:  "CLIENT_HAS_NO_ADMIN_USER",
		10: "MAX_DEPTH_EXCEEDED",
		11: "CYCLE_NOT_ALLOWED",
		12: "TOO_MANY_ACCOUNTS",
		13: "TOO_MANY_ACCOUNTS_AT_MANAGER",
		14: "NON_OWNER_USER_CANNOT_MODIFY_LINK",
		15: "SUSPENDED_ACCOUNT_CANNOT_ADD_CLIENTS",
		16: "CLIENT_OUTSIDE_TREE",
		17: "INVALID_STATUS_CHANGE",
		18: "INVALID_CHANGE",
		19: "CUSTOMER_CANNOT_MANAGE_SELF",
		20: "CREATING_ENABLED_LINK_NOT_ALLOWED",
	}
	ManagerLinkErrorEnum_ManagerLinkError_value = map[string]int32{
		"UNSPECIFIED":                          0,
		"UNKNOWN":                              1,
		"ACCOUNTS_NOT_COMPATIBLE_FOR_LINKING":  2,
		"TOO_MANY_MANAGERS":                    3,
		"TOO_MANY_INVITES":                     4,
		"ALREADY_INVITED_BY_THIS_MANAGER":      5,
		"ALREADY_MANAGED_BY_THIS_MANAGER":      6,
		"ALREADY_MANAGED_IN_HIERARCHY":         7,
		"DUPLICATE_CHILD_FOUND":                8,
		"CLIENT_HAS_NO_ADMIN_USER":             9,
		"MAX_DEPTH_EXCEEDED":                   10,
		"CYCLE_NOT_ALLOWED":                    11,
		"TOO_MANY_ACCOUNTS":                    12,
		"TOO_MANY_ACCOUNTS_AT_MANAGER":         13,
		"NON_OWNER_USER_CANNOT_MODIFY_LINK":    14,
		"SUSPENDED_ACCOUNT_CANNOT_ADD_CLIENTS": 15,
		"CLIENT_OUTSIDE_TREE":                  16,
		"INVALID_STATUS_CHANGE":                17,
		"INVALID_CHANGE":                       18,
		"CUSTOMER_CANNOT_MANAGE_SELF":          19,
		"CREATING_ENABLED_LINK_NOT_ALLOWED":    20,
	}
)

func (x ManagerLinkErrorEnum_ManagerLinkError) Enum() *ManagerLinkErrorEnum_ManagerLinkError {
	p := new(ManagerLinkErrorEnum_ManagerLinkError)
	*p = x
	return p
}

func (x ManagerLinkErrorEnum_ManagerLinkError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagerLinkErrorEnum_ManagerLinkError) Descriptor() protoreflect.EnumDescriptor {
	return file_google_ads_googleads_v20_errors_manager_link_error_proto_enumTypes[0].Descriptor()
}

func (ManagerLinkErrorEnum_ManagerLinkError) Type() protoreflect.EnumType {
	return &file_google_ads_googleads_v20_errors_manager_link_error_proto_enumTypes[0]
}

func (x ManagerLinkErrorEnum_ManagerLinkError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagerLinkErrorEnum_ManagerLinkError.Descriptor instead.
func (ManagerLinkErrorEnum_ManagerLinkError) EnumDescriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescGZIP(), []int{0, 0}
}

// Container for enum describing possible ManagerLink errors.
type ManagerLinkErrorEnum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagerLinkErrorEnum) Reset() {
	*x = ManagerLinkErrorEnum{}
	mi := &file_google_ads_googleads_v20_errors_manager_link_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagerLinkErrorEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerLinkErrorEnum) ProtoMessage() {}

func (x *ManagerLinkErrorEnum) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_errors_manager_link_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerLinkErrorEnum.ProtoReflect.Descriptor instead.
func (*ManagerLinkErrorEnum) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescGZIP(), []int{0}
}

var File_google_ads_googleads_v20_errors_manager_link_error_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDesc = "" +
	"\n" +
	"8google/ads/googleads/v20/errors/manager_link_error.proto\x12\x1fgoogle.ads.googleads.v20.errors\"\x8d\x05\n" +
	"\x14ManagerLinkErrorEnum\"\xf4\x04\n" +
	"\x10ManagerLinkError\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aUNKNOWN\x10\x01\x12'\n" +
	"#ACCOUNTS_NOT_COMPATIBLE_FOR_LINKING\x10\x02\x12\x15\n" +
	"\x11TOO_MANY_MANAGERS\x10\x03\x12\x14\n" +
	"\x10TOO_MANY_INVITES\x10\x04\x12#\n" +
	"\x1fALREADY_INVITED_BY_THIS_MANAGER\x10\x05\x12#\n" +
	"\x1fALREADY_MANAGED_BY_THIS_MANAGER\x10\x06\x12 \n" +
	"\x1cALREADY_MANAGED_IN_HIERARCHY\x10\a\x12\x19\n" +
	"\x15DUPLICATE_CHILD_FOUND\x10\b\x12\x1c\n" +
	"\x18CLIENT_HAS_NO_ADMIN_USER\x10\t\x12\x16\n" +
	"\x12MAX_DEPTH_EXCEEDED\x10\n" +
	"\x12\x15\n" +
	"\x11CYCLE_NOT_ALLOWED\x10\v\x12\x15\n" +
	"\x11TOO_MANY_ACCOUNTS\x10\f\x12 \n" +
	"\x1cTOO_MANY_ACCOUNTS_AT_MANAGER\x10\r\x12%\n" +
	"!NON_OWNER_USER_CANNOT_MODIFY_LINK\x10\x0e\x12(\n" +
	"$SUSPENDED_ACCOUNT_CANNOT_ADD_CLIENTS\x10\x0f\x12\x17\n" +
	"\x13CLIENT_OUTSIDE_TREE\x10\x10\x12\x19\n" +
	"\x15INVALID_STATUS_CHANGE\x10\x11\x12\x12\n" +
	"\x0eINVALID_CHANGE\x10\x12\x12\x1f\n" +
	"\x1bCUSTOMER_CANNOT_MANAGE_SELF\x10\x13\x12%\n" +
	"!CREATING_ENABLED_LINK_NOT_ALLOWED\x10\x14B\xf5\x01\n" +
	"#com.google.ads.googleads.v20.errorsB\x15ManagerLinkErrorProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v20/errors;errors\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V20.Errors\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V20\\Errors\xea\x02#Google::Ads::GoogleAds::V20::Errorsb\x06proto3"

var (
	file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDescData
}

var file_google_ads_googleads_v20_errors_manager_link_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_ads_googleads_v20_errors_manager_link_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_ads_googleads_v20_errors_manager_link_error_proto_goTypes = []any{
	(ManagerLinkErrorEnum_ManagerLinkError)(0), // 0: google.ads.googleads.v20.errors.ManagerLinkErrorEnum.ManagerLinkError
	(*ManagerLinkErrorEnum)(nil),               // 1: google.ads.googleads.v20.errors.ManagerLinkErrorEnum
}
var file_google_ads_googleads_v20_errors_manager_link_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_errors_manager_link_error_proto_init() }
func file_google_ads_googleads_v20_errors_manager_link_error_proto_init() {
	if File_google_ads_googleads_v20_errors_manager_link_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDesc), len(file_google_ads_googleads_v20_errors_manager_link_error_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_errors_manager_link_error_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_errors_manager_link_error_proto_depIdxs,
		EnumInfos:         file_google_ads_googleads_v20_errors_manager_link_error_proto_enumTypes,
		MessageInfos:      file_google_ads_googleads_v20_errors_manager_link_error_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_errors_manager_link_error_proto = out.File
	file_google_ads_googleads_v20_errors_manager_link_error_proto_goTypes = nil
	file_google_ads_googleads_v20_errors_manager_link_error_proto_depIdxs = nil
}
