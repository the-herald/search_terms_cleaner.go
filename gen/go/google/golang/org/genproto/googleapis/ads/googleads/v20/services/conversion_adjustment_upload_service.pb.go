// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/services/conversion_adjustment_upload_service.proto

package services

import (
	common "google.golang.org/genproto/googleapis/ads/googleads/v20/common"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v20/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for
// [ConversionAdjustmentUploadService.UploadConversionAdjustments][google.ads.googleads.v20.services.ConversionAdjustmentUploadService.UploadConversionAdjustments].
type UploadConversionAdjustmentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the customer performing the upload.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Required. The conversion adjustments that are being uploaded.
	ConversionAdjustments []*ConversionAdjustment `protobuf:"bytes,2,rep,name=conversion_adjustments,json=conversionAdjustments,proto3" json:"conversion_adjustments,omitempty"`
	// Required. If true, successful operations will be carried out and invalid
	// operations will return errors. If false, all operations will be carried out
	// in one transaction if and only if they are all valid. This should always be
	// set to true.
	// See
	// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
	// for more information about partial failure.
	PartialFailure bool `protobuf:"varint,3,opt,name=partial_failure,json=partialFailure,proto3" json:"partial_failure,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly bool `protobuf:"varint,4,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	// Optional. Optional input to set job ID. Must be a non-negative number that
	// is less than 2^31 if provided. If this field is not provided, the API will
	// generate a job ID in the range [2^31, (2^63)-1]. The API will return the
	// value for this request in the `job_id` field of the
	// `UploadConversionAdjustmentsResponse`.
	JobId         *int32 `protobuf:"varint,5,opt,name=job_id,json=jobId,proto3,oneof" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadConversionAdjustmentsRequest) Reset() {
	*x = UploadConversionAdjustmentsRequest{}
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadConversionAdjustmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadConversionAdjustmentsRequest) ProtoMessage() {}

func (x *UploadConversionAdjustmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadConversionAdjustmentsRequest.ProtoReflect.Descriptor instead.
func (*UploadConversionAdjustmentsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadConversionAdjustmentsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *UploadConversionAdjustmentsRequest) GetConversionAdjustments() []*ConversionAdjustment {
	if x != nil {
		return x.ConversionAdjustments
	}
	return nil
}

func (x *UploadConversionAdjustmentsRequest) GetPartialFailure() bool {
	if x != nil {
		return x.PartialFailure
	}
	return false
}

func (x *UploadConversionAdjustmentsRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

func (x *UploadConversionAdjustmentsRequest) GetJobId() int32 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

// Response message for
// [ConversionAdjustmentUploadService.UploadConversionAdjustments][google.ads.googleads.v20.services.ConversionAdjustmentUploadService.UploadConversionAdjustments].
type UploadConversionAdjustmentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Errors that pertain to conversion adjustment failures in the partial
	// failure mode. Returned when all errors occur inside the adjustments. If any
	// errors occur outside the adjustments (for example, auth errors), we return
	// an RPC level error. See
	// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
	// for more information about partial failure.
	PartialFailureError *status.Status `protobuf:"bytes,1,opt,name=partial_failure_error,json=partialFailureError,proto3" json:"partial_failure_error,omitempty"`
	// Returned for successfully processed conversion adjustments. Proto will be
	// empty for rows that received an error. Results are not returned when
	// validate_only is true.
	Results []*ConversionAdjustmentResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Job ID for the upload batch.
	JobId         int64 `protobuf:"varint,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadConversionAdjustmentsResponse) Reset() {
	*x = UploadConversionAdjustmentsResponse{}
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadConversionAdjustmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadConversionAdjustmentsResponse) ProtoMessage() {}

func (x *UploadConversionAdjustmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadConversionAdjustmentsResponse.ProtoReflect.Descriptor instead.
func (*UploadConversionAdjustmentsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadConversionAdjustmentsResponse) GetPartialFailureError() *status.Status {
	if x != nil {
		return x.PartialFailureError
	}
	return nil
}

func (x *UploadConversionAdjustmentsResponse) GetResults() []*ConversionAdjustmentResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *UploadConversionAdjustmentsResponse) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

// A conversion adjustment.
type ConversionAdjustment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// For adjustments, uniquely identifies a conversion that was reported
	// without an order ID specified. If the adjustment_type is ENHANCEMENT, this
	// value is optional but may be set in addition to the order_id.
	GclidDateTimePair *GclidDateTimePair `protobuf:"bytes,12,opt,name=gclid_date_time_pair,json=gclidDateTimePair,proto3" json:"gclid_date_time_pair,omitempty"`
	// The order ID of the conversion to be adjusted. If the conversion was
	// reported with an order ID specified, that order ID must be used as the
	// identifier here. The order ID is required for enhancements.
	OrderId *string `protobuf:"bytes,13,opt,name=order_id,json=orderId,proto3,oneof" json:"order_id,omitempty"`
	// Resource name of the conversion action associated with this conversion
	// adjustment. Note: Although this resource name consists of a customer id and
	// a conversion action id, validation will ignore the customer id and use the
	// conversion action id as the sole identifier of the conversion action.
	ConversionAction *string `protobuf:"bytes,8,opt,name=conversion_action,json=conversionAction,proto3,oneof" json:"conversion_action,omitempty"`
	// The date time at which the adjustment occurred. Must be after the
	// conversion_date_time. The timezone must be specified. The format is
	// "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	AdjustmentDateTime *string `protobuf:"bytes,9,opt,name=adjustment_date_time,json=adjustmentDateTime,proto3,oneof" json:"adjustment_date_time,omitempty"`
	// The adjustment type.
	AdjustmentType enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType `protobuf:"varint,5,opt,name=adjustment_type,json=adjustmentType,proto3,enum=google.ads.googleads.v20.enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType" json:"adjustment_type,omitempty"`
	// Information needed to restate the conversion's value.
	// Required for restatements. Should not be supplied for retractions. An error
	// will be returned if provided for a retraction.
	// NOTE: If you want to upload a second restatement with a different adjusted
	// value, it must have a new, more recent, adjustment occurrence time.
	// Otherwise, it will be treated as a duplicate of the previous restatement
	// and ignored.
	RestatementValue *RestatementValue `protobuf:"bytes,6,opt,name=restatement_value,json=restatementValue,proto3" json:"restatement_value,omitempty"`
	// The user identifiers to enhance the original conversion.
	// ConversionAdjustmentUploadService only accepts user identifiers in
	// enhancements. The maximum number of user identifiers for each
	// enhancement is 5.
	UserIdentifiers []*common.UserIdentifier `protobuf:"bytes,10,rep,name=user_identifiers,json=userIdentifiers,proto3" json:"user_identifiers,omitempty"`
	// The user agent to enhance the original conversion. This can be found in
	// your user's HTTP request header when they convert on your web page.
	// Example, "Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X)". User
	// agent can only be specified in enhancements with user identifiers. This
	// should match the user agent of the request that sent the original
	// conversion so the conversion and its enhancement are either both attributed
	// as same-device or both attributed as cross-device.
	UserAgent     *string `protobuf:"bytes,11,opt,name=user_agent,json=userAgent,proto3,oneof" json:"user_agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversionAdjustment) Reset() {
	*x = ConversionAdjustment{}
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionAdjustment) ProtoMessage() {}

func (x *ConversionAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionAdjustment.ProtoReflect.Descriptor instead.
func (*ConversionAdjustment) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescGZIP(), []int{2}
}

func (x *ConversionAdjustment) GetGclidDateTimePair() *GclidDateTimePair {
	if x != nil {
		return x.GclidDateTimePair
	}
	return nil
}

func (x *ConversionAdjustment) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *ConversionAdjustment) GetConversionAction() string {
	if x != nil && x.ConversionAction != nil {
		return *x.ConversionAction
	}
	return ""
}

func (x *ConversionAdjustment) GetAdjustmentDateTime() string {
	if x != nil && x.AdjustmentDateTime != nil {
		return *x.AdjustmentDateTime
	}
	return ""
}

func (x *ConversionAdjustment) GetAdjustmentType() enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType {
	if x != nil {
		return x.AdjustmentType
	}
	return enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType(0)
}

func (x *ConversionAdjustment) GetRestatementValue() *RestatementValue {
	if x != nil {
		return x.RestatementValue
	}
	return nil
}

func (x *ConversionAdjustment) GetUserIdentifiers() []*common.UserIdentifier {
	if x != nil {
		return x.UserIdentifiers
	}
	return nil
}

func (x *ConversionAdjustment) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

// Contains information needed to restate a conversion's value.
type RestatementValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The restated conversion value. This is the value of the conversion after
	// restatement. For example, to change the value of a conversion from 100 to
	// 70, an adjusted value of 70 should be reported.
	// NOTE: If you want to upload a second restatement with a different adjusted
	// value, it must have a new, more recent, adjustment occurrence time.
	// Otherwise, it will be treated as a duplicate of the previous restatement
	// and ignored.
	AdjustedValue *float64 `protobuf:"fixed64,3,opt,name=adjusted_value,json=adjustedValue,proto3,oneof" json:"adjusted_value,omitempty"`
	// The currency of the restated value. If not provided, then the default
	// currency from the conversion action is used, and if that is not set then
	// the account currency is used. This is the ISO 4217 3-character currency
	// code for example, USD or EUR.
	CurrencyCode  *string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3,oneof" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestatementValue) Reset() {
	*x = RestatementValue{}
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestatementValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestatementValue) ProtoMessage() {}

func (x *RestatementValue) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestatementValue.ProtoReflect.Descriptor instead.
func (*RestatementValue) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescGZIP(), []int{3}
}

func (x *RestatementValue) GetAdjustedValue() float64 {
	if x != nil && x.AdjustedValue != nil {
		return *x.AdjustedValue
	}
	return 0
}

func (x *RestatementValue) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

// Uniquely identifies a conversion that was reported without an order ID
// specified.
type GclidDateTimePair struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Google click ID (gclid) associated with the original conversion for this
	// adjustment.
	Gclid *string `protobuf:"bytes,3,opt,name=gclid,proto3,oneof" json:"gclid,omitempty"`
	// The date time at which the original conversion for this adjustment
	// occurred. The timezone must be specified. The format is "yyyy-mm-dd
	// hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	ConversionDateTime *string `protobuf:"bytes,4,opt,name=conversion_date_time,json=conversionDateTime,proto3,oneof" json:"conversion_date_time,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GclidDateTimePair) Reset() {
	*x = GclidDateTimePair{}
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GclidDateTimePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GclidDateTimePair) ProtoMessage() {}

func (x *GclidDateTimePair) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GclidDateTimePair.ProtoReflect.Descriptor instead.
func (*GclidDateTimePair) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescGZIP(), []int{4}
}

func (x *GclidDateTimePair) GetGclid() string {
	if x != nil && x.Gclid != nil {
		return *x.Gclid
	}
	return ""
}

func (x *GclidDateTimePair) GetConversionDateTime() string {
	if x != nil && x.ConversionDateTime != nil {
		return *x.ConversionDateTime
	}
	return ""
}

// Information identifying a successfully processed ConversionAdjustment.
type ConversionAdjustmentResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The gclid and conversion date time of the conversion.
	GclidDateTimePair *GclidDateTimePair `protobuf:"bytes,9,opt,name=gclid_date_time_pair,json=gclidDateTimePair,proto3" json:"gclid_date_time_pair,omitempty"`
	// The order ID of the conversion to be adjusted.
	OrderId string `protobuf:"bytes,10,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Resource name of the conversion action associated with this conversion
	// adjustment.
	ConversionAction *string `protobuf:"bytes,7,opt,name=conversion_action,json=conversionAction,proto3,oneof" json:"conversion_action,omitempty"`
	// The date time at which the adjustment occurred. The format is
	// "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	AdjustmentDateTime *string `protobuf:"bytes,8,opt,name=adjustment_date_time,json=adjustmentDateTime,proto3,oneof" json:"adjustment_date_time,omitempty"`
	// The adjustment type.
	AdjustmentType enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType `protobuf:"varint,5,opt,name=adjustment_type,json=adjustmentType,proto3,enum=google.ads.googleads.v20.enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType" json:"adjustment_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConversionAdjustmentResult) Reset() {
	*x = ConversionAdjustmentResult{}
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionAdjustmentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionAdjustmentResult) ProtoMessage() {}

func (x *ConversionAdjustmentResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionAdjustmentResult.ProtoReflect.Descriptor instead.
func (*ConversionAdjustmentResult) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescGZIP(), []int{5}
}

func (x *ConversionAdjustmentResult) GetGclidDateTimePair() *GclidDateTimePair {
	if x != nil {
		return x.GclidDateTimePair
	}
	return nil
}

func (x *ConversionAdjustmentResult) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ConversionAdjustmentResult) GetConversionAction() string {
	if x != nil && x.ConversionAction != nil {
		return *x.ConversionAction
	}
	return ""
}

func (x *ConversionAdjustmentResult) GetAdjustmentDateTime() string {
	if x != nil && x.AdjustmentDateTime != nil {
		return *x.AdjustmentDateTime
	}
	return ""
}

func (x *ConversionAdjustmentResult) GetAdjustmentType() enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType {
	if x != nil {
		return x.AdjustmentType
	}
	return enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType(0)
}

var File_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDesc = "" +
	"\n" +
	"Lgoogle/ads/googleads/v20/services/conversion_adjustment_upload_service.proto\x12!google.ads.googleads.v20.services\x1a7google/ads/googleads/v20/common/offline_user_data.proto\x1a?google/ads/googleads/v20/enums/conversion_adjustment_type.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x17google/rpc/status.proto\"\xbe\x02\n" +
	"\"UploadConversionAdjustmentsRequest\x12$\n" +
	"\vcustomer_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"customerId\x12s\n" +
	"\x16conversion_adjustments\x18\x02 \x03(\v27.google.ads.googleads.v20.services.ConversionAdjustmentB\x03\xe0A\x02R\x15conversionAdjustments\x12,\n" +
	"\x0fpartial_failure\x18\x03 \x01(\bB\x03\xe0A\x02R\x0epartialFailure\x12#\n" +
	"\rvalidate_only\x18\x04 \x01(\bR\fvalidateOnly\x12\x1f\n" +
	"\x06job_id\x18\x05 \x01(\x05B\x03\xe0A\x01H\x00R\x05jobId\x88\x01\x01B\t\n" +
	"\a_job_id\"\xdd\x01\n" +
	"#UploadConversionAdjustmentsResponse\x12F\n" +
	"\x15partial_failure_error\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x13partialFailureError\x12W\n" +
	"\aresults\x18\x02 \x03(\v2=.google.ads.googleads.v20.services.ConversionAdjustmentResultR\aresults\x12\x15\n" +
	"\x06job_id\x18\x03 \x01(\x03R\x05jobId\"\xb3\x05\n" +
	"\x14ConversionAdjustment\x12e\n" +
	"\x14gclid_date_time_pair\x18\f \x01(\v24.google.ads.googleads.v20.services.GclidDateTimePairR\x11gclidDateTimePair\x12\x1e\n" +
	"\border_id\x18\r \x01(\tH\x00R\aorderId\x88\x01\x01\x120\n" +
	"\x11conversion_action\x18\b \x01(\tH\x01R\x10conversionAction\x88\x01\x01\x125\n" +
	"\x14adjustment_date_time\x18\t \x01(\tH\x02R\x12adjustmentDateTime\x88\x01\x01\x12~\n" +
	"\x0fadjustment_type\x18\x05 \x01(\x0e2U.google.ads.googleads.v20.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentTypeR\x0eadjustmentType\x12`\n" +
	"\x11restatement_value\x18\x06 \x01(\v23.google.ads.googleads.v20.services.RestatementValueR\x10restatementValue\x12Z\n" +
	"\x10user_identifiers\x18\n" +
	" \x03(\v2/.google.ads.googleads.v20.common.UserIdentifierR\x0fuserIdentifiers\x12\"\n" +
	"\n" +
	"user_agent\x18\v \x01(\tH\x03R\tuserAgent\x88\x01\x01B\v\n" +
	"\t_order_idB\x14\n" +
	"\x12_conversion_actionB\x17\n" +
	"\x15_adjustment_date_timeB\r\n" +
	"\v_user_agent\"\x8d\x01\n" +
	"\x10RestatementValue\x12*\n" +
	"\x0eadjusted_value\x18\x03 \x01(\x01H\x00R\radjustedValue\x88\x01\x01\x12(\n" +
	"\rcurrency_code\x18\x04 \x01(\tH\x01R\fcurrencyCode\x88\x01\x01B\x11\n" +
	"\x0f_adjusted_valueB\x10\n" +
	"\x0e_currency_code\"\x88\x01\n" +
	"\x11GclidDateTimePair\x12\x19\n" +
	"\x05gclid\x18\x03 \x01(\tH\x00R\x05gclid\x88\x01\x01\x125\n" +
	"\x14conversion_date_time\x18\x04 \x01(\tH\x01R\x12conversionDateTime\x88\x01\x01B\b\n" +
	"\x06_gclidB\x17\n" +
	"\x15_conversion_date_time\"\xb6\x03\n" +
	"\x1aConversionAdjustmentResult\x12e\n" +
	"\x14gclid_date_time_pair\x18\t \x01(\v24.google.ads.googleads.v20.services.GclidDateTimePairR\x11gclidDateTimePair\x12\x19\n" +
	"\border_id\x18\n" +
	" \x01(\tR\aorderId\x120\n" +
	"\x11conversion_action\x18\a \x01(\tH\x00R\x10conversionAction\x88\x01\x01\x125\n" +
	"\x14adjustment_date_time\x18\b \x01(\tH\x01R\x12adjustmentDateTime\x88\x01\x01\x12~\n" +
	"\x0fadjustment_type\x18\x05 \x01(\x0e2U.google.ads.googleads.v20.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentTypeR\x0eadjustmentTypeB\x14\n" +
	"\x12_conversion_actionB\x17\n" +
	"\x15_adjustment_date_time2\x95\x03\n" +
	"!ConversionAdjustmentUploadService\x12\xa8\x02\n" +
	"\x1bUploadConversionAdjustments\x12E.google.ads.googleads.v20.services.UploadConversionAdjustmentsRequest\x1aF.google.ads.googleads.v20.services.UploadConversionAdjustmentsResponse\"z\xdaA2customer_id,conversion_adjustments,partial_failure\x82\xd3\xe4\x93\x02?:\x01*\":/v20/customers/{customer_id=*}:uploadConversionAdjustments\x1aE\xcaA\x18googleads.googleapis.com\xd2A'https://www.googleapis.com/auth/adwordsB\x92\x02\n" +
	"%com.google.ads.googleads.v20.servicesB&ConversionAdjustmentUploadServiceProtoP\x01ZIgoogle.golang.org/genproto/googleapis/ads/googleads/v20/services;services\xa2\x02\x03GAA\xaa\x02!Google.Ads.GoogleAds.V20.Services\xca\x02!Google\\Ads\\GoogleAds\\V20\\Services\xea\x02%Google::Ads::GoogleAds::V20::Servicesb\x06proto3"

var (
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDescData
}

var file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_goTypes = []any{
	(*UploadConversionAdjustmentsRequest)(nil),                       // 0: google.ads.googleads.v20.services.UploadConversionAdjustmentsRequest
	(*UploadConversionAdjustmentsResponse)(nil),                      // 1: google.ads.googleads.v20.services.UploadConversionAdjustmentsResponse
	(*ConversionAdjustment)(nil),                                     // 2: google.ads.googleads.v20.services.ConversionAdjustment
	(*RestatementValue)(nil),                                         // 3: google.ads.googleads.v20.services.RestatementValue
	(*GclidDateTimePair)(nil),                                        // 4: google.ads.googleads.v20.services.GclidDateTimePair
	(*ConversionAdjustmentResult)(nil),                               // 5: google.ads.googleads.v20.services.ConversionAdjustmentResult
	(*status.Status)(nil),                                            // 6: google.rpc.Status
	(enums.ConversionAdjustmentTypeEnum_ConversionAdjustmentType)(0), // 7: google.ads.googleads.v20.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType
	(*common.UserIdentifier)(nil),                                    // 8: google.ads.googleads.v20.common.UserIdentifier
}
var file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_depIdxs = []int32{
	2,  // 0: google.ads.googleads.v20.services.UploadConversionAdjustmentsRequest.conversion_adjustments:type_name -> google.ads.googleads.v20.services.ConversionAdjustment
	6,  // 1: google.ads.googleads.v20.services.UploadConversionAdjustmentsResponse.partial_failure_error:type_name -> google.rpc.Status
	5,  // 2: google.ads.googleads.v20.services.UploadConversionAdjustmentsResponse.results:type_name -> google.ads.googleads.v20.services.ConversionAdjustmentResult
	4,  // 3: google.ads.googleads.v20.services.ConversionAdjustment.gclid_date_time_pair:type_name -> google.ads.googleads.v20.services.GclidDateTimePair
	7,  // 4: google.ads.googleads.v20.services.ConversionAdjustment.adjustment_type:type_name -> google.ads.googleads.v20.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType
	3,  // 5: google.ads.googleads.v20.services.ConversionAdjustment.restatement_value:type_name -> google.ads.googleads.v20.services.RestatementValue
	8,  // 6: google.ads.googleads.v20.services.ConversionAdjustment.user_identifiers:type_name -> google.ads.googleads.v20.common.UserIdentifier
	4,  // 7: google.ads.googleads.v20.services.ConversionAdjustmentResult.gclid_date_time_pair:type_name -> google.ads.googleads.v20.services.GclidDateTimePair
	7,  // 8: google.ads.googleads.v20.services.ConversionAdjustmentResult.adjustment_type:type_name -> google.ads.googleads.v20.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType
	0,  // 9: google.ads.googleads.v20.services.ConversionAdjustmentUploadService.UploadConversionAdjustments:input_type -> google.ads.googleads.v20.services.UploadConversionAdjustmentsRequest
	1,  // 10: google.ads.googleads.v20.services.ConversionAdjustmentUploadService.UploadConversionAdjustments:output_type -> google.ads.googleads.v20.services.UploadConversionAdjustmentsResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_init() }
func file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_init() {
	if File_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto != nil {
		return
	}
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[2].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[3].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto = out.File
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_goTypes = nil
	file_google_ads_googleads_v20_services_conversion_adjustment_upload_service_proto_depIdxs = nil
}
