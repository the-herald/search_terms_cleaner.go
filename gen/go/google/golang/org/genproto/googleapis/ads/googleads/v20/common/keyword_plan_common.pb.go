// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/common/keyword_plan_common.proto

package common

import (
	enums "google.golang.org/genproto/googleapis/ads/googleads/v20/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Historical metrics specific to the targeting options selected.
// Targeting options include geographies, network, and so on.
// Refer to https://support.google.com/google-ads/answer/3022575 for more
// details.
type KeywordPlanHistoricalMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Approximate number of monthly searches on this query, averaged
	// for the past 12 months.
	AvgMonthlySearches *int64 `protobuf:"varint,7,opt,name=avg_monthly_searches,json=avgMonthlySearches,proto3,oneof" json:"avg_monthly_searches,omitempty"`
	// Approximate number of searches on this query for the past twelve months.
	MonthlySearchVolumes []*MonthlySearchVolume `protobuf:"bytes,6,rep,name=monthly_search_volumes,json=monthlySearchVolumes,proto3" json:"monthly_search_volumes,omitempty"`
	// The competition level for the query.
	Competition enums.KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel `protobuf:"varint,2,opt,name=competition,proto3,enum=google.ads.googleads.v20.enums.KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel" json:"competition,omitempty"`
	// The competition index for the query in the range [0, 100].
	// Shows how competitive ad placement is for a keyword.
	// The level of competition from 0-100 is determined by the number of ad slots
	// filled divided by the total number of ad slots available. If not enough
	// data is available, null is returned.
	CompetitionIndex *int64 `protobuf:"varint,8,opt,name=competition_index,json=competitionIndex,proto3,oneof" json:"competition_index,omitempty"`
	// Top of page bid low range (20th percentile) in micros for the keyword.
	LowTopOfPageBidMicros *int64 `protobuf:"varint,9,opt,name=low_top_of_page_bid_micros,json=lowTopOfPageBidMicros,proto3,oneof" json:"low_top_of_page_bid_micros,omitempty"`
	// Top of page bid high range (80th percentile) in micros for the keyword.
	HighTopOfPageBidMicros *int64 `protobuf:"varint,10,opt,name=high_top_of_page_bid_micros,json=highTopOfPageBidMicros,proto3,oneof" json:"high_top_of_page_bid_micros,omitempty"`
	// Average Cost Per Click in micros for the keyword.
	AverageCpcMicros *int64 `protobuf:"varint,11,opt,name=average_cpc_micros,json=averageCpcMicros,proto3,oneof" json:"average_cpc_micros,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *KeywordPlanHistoricalMetrics) Reset() {
	*x = KeywordPlanHistoricalMetrics{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordPlanHistoricalMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordPlanHistoricalMetrics) ProtoMessage() {}

func (x *KeywordPlanHistoricalMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordPlanHistoricalMetrics.ProtoReflect.Descriptor instead.
func (*KeywordPlanHistoricalMetrics) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{0}
}

func (x *KeywordPlanHistoricalMetrics) GetAvgMonthlySearches() int64 {
	if x != nil && x.AvgMonthlySearches != nil {
		return *x.AvgMonthlySearches
	}
	return 0
}

func (x *KeywordPlanHistoricalMetrics) GetMonthlySearchVolumes() []*MonthlySearchVolume {
	if x != nil {
		return x.MonthlySearchVolumes
	}
	return nil
}

func (x *KeywordPlanHistoricalMetrics) GetCompetition() enums.KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel {
	if x != nil {
		return x.Competition
	}
	return enums.KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel(0)
}

func (x *KeywordPlanHistoricalMetrics) GetCompetitionIndex() int64 {
	if x != nil && x.CompetitionIndex != nil {
		return *x.CompetitionIndex
	}
	return 0
}

func (x *KeywordPlanHistoricalMetrics) GetLowTopOfPageBidMicros() int64 {
	if x != nil && x.LowTopOfPageBidMicros != nil {
		return *x.LowTopOfPageBidMicros
	}
	return 0
}

func (x *KeywordPlanHistoricalMetrics) GetHighTopOfPageBidMicros() int64 {
	if x != nil && x.HighTopOfPageBidMicros != nil {
		return *x.HighTopOfPageBidMicros
	}
	return 0
}

func (x *KeywordPlanHistoricalMetrics) GetAverageCpcMicros() int64 {
	if x != nil && x.AverageCpcMicros != nil {
		return *x.AverageCpcMicros
	}
	return 0
}

// Historical metrics options.
type HistoricalMetricsOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The year month range for historical metrics. If not specified, metrics
	// for the past 12 months are returned.
	// Search metrics are available for the past 4 years. If the search volume is
	// not available for the entire year_month_range provided, the subset of the
	// year month range for which search volume is available are returned.
	YearMonthRange *YearMonthRange `protobuf:"bytes,1,opt,name=year_month_range,json=yearMonthRange,proto3,oneof" json:"year_month_range,omitempty"`
	// Indicates whether to include average cost per click value.
	// Average CPC is provided only for legacy support.
	IncludeAverageCpc bool `protobuf:"varint,2,opt,name=include_average_cpc,json=includeAverageCpc,proto3" json:"include_average_cpc,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HistoricalMetricsOptions) Reset() {
	*x = HistoricalMetricsOptions{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalMetricsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalMetricsOptions) ProtoMessage() {}

func (x *HistoricalMetricsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalMetricsOptions.ProtoReflect.Descriptor instead.
func (*HistoricalMetricsOptions) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{1}
}

func (x *HistoricalMetricsOptions) GetYearMonthRange() *YearMonthRange {
	if x != nil {
		return x.YearMonthRange
	}
	return nil
}

func (x *HistoricalMetricsOptions) GetIncludeAverageCpc() bool {
	if x != nil {
		return x.IncludeAverageCpc
	}
	return false
}

// Monthly search volume.
type MonthlySearchVolume struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The year of the search volume (for example, 2020).
	Year *int64 `protobuf:"varint,4,opt,name=year,proto3,oneof" json:"year,omitempty"`
	// The month of the search volume.
	Month enums.MonthOfYearEnum_MonthOfYear `protobuf:"varint,2,opt,name=month,proto3,enum=google.ads.googleads.v20.enums.MonthOfYearEnum_MonthOfYear" json:"month,omitempty"`
	// Approximate number of searches for the month.
	// A null value indicates the search volume is unavailable for
	// that month.
	MonthlySearches *int64 `protobuf:"varint,5,opt,name=monthly_searches,json=monthlySearches,proto3,oneof" json:"monthly_searches,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MonthlySearchVolume) Reset() {
	*x = MonthlySearchVolume{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlySearchVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlySearchVolume) ProtoMessage() {}

func (x *MonthlySearchVolume) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlySearchVolume.ProtoReflect.Descriptor instead.
func (*MonthlySearchVolume) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{2}
}

func (x *MonthlySearchVolume) GetYear() int64 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *MonthlySearchVolume) GetMonth() enums.MonthOfYearEnum_MonthOfYear {
	if x != nil {
		return x.Month
	}
	return enums.MonthOfYearEnum_MonthOfYear(0)
}

func (x *MonthlySearchVolume) GetMonthlySearches() int64 {
	if x != nil && x.MonthlySearches != nil {
		return *x.MonthlySearches
	}
	return 0
}

// The aggregate metrics specification of the request.
type KeywordPlanAggregateMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of aggregate metrics to fetch data.
	AggregateMetricTypes []enums.KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType `protobuf:"varint,1,rep,packed,name=aggregate_metric_types,json=aggregateMetricTypes,proto3,enum=google.ads.googleads.v20.enums.KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType" json:"aggregate_metric_types,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *KeywordPlanAggregateMetrics) Reset() {
	*x = KeywordPlanAggregateMetrics{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordPlanAggregateMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordPlanAggregateMetrics) ProtoMessage() {}

func (x *KeywordPlanAggregateMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordPlanAggregateMetrics.ProtoReflect.Descriptor instead.
func (*KeywordPlanAggregateMetrics) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{3}
}

func (x *KeywordPlanAggregateMetrics) GetAggregateMetricTypes() []enums.KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType {
	if x != nil {
		return x.AggregateMetricTypes
	}
	return nil
}

// The aggregated historical metrics for keyword plan keywords.
type KeywordPlanAggregateMetricResults struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The aggregate searches for all the keywords segmented by device
	// for the specified time.
	// Supports the following device types: MOBILE, TABLET, DESKTOP.
	//
	// This is only set when KeywordPlanAggregateMetricTypeEnum.DEVICE is set
	// in the KeywordPlanAggregateMetrics field in the request.
	DeviceSearches []*KeywordPlanDeviceSearches `protobuf:"bytes,1,rep,name=device_searches,json=deviceSearches,proto3" json:"device_searches,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KeywordPlanAggregateMetricResults) Reset() {
	*x = KeywordPlanAggregateMetricResults{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordPlanAggregateMetricResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordPlanAggregateMetricResults) ProtoMessage() {}

func (x *KeywordPlanAggregateMetricResults) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordPlanAggregateMetricResults.ProtoReflect.Descriptor instead.
func (*KeywordPlanAggregateMetricResults) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{4}
}

func (x *KeywordPlanAggregateMetricResults) GetDeviceSearches() []*KeywordPlanDeviceSearches {
	if x != nil {
		return x.DeviceSearches
	}
	return nil
}

// The total searches for the device type during the specified time period.
type KeywordPlanDeviceSearches struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The device type.
	Device enums.DeviceEnum_Device `protobuf:"varint,1,opt,name=device,proto3,enum=google.ads.googleads.v20.enums.DeviceEnum_Device" json:"device,omitempty"`
	// The total searches for the device.
	SearchCount   *int64 `protobuf:"varint,2,opt,name=search_count,json=searchCount,proto3,oneof" json:"search_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordPlanDeviceSearches) Reset() {
	*x = KeywordPlanDeviceSearches{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordPlanDeviceSearches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordPlanDeviceSearches) ProtoMessage() {}

func (x *KeywordPlanDeviceSearches) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordPlanDeviceSearches.ProtoReflect.Descriptor instead.
func (*KeywordPlanDeviceSearches) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{5}
}

func (x *KeywordPlanDeviceSearches) GetDevice() enums.DeviceEnum_Device {
	if x != nil {
		return x.Device
	}
	return enums.DeviceEnum_Device(0)
}

func (x *KeywordPlanDeviceSearches) GetSearchCount() int64 {
	if x != nil && x.SearchCount != nil {
		return *x.SearchCount
	}
	return 0
}

// The annotations for the keyword plan keywords.
type KeywordAnnotations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of concepts for the keyword.
	Concepts      []*KeywordConcept `protobuf:"bytes,1,rep,name=concepts,proto3" json:"concepts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordAnnotations) Reset() {
	*x = KeywordAnnotations{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordAnnotations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordAnnotations) ProtoMessage() {}

func (x *KeywordAnnotations) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordAnnotations.ProtoReflect.Descriptor instead.
func (*KeywordAnnotations) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{6}
}

func (x *KeywordAnnotations) GetConcepts() []*KeywordConcept {
	if x != nil {
		return x.Concepts
	}
	return nil
}

// The concept for the keyword.
type KeywordConcept struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The concept name for the keyword in the concept_group.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The concept group of the concept details.
	ConceptGroup  *ConceptGroup `protobuf:"bytes,2,opt,name=concept_group,json=conceptGroup,proto3" json:"concept_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordConcept) Reset() {
	*x = KeywordConcept{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordConcept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordConcept) ProtoMessage() {}

func (x *KeywordConcept) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordConcept.ProtoReflect.Descriptor instead.
func (*KeywordConcept) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{7}
}

func (x *KeywordConcept) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeywordConcept) GetConceptGroup() *ConceptGroup {
	if x != nil {
		return x.ConceptGroup
	}
	return nil
}

// The concept group for the keyword concept.
type ConceptGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The concept group name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The concept group type.
	Type          enums.KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType `protobuf:"varint,2,opt,name=type,proto3,enum=google.ads.googleads.v20.enums.KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConceptGroup) Reset() {
	*x = ConceptGroup{}
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConceptGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConceptGroup) ProtoMessage() {}

func (x *ConceptGroup) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConceptGroup.ProtoReflect.Descriptor instead.
func (*ConceptGroup) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP(), []int{8}
}

func (x *ConceptGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConceptGroup) GetType() enums.KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType {
	if x != nil {
		return x.Type
	}
	return enums.KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType(0)
}

var File_google_ads_googleads_v20_common_keyword_plan_common_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDesc = "" +
	"\n" +
	"9google/ads/googleads/v20/common/keyword_plan_common.proto\x12\x1fgoogle.ads.googleads.v20.common\x1a+google/ads/googleads/v20/common/dates.proto\x1a+google/ads/googleads/v20/enums/device.proto\x1aGgoogle/ads/googleads/v20/enums/keyword_plan_aggregate_metric_type.proto\x1aCgoogle/ads/googleads/v20/enums/keyword_plan_competition_level.proto\x1aDgoogle/ads/googleads/v20/enums/keyword_plan_concept_group_type.proto\x1a2google/ads/googleads/v20/enums/month_of_year.proto\"\xac\x05\n" +
	"\x1cKeywordPlanHistoricalMetrics\x125\n" +
	"\x14avg_monthly_searches\x18\a \x01(\x03H\x00R\x12avgMonthlySearches\x88\x01\x01\x12j\n" +
	"\x16monthly_search_volumes\x18\x06 \x03(\v24.google.ads.googleads.v20.common.MonthlySearchVolumeR\x14monthlySearchVolumes\x12}\n" +
	"\vcompetition\x18\x02 \x01(\x0e2[.google.ads.googleads.v20.enums.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevelR\vcompetition\x120\n" +
	"\x11competition_index\x18\b \x01(\x03H\x01R\x10competitionIndex\x88\x01\x01\x12>\n" +
	"\x1alow_top_of_page_bid_micros\x18\t \x01(\x03H\x02R\x15lowTopOfPageBidMicros\x88\x01\x01\x12@\n" +
	"\x1bhigh_top_of_page_bid_micros\x18\n" +
	" \x01(\x03H\x03R\x16highTopOfPageBidMicros\x88\x01\x01\x121\n" +
	"\x12average_cpc_micros\x18\v \x01(\x03H\x04R\x10averageCpcMicros\x88\x01\x01B\x17\n" +
	"\x15_avg_monthly_searchesB\x14\n" +
	"\x12_competition_indexB\x1d\n" +
	"\x1b_low_top_of_page_bid_microsB\x1e\n" +
	"\x1c_high_top_of_page_bid_microsB\x15\n" +
	"\x13_average_cpc_micros\"\xbf\x01\n" +
	"\x18HistoricalMetricsOptions\x12^\n" +
	"\x10year_month_range\x18\x01 \x01(\v2/.google.ads.googleads.v20.common.YearMonthRangeH\x00R\x0eyearMonthRange\x88\x01\x01\x12.\n" +
	"\x13include_average_cpc\x18\x02 \x01(\bR\x11includeAverageCpcB\x13\n" +
	"\x11_year_month_range\"\xcf\x01\n" +
	"\x13MonthlySearchVolume\x12\x17\n" +
	"\x04year\x18\x04 \x01(\x03H\x00R\x04year\x88\x01\x01\x12Q\n" +
	"\x05month\x18\x02 \x01(\x0e2;.google.ads.googleads.v20.enums.MonthOfYearEnum.MonthOfYearR\x05month\x12.\n" +
	"\x10monthly_searches\x18\x05 \x01(\x03H\x01R\x0fmonthlySearches\x88\x01\x01B\a\n" +
	"\x05_yearB\x13\n" +
	"\x11_monthly_searches\"\xb7\x01\n" +
	"\x1bKeywordPlanAggregateMetrics\x12\x97\x01\n" +
	"\x16aggregate_metric_types\x18\x01 \x03(\x0e2a.google.ads.googleads.v20.enums.KeywordPlanAggregateMetricTypeEnum.KeywordPlanAggregateMetricTypeR\x14aggregateMetricTypes\"\x88\x01\n" +
	"!KeywordPlanAggregateMetricResults\x12c\n" +
	"\x0fdevice_searches\x18\x01 \x03(\v2:.google.ads.googleads.v20.common.KeywordPlanDeviceSearchesR\x0edeviceSearches\"\x9f\x01\n" +
	"\x19KeywordPlanDeviceSearches\x12I\n" +
	"\x06device\x18\x01 \x01(\x0e21.google.ads.googleads.v20.enums.DeviceEnum.DeviceR\x06device\x12&\n" +
	"\fsearch_count\x18\x02 \x01(\x03H\x00R\vsearchCount\x88\x01\x01B\x0f\n" +
	"\r_search_count\"a\n" +
	"\x12KeywordAnnotations\x12K\n" +
	"\bconcepts\x18\x01 \x03(\v2/.google.ads.googleads.v20.common.KeywordConceptR\bconcepts\"x\n" +
	"\x0eKeywordConcept\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12R\n" +
	"\rconcept_group\x18\x02 \x01(\v2-.google.ads.googleads.v20.common.ConceptGroupR\fconceptGroup\"\x93\x01\n" +
	"\fConceptGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12o\n" +
	"\x04type\x18\x02 \x01(\x0e2[.google.ads.googleads.v20.enums.KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupTypeR\x04typeB\xf6\x01\n" +
	"#com.google.ads.googleads.v20.commonB\x16KeywordPlanCommonProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v20/common;common\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V20.Common\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V20\\Common\xea\x02#Google::Ads::GoogleAds::V20::Commonb\x06proto3"

var (
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDesc), len(file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDescData
}

var file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_google_ads_googleads_v20_common_keyword_plan_common_proto_goTypes = []any{
	(*KeywordPlanHistoricalMetrics)(nil),                                         // 0: google.ads.googleads.v20.common.KeywordPlanHistoricalMetrics
	(*HistoricalMetricsOptions)(nil),                                             // 1: google.ads.googleads.v20.common.HistoricalMetricsOptions
	(*MonthlySearchVolume)(nil),                                                  // 2: google.ads.googleads.v20.common.MonthlySearchVolume
	(*KeywordPlanAggregateMetrics)(nil),                                          // 3: google.ads.googleads.v20.common.KeywordPlanAggregateMetrics
	(*KeywordPlanAggregateMetricResults)(nil),                                    // 4: google.ads.googleads.v20.common.KeywordPlanAggregateMetricResults
	(*KeywordPlanDeviceSearches)(nil),                                            // 5: google.ads.googleads.v20.common.KeywordPlanDeviceSearches
	(*KeywordAnnotations)(nil),                                                   // 6: google.ads.googleads.v20.common.KeywordAnnotations
	(*KeywordConcept)(nil),                                                       // 7: google.ads.googleads.v20.common.KeywordConcept
	(*ConceptGroup)(nil),                                                         // 8: google.ads.googleads.v20.common.ConceptGroup
	(enums.KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel)(0),       // 9: google.ads.googleads.v20.enums.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel
	(*YearMonthRange)(nil),                                                       // 10: google.ads.googleads.v20.common.YearMonthRange
	(enums.MonthOfYearEnum_MonthOfYear)(0),                                       // 11: google.ads.googleads.v20.enums.MonthOfYearEnum.MonthOfYear
	(enums.KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType)(0), // 12: google.ads.googleads.v20.enums.KeywordPlanAggregateMetricTypeEnum.KeywordPlanAggregateMetricType
	(enums.DeviceEnum_Device)(0),                                                 // 13: google.ads.googleads.v20.enums.DeviceEnum.Device
	(enums.KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType)(0),       // 14: google.ads.googleads.v20.enums.KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType
}
var file_google_ads_googleads_v20_common_keyword_plan_common_proto_depIdxs = []int32{
	2,  // 0: google.ads.googleads.v20.common.KeywordPlanHistoricalMetrics.monthly_search_volumes:type_name -> google.ads.googleads.v20.common.MonthlySearchVolume
	9,  // 1: google.ads.googleads.v20.common.KeywordPlanHistoricalMetrics.competition:type_name -> google.ads.googleads.v20.enums.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel
	10, // 2: google.ads.googleads.v20.common.HistoricalMetricsOptions.year_month_range:type_name -> google.ads.googleads.v20.common.YearMonthRange
	11, // 3: google.ads.googleads.v20.common.MonthlySearchVolume.month:type_name -> google.ads.googleads.v20.enums.MonthOfYearEnum.MonthOfYear
	12, // 4: google.ads.googleads.v20.common.KeywordPlanAggregateMetrics.aggregate_metric_types:type_name -> google.ads.googleads.v20.enums.KeywordPlanAggregateMetricTypeEnum.KeywordPlanAggregateMetricType
	5,  // 5: google.ads.googleads.v20.common.KeywordPlanAggregateMetricResults.device_searches:type_name -> google.ads.googleads.v20.common.KeywordPlanDeviceSearches
	13, // 6: google.ads.googleads.v20.common.KeywordPlanDeviceSearches.device:type_name -> google.ads.googleads.v20.enums.DeviceEnum.Device
	7,  // 7: google.ads.googleads.v20.common.KeywordAnnotations.concepts:type_name -> google.ads.googleads.v20.common.KeywordConcept
	8,  // 8: google.ads.googleads.v20.common.KeywordConcept.concept_group:type_name -> google.ads.googleads.v20.common.ConceptGroup
	14, // 9: google.ads.googleads.v20.common.ConceptGroup.type:type_name -> google.ads.googleads.v20.enums.KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_common_keyword_plan_common_proto_init() }
func file_google_ads_googleads_v20_common_keyword_plan_common_proto_init() {
	if File_google_ads_googleads_v20_common_keyword_plan_common_proto != nil {
		return
	}
	file_google_ads_googleads_v20_common_dates_proto_init()
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[0].OneofWrappers = []any{}
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[1].OneofWrappers = []any{}
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[2].OneofWrappers = []any{}
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDesc), len(file_google_ads_googleads_v20_common_keyword_plan_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v20_common_keyword_plan_common_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_common_keyword_plan_common_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_common_keyword_plan_common_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_common_keyword_plan_common_proto = out.File
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_goTypes = nil
	file_google_ads_googleads_v20_common_keyword_plan_common_proto_depIdxs = nil
}
