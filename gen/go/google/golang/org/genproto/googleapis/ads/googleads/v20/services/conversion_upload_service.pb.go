// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/ads/googleads/v20/services/conversion_upload_service.proto

package services

import (
	common "google.golang.org/genproto/googleapis/ads/googleads/v20/common"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v20/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for
// [ConversionUploadService.UploadClickConversions][google.ads.googleads.v20.services.ConversionUploadService.UploadClickConversions].
type UploadClickConversionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the customer performing the upload.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Required. The conversions that are being uploaded.
	Conversions []*ClickConversion `protobuf:"bytes,2,rep,name=conversions,proto3" json:"conversions,omitempty"`
	// Required. If true, successful operations will be carried out and invalid
	// operations will return errors. If false, all operations will be carried
	// out in one transaction if and only if they are all valid.
	// This should always be set to true.
	// See
	// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
	// for more information about partial failure.
	PartialFailure bool `protobuf:"varint,3,opt,name=partial_failure,json=partialFailure,proto3" json:"partial_failure,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly bool `protobuf:"varint,4,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	// If true, the API will perform all upload checks and return errors if
	// any are found. If false, it will perform only basic input validation,
	// skip subsequent upload checks, and return success even if no click
	// was found for the provided `user_identifiers`.
	//
	// This setting only affects Enhanced conversions for leads uploads that use
	// `user_identifiers` instead of `GCLID`, `GBRAID`, or `WBRAID`. When
	// uploading enhanced conversions for leads, you should upload all conversion
	// events to the API, including those that may not come from Google Ads
	// campaigns. The upload of an event that is not from a Google Ads campaign
	// will result in a `CLICK_NOT_FOUND` error if this field is set to `true`.
	// Since these errors are expected for such events, set this field to `false`
	// so you can confirm your uploads are properly formatted but ignore
	// `CLICK_NOT_FOUND` errors from all of the conversions that are not from a
	// Google Ads campaign. This will allow you to focus only on errors that you
	// can address.
	//
	// Default is false.
	DebugEnabled bool `protobuf:"varint,5,opt,name=debug_enabled,json=debugEnabled,proto3" json:"debug_enabled,omitempty"`
	// Optional. Optional input to set job ID. Must be a non-negative number that
	// is less than 2^31 if provided. If this field is not provided, the API will
	// generate a job ID in the range [2^31, (2^63)-1]. The API will return the
	// value for this request in the `job_id` field of the
	// `UploadClickConversionsResponse`.
	JobId         *int32 `protobuf:"varint,6,opt,name=job_id,json=jobId,proto3,oneof" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadClickConversionsRequest) Reset() {
	*x = UploadClickConversionsRequest{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadClickConversionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadClickConversionsRequest) ProtoMessage() {}

func (x *UploadClickConversionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadClickConversionsRequest.ProtoReflect.Descriptor instead.
func (*UploadClickConversionsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadClickConversionsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *UploadClickConversionsRequest) GetConversions() []*ClickConversion {
	if x != nil {
		return x.Conversions
	}
	return nil
}

func (x *UploadClickConversionsRequest) GetPartialFailure() bool {
	if x != nil {
		return x.PartialFailure
	}
	return false
}

func (x *UploadClickConversionsRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

func (x *UploadClickConversionsRequest) GetDebugEnabled() bool {
	if x != nil {
		return x.DebugEnabled
	}
	return false
}

func (x *UploadClickConversionsRequest) GetJobId() int32 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

// Response message for
// [ConversionUploadService.UploadClickConversions][google.ads.googleads.v20.services.ConversionUploadService.UploadClickConversions].
type UploadClickConversionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Errors that pertain to conversion failures in the partial failure mode.
	// Returned when all errors occur inside the conversions. If any errors occur
	// outside the conversions (for example, auth errors), we return an RPC level
	// error. See
	// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
	// for more information about partial failure.
	PartialFailureError *status.Status `protobuf:"bytes,1,opt,name=partial_failure_error,json=partialFailureError,proto3" json:"partial_failure_error,omitempty"`
	// Returned for successfully processed conversions. Proto will be empty for
	// rows that received an error. Results are not returned when validate_only is
	// true.
	Results []*ClickConversionResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Job ID for the upload batch.
	JobId         int64 `protobuf:"varint,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadClickConversionsResponse) Reset() {
	*x = UploadClickConversionsResponse{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadClickConversionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadClickConversionsResponse) ProtoMessage() {}

func (x *UploadClickConversionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadClickConversionsResponse.ProtoReflect.Descriptor instead.
func (*UploadClickConversionsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadClickConversionsResponse) GetPartialFailureError() *status.Status {
	if x != nil {
		return x.PartialFailureError
	}
	return nil
}

func (x *UploadClickConversionsResponse) GetResults() []*ClickConversionResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *UploadClickConversionsResponse) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

// Request message for
// [ConversionUploadService.UploadCallConversions][google.ads.googleads.v20.services.ConversionUploadService.UploadCallConversions].
type UploadCallConversionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the customer performing the upload.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Required. The conversions that are being uploaded.
	Conversions []*CallConversion `protobuf:"bytes,2,rep,name=conversions,proto3" json:"conversions,omitempty"`
	// Required. If true, successful operations will be carried out and invalid
	// operations will return errors. If false, all operations will be carried
	// out in one transaction if and only if they are all valid.
	// This should always be set to true.
	// See
	// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
	// for more information about partial failure.
	PartialFailure bool `protobuf:"varint,3,opt,name=partial_failure,json=partialFailure,proto3" json:"partial_failure,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly  bool `protobuf:"varint,4,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadCallConversionsRequest) Reset() {
	*x = UploadCallConversionsRequest{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadCallConversionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCallConversionsRequest) ProtoMessage() {}

func (x *UploadCallConversionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCallConversionsRequest.ProtoReflect.Descriptor instead.
func (*UploadCallConversionsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{2}
}

func (x *UploadCallConversionsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *UploadCallConversionsRequest) GetConversions() []*CallConversion {
	if x != nil {
		return x.Conversions
	}
	return nil
}

func (x *UploadCallConversionsRequest) GetPartialFailure() bool {
	if x != nil {
		return x.PartialFailure
	}
	return false
}

func (x *UploadCallConversionsRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

// Response message for
// [ConversionUploadService.UploadCallConversions][google.ads.googleads.v20.services.ConversionUploadService.UploadCallConversions].
type UploadCallConversionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Errors that pertain to conversion failures in the partial failure mode.
	// Returned when all errors occur inside the conversions. If any errors occur
	// outside the conversions (for example, auth errors), we return an RPC level
	// error. See
	// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
	// for more information about partial failure.
	PartialFailureError *status.Status `protobuf:"bytes,1,opt,name=partial_failure_error,json=partialFailureError,proto3" json:"partial_failure_error,omitempty"`
	// Returned for successfully processed conversions. Proto will be empty for
	// rows that received an error. Results are not returned when validate_only is
	// true.
	Results       []*CallConversionResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadCallConversionsResponse) Reset() {
	*x = UploadCallConversionsResponse{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadCallConversionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCallConversionsResponse) ProtoMessage() {}

func (x *UploadCallConversionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCallConversionsResponse.ProtoReflect.Descriptor instead.
func (*UploadCallConversionsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{3}
}

func (x *UploadCallConversionsResponse) GetPartialFailureError() *status.Status {
	if x != nil {
		return x.PartialFailureError
	}
	return nil
}

func (x *UploadCallConversionsResponse) GetResults() []*CallConversionResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// A click conversion.
type ClickConversion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Google click ID (gclid) associated with this conversion.
	Gclid *string `protobuf:"bytes,9,opt,name=gclid,proto3,oneof" json:"gclid,omitempty"`
	// The click identifier for clicks associated with app conversions and
	// originating from iOS devices starting with iOS14.
	Gbraid string `protobuf:"bytes,18,opt,name=gbraid,proto3" json:"gbraid,omitempty"`
	// The click identifier for clicks associated with web conversions and
	// originating from iOS devices starting with iOS14.
	Wbraid string `protobuf:"bytes,19,opt,name=wbraid,proto3" json:"wbraid,omitempty"`
	// Resource name of the conversion action associated with this conversion.
	// Note: Although this resource name consists of a customer id and a
	// conversion action id, validation will ignore the customer id and use the
	// conversion action id as the sole identifier of the conversion action.
	ConversionAction *string `protobuf:"bytes,10,opt,name=conversion_action,json=conversionAction,proto3,oneof" json:"conversion_action,omitempty"`
	// The date time at which the conversion occurred. Must be after
	// the click time. The timezone must be specified. The format is
	// "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	ConversionDateTime *string `protobuf:"bytes,11,opt,name=conversion_date_time,json=conversionDateTime,proto3,oneof" json:"conversion_date_time,omitempty"`
	// The value of the conversion for the advertiser.
	ConversionValue *float64 `protobuf:"fixed64,12,opt,name=conversion_value,json=conversionValue,proto3,oneof" json:"conversion_value,omitempty"`
	// Currency associated with the conversion value. This is the ISO 4217
	// 3-character currency code. For example: USD, EUR.
	CurrencyCode *string `protobuf:"bytes,13,opt,name=currency_code,json=currencyCode,proto3,oneof" json:"currency_code,omitempty"`
	// The order ID associated with the conversion. An order id can only be used
	// for one conversion per conversion action.
	OrderId *string `protobuf:"bytes,14,opt,name=order_id,json=orderId,proto3,oneof" json:"order_id,omitempty"`
	// Additional data about externally attributed conversions. This field
	// is required for conversions with an externally attributed conversion
	// action, but should not be set otherwise.
	ExternalAttributionData *ExternalAttributionData `protobuf:"bytes,7,opt,name=external_attribution_data,json=externalAttributionData,proto3" json:"external_attribution_data,omitempty"`
	// The custom variables associated with this conversion.
	CustomVariables []*CustomVariable `protobuf:"bytes,15,rep,name=custom_variables,json=customVariables,proto3" json:"custom_variables,omitempty"`
	// The cart data associated with this conversion.
	CartData *CartData `protobuf:"bytes,16,opt,name=cart_data,json=cartData,proto3" json:"cart_data,omitempty"`
	// The user identifiers associated with this conversion. Only hashed_email and
	// hashed_phone_number are supported for conversion uploads. The maximum
	// number of user identifiers for each conversion is 5.
	UserIdentifiers []*common.UserIdentifier `protobuf:"bytes,17,rep,name=user_identifiers,json=userIdentifiers,proto3" json:"user_identifiers,omitempty"`
	// The environment this conversion was recorded on, for example, App or Web.
	ConversionEnvironment enums.ConversionEnvironmentEnum_ConversionEnvironment `protobuf:"varint,20,opt,name=conversion_environment,json=conversionEnvironment,proto3,enum=google.ads.googleads.v20.enums.ConversionEnvironmentEnum_ConversionEnvironment" json:"conversion_environment,omitempty"`
	// The consent setting for the event.
	Consent *common.Consent `protobuf:"bytes,23,opt,name=consent,proto3" json:"consent,omitempty"`
	// Type of the customer associated with the conversion (new or returning).
	// Accessible only to customers on the allow-list.
	CustomerType enums.ConversionCustomerTypeEnum_ConversionCustomerType `protobuf:"varint,26,opt,name=customer_type,json=customerType,proto3,enum=google.ads.googleads.v20.enums.ConversionCustomerTypeEnum_ConversionCustomerType" json:"customer_type,omitempty"`
	// The IP address of the customer when they arrived on the landing page after
	// an ad click but before a conversion event. This is the IP address of the
	// customer's device, not the advertiser's server.
	UserIpAddress *string `protobuf:"bytes,27,opt,name=user_ip_address,json=userIpAddress,proto3,oneof" json:"user_ip_address,omitempty"`
	// The session attributes for the event.
	//
	// Types that are valid to be assigned to SessionAttributes:
	//
	//	*ClickConversion_SessionAttributesEncoded
	//	*ClickConversion_SessionAttributesKeyValuePairs
	SessionAttributes isClickConversion_SessionAttributes `protobuf_oneof:"session_attributes"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClickConversion) Reset() {
	*x = ClickConversion{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickConversion) ProtoMessage() {}

func (x *ClickConversion) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickConversion.ProtoReflect.Descriptor instead.
func (*ClickConversion) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{4}
}

func (x *ClickConversion) GetGclid() string {
	if x != nil && x.Gclid != nil {
		return *x.Gclid
	}
	return ""
}

func (x *ClickConversion) GetGbraid() string {
	if x != nil {
		return x.Gbraid
	}
	return ""
}

func (x *ClickConversion) GetWbraid() string {
	if x != nil {
		return x.Wbraid
	}
	return ""
}

func (x *ClickConversion) GetConversionAction() string {
	if x != nil && x.ConversionAction != nil {
		return *x.ConversionAction
	}
	return ""
}

func (x *ClickConversion) GetConversionDateTime() string {
	if x != nil && x.ConversionDateTime != nil {
		return *x.ConversionDateTime
	}
	return ""
}

func (x *ClickConversion) GetConversionValue() float64 {
	if x != nil && x.ConversionValue != nil {
		return *x.ConversionValue
	}
	return 0
}

func (x *ClickConversion) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *ClickConversion) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *ClickConversion) GetExternalAttributionData() *ExternalAttributionData {
	if x != nil {
		return x.ExternalAttributionData
	}
	return nil
}

func (x *ClickConversion) GetCustomVariables() []*CustomVariable {
	if x != nil {
		return x.CustomVariables
	}
	return nil
}

func (x *ClickConversion) GetCartData() *CartData {
	if x != nil {
		return x.CartData
	}
	return nil
}

func (x *ClickConversion) GetUserIdentifiers() []*common.UserIdentifier {
	if x != nil {
		return x.UserIdentifiers
	}
	return nil
}

func (x *ClickConversion) GetConversionEnvironment() enums.ConversionEnvironmentEnum_ConversionEnvironment {
	if x != nil {
		return x.ConversionEnvironment
	}
	return enums.ConversionEnvironmentEnum_ConversionEnvironment(0)
}

func (x *ClickConversion) GetConsent() *common.Consent {
	if x != nil {
		return x.Consent
	}
	return nil
}

func (x *ClickConversion) GetCustomerType() enums.ConversionCustomerTypeEnum_ConversionCustomerType {
	if x != nil {
		return x.CustomerType
	}
	return enums.ConversionCustomerTypeEnum_ConversionCustomerType(0)
}

func (x *ClickConversion) GetUserIpAddress() string {
	if x != nil && x.UserIpAddress != nil {
		return *x.UserIpAddress
	}
	return ""
}

func (x *ClickConversion) GetSessionAttributes() isClickConversion_SessionAttributes {
	if x != nil {
		return x.SessionAttributes
	}
	return nil
}

func (x *ClickConversion) GetSessionAttributesEncoded() []byte {
	if x != nil {
		if x, ok := x.SessionAttributes.(*ClickConversion_SessionAttributesEncoded); ok {
			return x.SessionAttributesEncoded
		}
	}
	return nil
}

func (x *ClickConversion) GetSessionAttributesKeyValuePairs() *SessionAttributesKeyValuePairs {
	if x != nil {
		if x, ok := x.SessionAttributes.(*ClickConversion_SessionAttributesKeyValuePairs); ok {
			return x.SessionAttributesKeyValuePairs
		}
	}
	return nil
}

type isClickConversion_SessionAttributes interface {
	isClickConversion_SessionAttributes()
}

type ClickConversion_SessionAttributesEncoded struct {
	// The session attributes for the event, represented as a base64-encoded
	// JSON string. The content should be generated by Google-provided library.
	// To set session attributes individually, use
	// session_attributes_key_value_pairs instead.
	SessionAttributesEncoded []byte `protobuf:"bytes,24,opt,name=session_attributes_encoded,json=sessionAttributesEncoded,proto3,oneof"`
}

type ClickConversion_SessionAttributesKeyValuePairs struct {
	// The session attributes for the event, represented as key-value pairs.
	SessionAttributesKeyValuePairs *SessionAttributesKeyValuePairs `protobuf:"bytes,25,opt,name=session_attributes_key_value_pairs,json=sessionAttributesKeyValuePairs,proto3,oneof"`
}

func (*ClickConversion_SessionAttributesEncoded) isClickConversion_SessionAttributes() {}

func (*ClickConversion_SessionAttributesKeyValuePairs) isClickConversion_SessionAttributes() {}

// A call conversion.
type CallConversion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The caller id from which this call was placed. Caller id is expected to be
	// in E.164 format with preceding '+' sign, for example, "+16502531234".
	CallerId *string `protobuf:"bytes,7,opt,name=caller_id,json=callerId,proto3,oneof" json:"caller_id,omitempty"`
	// The date time at which the call occurred. The timezone must be specified.
	// The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm",
	// for example, "2019-01-01 12:32:45-08:00".
	CallStartDateTime *string `protobuf:"bytes,8,opt,name=call_start_date_time,json=callStartDateTime,proto3,oneof" json:"call_start_date_time,omitempty"`
	// Resource name of the conversion action associated with this conversion.
	// Note: Although this resource name consists of a customer id and a
	// conversion action id, validation will ignore the customer id and use the
	// conversion action id as the sole identifier of the conversion action.
	ConversionAction *string `protobuf:"bytes,9,opt,name=conversion_action,json=conversionAction,proto3,oneof" json:"conversion_action,omitempty"`
	// The date time at which the conversion occurred. Must be after the call
	// time. The timezone must be specified. The format is
	// "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	ConversionDateTime *string `protobuf:"bytes,10,opt,name=conversion_date_time,json=conversionDateTime,proto3,oneof" json:"conversion_date_time,omitempty"`
	// The value of the conversion for the advertiser.
	ConversionValue *float64 `protobuf:"fixed64,11,opt,name=conversion_value,json=conversionValue,proto3,oneof" json:"conversion_value,omitempty"`
	// Currency associated with the conversion value. This is the ISO 4217
	// 3-character currency code. For example: USD, EUR.
	CurrencyCode *string `protobuf:"bytes,12,opt,name=currency_code,json=currencyCode,proto3,oneof" json:"currency_code,omitempty"`
	// The custom variables associated with this conversion.
	CustomVariables []*CustomVariable `protobuf:"bytes,13,rep,name=custom_variables,json=customVariables,proto3" json:"custom_variables,omitempty"`
	// The consent setting for the event.
	Consent       *common.Consent `protobuf:"bytes,14,opt,name=consent,proto3" json:"consent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallConversion) Reset() {
	*x = CallConversion{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallConversion) ProtoMessage() {}

func (x *CallConversion) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallConversion.ProtoReflect.Descriptor instead.
func (*CallConversion) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{5}
}

func (x *CallConversion) GetCallerId() string {
	if x != nil && x.CallerId != nil {
		return *x.CallerId
	}
	return ""
}

func (x *CallConversion) GetCallStartDateTime() string {
	if x != nil && x.CallStartDateTime != nil {
		return *x.CallStartDateTime
	}
	return ""
}

func (x *CallConversion) GetConversionAction() string {
	if x != nil && x.ConversionAction != nil {
		return *x.ConversionAction
	}
	return ""
}

func (x *CallConversion) GetConversionDateTime() string {
	if x != nil && x.ConversionDateTime != nil {
		return *x.ConversionDateTime
	}
	return ""
}

func (x *CallConversion) GetConversionValue() float64 {
	if x != nil && x.ConversionValue != nil {
		return *x.ConversionValue
	}
	return 0
}

func (x *CallConversion) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *CallConversion) GetCustomVariables() []*CustomVariable {
	if x != nil {
		return x.CustomVariables
	}
	return nil
}

func (x *CallConversion) GetConsent() *common.Consent {
	if x != nil {
		return x.Consent
	}
	return nil
}

// Contains additional information about externally attributed conversions.
type ExternalAttributionData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Represents the fraction of the conversion that is attributed to the
	// Google Ads click.
	ExternalAttributionCredit *float64 `protobuf:"fixed64,3,opt,name=external_attribution_credit,json=externalAttributionCredit,proto3,oneof" json:"external_attribution_credit,omitempty"`
	// Specifies the attribution model name.
	ExternalAttributionModel *string `protobuf:"bytes,4,opt,name=external_attribution_model,json=externalAttributionModel,proto3,oneof" json:"external_attribution_model,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ExternalAttributionData) Reset() {
	*x = ExternalAttributionData{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalAttributionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAttributionData) ProtoMessage() {}

func (x *ExternalAttributionData) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAttributionData.ProtoReflect.Descriptor instead.
func (*ExternalAttributionData) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{6}
}

func (x *ExternalAttributionData) GetExternalAttributionCredit() float64 {
	if x != nil && x.ExternalAttributionCredit != nil {
		return *x.ExternalAttributionCredit
	}
	return 0
}

func (x *ExternalAttributionData) GetExternalAttributionModel() string {
	if x != nil && x.ExternalAttributionModel != nil {
		return *x.ExternalAttributionModel
	}
	return ""
}

// Identifying information for a successfully processed ClickConversion.
type ClickConversionResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Google Click ID (gclid) associated with this conversion.
	Gclid *string `protobuf:"bytes,4,opt,name=gclid,proto3,oneof" json:"gclid,omitempty"`
	// The click identifier for clicks associated with app conversions and
	// originating from iOS devices starting with iOS14.
	Gbraid string `protobuf:"bytes,8,opt,name=gbraid,proto3" json:"gbraid,omitempty"`
	// The click identifier for clicks associated with web conversions and
	// originating from iOS devices starting with iOS14.
	Wbraid string `protobuf:"bytes,9,opt,name=wbraid,proto3" json:"wbraid,omitempty"`
	// Resource name of the conversion action associated with this conversion.
	ConversionAction *string `protobuf:"bytes,5,opt,name=conversion_action,json=conversionAction,proto3,oneof" json:"conversion_action,omitempty"`
	// The date time at which the conversion occurred. The format is
	// "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	ConversionDateTime *string `protobuf:"bytes,6,opt,name=conversion_date_time,json=conversionDateTime,proto3,oneof" json:"conversion_date_time,omitempty"`
	// The user identifiers associated with this conversion. Only hashed_email and
	// hashed_phone_number are supported for conversion uploads. The maximum
	// number of user identifiers for each conversion is 5.
	UserIdentifiers []*common.UserIdentifier `protobuf:"bytes,7,rep,name=user_identifiers,json=userIdentifiers,proto3" json:"user_identifiers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ClickConversionResult) Reset() {
	*x = ClickConversionResult{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickConversionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickConversionResult) ProtoMessage() {}

func (x *ClickConversionResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickConversionResult.ProtoReflect.Descriptor instead.
func (*ClickConversionResult) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{7}
}

func (x *ClickConversionResult) GetGclid() string {
	if x != nil && x.Gclid != nil {
		return *x.Gclid
	}
	return ""
}

func (x *ClickConversionResult) GetGbraid() string {
	if x != nil {
		return x.Gbraid
	}
	return ""
}

func (x *ClickConversionResult) GetWbraid() string {
	if x != nil {
		return x.Wbraid
	}
	return ""
}

func (x *ClickConversionResult) GetConversionAction() string {
	if x != nil && x.ConversionAction != nil {
		return *x.ConversionAction
	}
	return ""
}

func (x *ClickConversionResult) GetConversionDateTime() string {
	if x != nil && x.ConversionDateTime != nil {
		return *x.ConversionDateTime
	}
	return ""
}

func (x *ClickConversionResult) GetUserIdentifiers() []*common.UserIdentifier {
	if x != nil {
		return x.UserIdentifiers
	}
	return nil
}

// Identifying information for a successfully processed CallConversionUpload.
type CallConversionResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The caller id from which this call was placed. Caller id is expected to be
	// in E.164 format with preceding '+' sign.
	CallerId *string `protobuf:"bytes,5,opt,name=caller_id,json=callerId,proto3,oneof" json:"caller_id,omitempty"`
	// The date time at which the call occurred. The format is
	// "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	CallStartDateTime *string `protobuf:"bytes,6,opt,name=call_start_date_time,json=callStartDateTime,proto3,oneof" json:"call_start_date_time,omitempty"`
	// Resource name of the conversion action associated with this conversion.
	ConversionAction *string `protobuf:"bytes,7,opt,name=conversion_action,json=conversionAction,proto3,oneof" json:"conversion_action,omitempty"`
	// The date time at which the conversion occurred. The format is
	// "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
	ConversionDateTime *string `protobuf:"bytes,8,opt,name=conversion_date_time,json=conversionDateTime,proto3,oneof" json:"conversion_date_time,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CallConversionResult) Reset() {
	*x = CallConversionResult{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallConversionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallConversionResult) ProtoMessage() {}

func (x *CallConversionResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallConversionResult.ProtoReflect.Descriptor instead.
func (*CallConversionResult) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{8}
}

func (x *CallConversionResult) GetCallerId() string {
	if x != nil && x.CallerId != nil {
		return *x.CallerId
	}
	return ""
}

func (x *CallConversionResult) GetCallStartDateTime() string {
	if x != nil && x.CallStartDateTime != nil {
		return *x.CallStartDateTime
	}
	return ""
}

func (x *CallConversionResult) GetConversionAction() string {
	if x != nil && x.ConversionAction != nil {
		return *x.ConversionAction
	}
	return ""
}

func (x *CallConversionResult) GetConversionDateTime() string {
	if x != nil && x.ConversionDateTime != nil {
		return *x.ConversionDateTime
	}
	return ""
}

// A custom variable.
type CustomVariable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resource name of the custom variable associated with this conversion.
	// Note: Although this resource name consists of a customer id and a
	// conversion custom variable id, validation will ignore the customer id and
	// use the conversion custom variable id as the sole identifier of the
	// conversion custom variable.
	ConversionCustomVariable string `protobuf:"bytes,1,opt,name=conversion_custom_variable,json=conversionCustomVariable,proto3" json:"conversion_custom_variable,omitempty"`
	// The value string of this custom variable.
	// The value of the custom variable should not contain private customer data,
	// such as email addresses or phone numbers.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomVariable) Reset() {
	*x = CustomVariable{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomVariable) ProtoMessage() {}

func (x *CustomVariable) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomVariable.ProtoReflect.Descriptor instead.
func (*CustomVariable) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{9}
}

func (x *CustomVariable) GetConversionCustomVariable() string {
	if x != nil {
		return x.ConversionCustomVariable
	}
	return ""
}

func (x *CustomVariable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Contains additional information about cart data.
type CartData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Merchant Center ID where the items are uploaded.
	MerchantId int64 `protobuf:"varint,6,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// The country code associated with the feed where the items are uploaded.
	FeedCountryCode string `protobuf:"bytes,2,opt,name=feed_country_code,json=feedCountryCode,proto3" json:"feed_country_code,omitempty"`
	// The language code associated with the feed where the items are uploaded.
	FeedLanguageCode string `protobuf:"bytes,3,opt,name=feed_language_code,json=feedLanguageCode,proto3" json:"feed_language_code,omitempty"`
	// Sum of all transaction level discounts, such as free shipping and
	// coupon discounts for the whole cart. The currency code is the same
	// as that in the ClickConversion message.
	LocalTransactionCost float64 `protobuf:"fixed64,4,opt,name=local_transaction_cost,json=localTransactionCost,proto3" json:"local_transaction_cost,omitempty"`
	// Data of the items purchased.
	Items         []*CartData_Item `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartData) Reset() {
	*x = CartData{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartData) ProtoMessage() {}

func (x *CartData) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartData.ProtoReflect.Descriptor instead.
func (*CartData) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{10}
}

func (x *CartData) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *CartData) GetFeedCountryCode() string {
	if x != nil {
		return x.FeedCountryCode
	}
	return ""
}

func (x *CartData) GetFeedLanguageCode() string {
	if x != nil {
		return x.FeedLanguageCode
	}
	return ""
}

func (x *CartData) GetLocalTransactionCost() float64 {
	if x != nil {
		return x.LocalTransactionCost
	}
	return 0
}

func (x *CartData) GetItems() []*CartData_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// Contains one session attribute of the conversion.
type SessionAttributeKeyValuePair struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The name of the session attribute.
	SessionAttributeKey string `protobuf:"bytes,1,opt,name=session_attribute_key,json=sessionAttributeKey,proto3" json:"session_attribute_key,omitempty"`
	// Required. The value of the session attribute.
	SessionAttributeValue string `protobuf:"bytes,2,opt,name=session_attribute_value,json=sessionAttributeValue,proto3" json:"session_attribute_value,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SessionAttributeKeyValuePair) Reset() {
	*x = SessionAttributeKeyValuePair{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionAttributeKeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionAttributeKeyValuePair) ProtoMessage() {}

func (x *SessionAttributeKeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionAttributeKeyValuePair.ProtoReflect.Descriptor instead.
func (*SessionAttributeKeyValuePair) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{11}
}

func (x *SessionAttributeKeyValuePair) GetSessionAttributeKey() string {
	if x != nil {
		return x.SessionAttributeKey
	}
	return ""
}

func (x *SessionAttributeKeyValuePair) GetSessionAttributeValue() string {
	if x != nil {
		return x.SessionAttributeValue
	}
	return ""
}

// Contains session attributes of the conversion, represented as key-value
// pairs.
type SessionAttributesKeyValuePairs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The session attributes for the conversion.
	KeyValuePairs []*SessionAttributeKeyValuePair `protobuf:"bytes,1,rep,name=key_value_pairs,json=keyValuePairs,proto3" json:"key_value_pairs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionAttributesKeyValuePairs) Reset() {
	*x = SessionAttributesKeyValuePairs{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionAttributesKeyValuePairs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionAttributesKeyValuePairs) ProtoMessage() {}

func (x *SessionAttributesKeyValuePairs) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionAttributesKeyValuePairs.ProtoReflect.Descriptor instead.
func (*SessionAttributesKeyValuePairs) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{12}
}

func (x *SessionAttributesKeyValuePairs) GetKeyValuePairs() []*SessionAttributeKeyValuePair {
	if x != nil {
		return x.KeyValuePairs
	}
	return nil
}

// Contains data of the items purchased.
type CartData_Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The shopping id of the item. Must be equal to the Merchant Center product
	// identifier.
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// Number of items sold.
	Quantity int32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Unit price excluding tax, shipping, and any transaction
	// level discounts. The currency code is the same as that in the
	// ClickConversion message.
	UnitPrice     float64 `protobuf:"fixed64,3,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartData_Item) Reset() {
	*x = CartData_Item{}
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartData_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartData_Item) ProtoMessage() {}

func (x *CartData_Item) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartData_Item.ProtoReflect.Descriptor instead.
func (*CartData_Item) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CartData_Item) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CartData_Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CartData_Item) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

var File_google_ads_googleads_v20_services_conversion_upload_service_proto protoreflect.FileDescriptor

const file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDesc = "" +
	"\n" +
	"Agoogle/ads/googleads/v20/services/conversion_upload_service.proto\x12!google.ads.googleads.v20.services\x1a-google/ads/googleads/v20/common/consent.proto\x1a7google/ads/googleads/v20/common/offline_user_data.proto\x1a=google/ads/googleads/v20/enums/conversion_customer_type.proto\x1a@google/ads/googleads/v20/enums/conversion_environment_enum.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/api/field_info.proto\x1a\x19google/api/resource.proto\x1a\x17google/rpc/status.proto\"\xc4\x02\n" +
	"\x1dUploadClickConversionsRequest\x12$\n" +
	"\vcustomer_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"customerId\x12Y\n" +
	"\vconversions\x18\x02 \x03(\v22.google.ads.googleads.v20.services.ClickConversionB\x03\xe0A\x02R\vconversions\x12,\n" +
	"\x0fpartial_failure\x18\x03 \x01(\bB\x03\xe0A\x02R\x0epartialFailure\x12#\n" +
	"\rvalidate_only\x18\x04 \x01(\bR\fvalidateOnly\x12#\n" +
	"\rdebug_enabled\x18\x05 \x01(\bR\fdebugEnabled\x12\x1f\n" +
	"\x06job_id\x18\x06 \x01(\x05B\x03\xe0A\x01H\x00R\x05jobId\x88\x01\x01B\t\n" +
	"\a_job_id\"\xd3\x01\n" +
	"\x1eUploadClickConversionsResponse\x12F\n" +
	"\x15partial_failure_error\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x13partialFailureError\x12R\n" +
	"\aresults\x18\x02 \x03(\v28.google.ads.googleads.v20.services.ClickConversionResultR\aresults\x12\x15\n" +
	"\x06job_id\x18\x03 \x01(\x03R\x05jobId\"\xf1\x01\n" +
	"\x1cUploadCallConversionsRequest\x12$\n" +
	"\vcustomer_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"customerId\x12X\n" +
	"\vconversions\x18\x02 \x03(\v21.google.ads.googleads.v20.services.CallConversionB\x03\xe0A\x02R\vconversions\x12,\n" +
	"\x0fpartial_failure\x18\x03 \x01(\bB\x03\xe0A\x02R\x0epartialFailure\x12#\n" +
	"\rvalidate_only\x18\x04 \x01(\bR\fvalidateOnly\"\xba\x01\n" +
	"\x1dUploadCallConversionsResponse\x12F\n" +
	"\x15partial_failure_error\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x13partialFailureError\x12Q\n" +
	"\aresults\x18\x02 \x03(\v27.google.ads.googleads.v20.services.CallConversionResultR\aresults\"\xa0\v\n" +
	"\x0fClickConversion\x12\x19\n" +
	"\x05gclid\x18\t \x01(\tH\x01R\x05gclid\x88\x01\x01\x12\x16\n" +
	"\x06gbraid\x18\x12 \x01(\tR\x06gbraid\x12\x16\n" +
	"\x06wbraid\x18\x13 \x01(\tR\x06wbraid\x120\n" +
	"\x11conversion_action\x18\n" +
	" \x01(\tH\x02R\x10conversionAction\x88\x01\x01\x125\n" +
	"\x14conversion_date_time\x18\v \x01(\tH\x03R\x12conversionDateTime\x88\x01\x01\x12.\n" +
	"\x10conversion_value\x18\f \x01(\x01H\x04R\x0fconversionValue\x88\x01\x01\x12(\n" +
	"\rcurrency_code\x18\r \x01(\tH\x05R\fcurrencyCode\x88\x01\x01\x12\x1e\n" +
	"\border_id\x18\x0e \x01(\tH\x06R\aorderId\x88\x01\x01\x12v\n" +
	"\x19external_attribution_data\x18\a \x01(\v2:.google.ads.googleads.v20.services.ExternalAttributionDataR\x17externalAttributionData\x12\\\n" +
	"\x10custom_variables\x18\x0f \x03(\v21.google.ads.googleads.v20.services.CustomVariableR\x0fcustomVariables\x12H\n" +
	"\tcart_data\x18\x10 \x01(\v2+.google.ads.googleads.v20.services.CartDataR\bcartData\x12Z\n" +
	"\x10user_identifiers\x18\x11 \x03(\v2/.google.ads.googleads.v20.common.UserIdentifierR\x0fuserIdentifiers\x12\x86\x01\n" +
	"\x16conversion_environment\x18\x14 \x01(\x0e2O.google.ads.googleads.v20.enums.ConversionEnvironmentEnum.ConversionEnvironmentR\x15conversionEnvironment\x12B\n" +
	"\aconsent\x18\x17 \x01(\v2(.google.ads.googleads.v20.common.ConsentR\aconsent\x12v\n" +
	"\rcustomer_type\x18\x1a \x01(\x0e2Q.google.ads.googleads.v20.enums.ConversionCustomerTypeEnum.ConversionCustomerTypeR\fcustomerType\x125\n" +
	"\x0fuser_ip_address\x18\x1b \x01(\tB\b\xe2\x8c\xcf\xd7\b\x02\b\x04H\aR\ruserIpAddress\x88\x01\x01\x12>\n" +
	"\x1asession_attributes_encoded\x18\x18 \x01(\fH\x00R\x18sessionAttributesEncoded\x12\x8f\x01\n" +
	"\"session_attributes_key_value_pairs\x18\x19 \x01(\v2A.google.ads.googleads.v20.services.SessionAttributesKeyValuePairsH\x00R\x1esessionAttributesKeyValuePairsB\x14\n" +
	"\x12session_attributesB\b\n" +
	"\x06_gclidB\x14\n" +
	"\x12_conversion_actionB\x17\n" +
	"\x15_conversion_date_timeB\x13\n" +
	"\x11_conversion_valueB\x10\n" +
	"\x0e_currency_codeB\v\n" +
	"\t_order_idB\x12\n" +
	"\x10_user_ip_address\"\xca\x04\n" +
	"\x0eCallConversion\x12 \n" +
	"\tcaller_id\x18\a \x01(\tH\x00R\bcallerId\x88\x01\x01\x124\n" +
	"\x14call_start_date_time\x18\b \x01(\tH\x01R\x11callStartDateTime\x88\x01\x01\x120\n" +
	"\x11conversion_action\x18\t \x01(\tH\x02R\x10conversionAction\x88\x01\x01\x125\n" +
	"\x14conversion_date_time\x18\n" +
	" \x01(\tH\x03R\x12conversionDateTime\x88\x01\x01\x12.\n" +
	"\x10conversion_value\x18\v \x01(\x01H\x04R\x0fconversionValue\x88\x01\x01\x12(\n" +
	"\rcurrency_code\x18\f \x01(\tH\x05R\fcurrencyCode\x88\x01\x01\x12\\\n" +
	"\x10custom_variables\x18\r \x03(\v21.google.ads.googleads.v20.services.CustomVariableR\x0fcustomVariables\x12B\n" +
	"\aconsent\x18\x0e \x01(\v2(.google.ads.googleads.v20.common.ConsentR\aconsentB\f\n" +
	"\n" +
	"_caller_idB\x17\n" +
	"\x15_call_start_date_timeB\x14\n" +
	"\x12_conversion_actionB\x17\n" +
	"\x15_conversion_date_timeB\x13\n" +
	"\x11_conversion_valueB\x10\n" +
	"\x0e_currency_code\"\xe0\x01\n" +
	"\x17ExternalAttributionData\x12C\n" +
	"\x1bexternal_attribution_credit\x18\x03 \x01(\x01H\x00R\x19externalAttributionCredit\x88\x01\x01\x12A\n" +
	"\x1aexternal_attribution_model\x18\x04 \x01(\tH\x01R\x18externalAttributionModel\x88\x01\x01B\x1e\n" +
	"\x1c_external_attribution_creditB\x1d\n" +
	"\x1b_external_attribution_model\"\xe0\x02\n" +
	"\x15ClickConversionResult\x12\x19\n" +
	"\x05gclid\x18\x04 \x01(\tH\x00R\x05gclid\x88\x01\x01\x12\x16\n" +
	"\x06gbraid\x18\b \x01(\tR\x06gbraid\x12\x16\n" +
	"\x06wbraid\x18\t \x01(\tR\x06wbraid\x120\n" +
	"\x11conversion_action\x18\x05 \x01(\tH\x01R\x10conversionAction\x88\x01\x01\x125\n" +
	"\x14conversion_date_time\x18\x06 \x01(\tH\x02R\x12conversionDateTime\x88\x01\x01\x12Z\n" +
	"\x10user_identifiers\x18\a \x03(\v2/.google.ads.googleads.v20.common.UserIdentifierR\x0fuserIdentifiersB\b\n" +
	"\x06_gclidB\x14\n" +
	"\x12_conversion_actionB\x17\n" +
	"\x15_conversion_date_time\"\xad\x02\n" +
	"\x14CallConversionResult\x12 \n" +
	"\tcaller_id\x18\x05 \x01(\tH\x00R\bcallerId\x88\x01\x01\x124\n" +
	"\x14call_start_date_time\x18\x06 \x01(\tH\x01R\x11callStartDateTime\x88\x01\x01\x120\n" +
	"\x11conversion_action\x18\a \x01(\tH\x02R\x10conversionAction\x88\x01\x01\x125\n" +
	"\x14conversion_date_time\x18\b \x01(\tH\x03R\x12conversionDateTime\x88\x01\x01B\f\n" +
	"\n" +
	"_caller_idB\x17\n" +
	"\x15_call_start_date_timeB\x14\n" +
	"\x12_conversion_actionB\x17\n" +
	"\x15_conversion_date_time\"\x9c\x01\n" +
	"\x0eCustomVariable\x12t\n" +
	"\x1aconversion_custom_variable\x18\x01 \x01(\tB6\xfaA3\n" +
	"1googleads.googleapis.com/ConversionCustomVariableR\x18conversionCustomVariable\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xe5\x02\n" +
	"\bCartData\x12\x1f\n" +
	"\vmerchant_id\x18\x06 \x01(\x03R\n" +
	"merchantId\x12*\n" +
	"\x11feed_country_code\x18\x02 \x01(\tR\x0ffeedCountryCode\x12,\n" +
	"\x12feed_language_code\x18\x03 \x01(\tR\x10feedLanguageCode\x124\n" +
	"\x16local_transaction_cost\x18\x04 \x01(\x01R\x14localTransactionCost\x12F\n" +
	"\x05items\x18\x05 \x03(\v20.google.ads.googleads.v20.services.CartData.ItemR\x05items\x1a`\n" +
	"\x04Item\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\x12\x1d\n" +
	"\n" +
	"unit_price\x18\x03 \x01(\x01R\tunitPrice\"\x94\x01\n" +
	"\x1cSessionAttributeKeyValuePair\x127\n" +
	"\x15session_attribute_key\x18\x01 \x01(\tB\x03\xe0A\x02R\x13sessionAttributeKey\x12;\n" +
	"\x17session_attribute_value\x18\x02 \x01(\tB\x03\xe0A\x02R\x15sessionAttributeValue\"\x8e\x01\n" +
	"\x1eSessionAttributesKeyValuePairs\x12l\n" +
	"\x0fkey_value_pairs\x18\x01 \x03(\v2?.google.ads.googleads.v20.services.SessionAttributeKeyValuePairB\x03\xe0A\x02R\rkeyValuePairs2\xf4\x04\n" +
	"\x17ConversionUploadService\x12\x89\x02\n" +
	"\x16UploadClickConversions\x12@.google.ads.googleads.v20.services.UploadClickConversionsRequest\x1aA.google.ads.googleads.v20.services.UploadClickConversionsResponse\"j\xdaA'customer_id,conversions,partial_failure\x82\xd3\xe4\x93\x02::\x01*\"5/v20/customers/{customer_id=*}:uploadClickConversions\x12\x85\x02\n" +
	"\x15UploadCallConversions\x12?.google.ads.googleads.v20.services.UploadCallConversionsRequest\x1a@.google.ads.googleads.v20.services.UploadCallConversionsResponse\"i\xdaA'customer_id,conversions,partial_failure\x82\xd3\xe4\x93\x029:\x01*\"4/v20/customers/{customer_id=*}:uploadCallConversions\x1aE\xcaA\x18googleads.googleapis.com\xd2A'https://www.googleapis.com/auth/adwordsB\x88\x02\n" +
	"%com.google.ads.googleads.v20.servicesB\x1cConversionUploadServiceProtoP\x01ZIgoogle.golang.org/genproto/googleapis/ads/googleads/v20/services;services\xa2\x02\x03GAA\xaa\x02!Google.Ads.GoogleAds.V20.Services\xca\x02!Google\\Ads\\GoogleAds\\V20\\Services\xea\x02%Google::Ads::GoogleAds::V20::Servicesb\x06proto3"

var (
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescData []byte
)

func file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDesc)))
	})
	return file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDescData
}

var file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_google_ads_googleads_v20_services_conversion_upload_service_proto_goTypes = []any{
	(*UploadClickConversionsRequest)(nil),                        // 0: google.ads.googleads.v20.services.UploadClickConversionsRequest
	(*UploadClickConversionsResponse)(nil),                       // 1: google.ads.googleads.v20.services.UploadClickConversionsResponse
	(*UploadCallConversionsRequest)(nil),                         // 2: google.ads.googleads.v20.services.UploadCallConversionsRequest
	(*UploadCallConversionsResponse)(nil),                        // 3: google.ads.googleads.v20.services.UploadCallConversionsResponse
	(*ClickConversion)(nil),                                      // 4: google.ads.googleads.v20.services.ClickConversion
	(*CallConversion)(nil),                                       // 5: google.ads.googleads.v20.services.CallConversion
	(*ExternalAttributionData)(nil),                              // 6: google.ads.googleads.v20.services.ExternalAttributionData
	(*ClickConversionResult)(nil),                                // 7: google.ads.googleads.v20.services.ClickConversionResult
	(*CallConversionResult)(nil),                                 // 8: google.ads.googleads.v20.services.CallConversionResult
	(*CustomVariable)(nil),                                       // 9: google.ads.googleads.v20.services.CustomVariable
	(*CartData)(nil),                                             // 10: google.ads.googleads.v20.services.CartData
	(*SessionAttributeKeyValuePair)(nil),                         // 11: google.ads.googleads.v20.services.SessionAttributeKeyValuePair
	(*SessionAttributesKeyValuePairs)(nil),                       // 12: google.ads.googleads.v20.services.SessionAttributesKeyValuePairs
	(*CartData_Item)(nil),                                        // 13: google.ads.googleads.v20.services.CartData.Item
	(*status.Status)(nil),                                        // 14: google.rpc.Status
	(*common.UserIdentifier)(nil),                                // 15: google.ads.googleads.v20.common.UserIdentifier
	(enums.ConversionEnvironmentEnum_ConversionEnvironment)(0),   // 16: google.ads.googleads.v20.enums.ConversionEnvironmentEnum.ConversionEnvironment
	(*common.Consent)(nil),                                       // 17: google.ads.googleads.v20.common.Consent
	(enums.ConversionCustomerTypeEnum_ConversionCustomerType)(0), // 18: google.ads.googleads.v20.enums.ConversionCustomerTypeEnum.ConversionCustomerType
}
var file_google_ads_googleads_v20_services_conversion_upload_service_proto_depIdxs = []int32{
	4,  // 0: google.ads.googleads.v20.services.UploadClickConversionsRequest.conversions:type_name -> google.ads.googleads.v20.services.ClickConversion
	14, // 1: google.ads.googleads.v20.services.UploadClickConversionsResponse.partial_failure_error:type_name -> google.rpc.Status
	7,  // 2: google.ads.googleads.v20.services.UploadClickConversionsResponse.results:type_name -> google.ads.googleads.v20.services.ClickConversionResult
	5,  // 3: google.ads.googleads.v20.services.UploadCallConversionsRequest.conversions:type_name -> google.ads.googleads.v20.services.CallConversion
	14, // 4: google.ads.googleads.v20.services.UploadCallConversionsResponse.partial_failure_error:type_name -> google.rpc.Status
	8,  // 5: google.ads.googleads.v20.services.UploadCallConversionsResponse.results:type_name -> google.ads.googleads.v20.services.CallConversionResult
	6,  // 6: google.ads.googleads.v20.services.ClickConversion.external_attribution_data:type_name -> google.ads.googleads.v20.services.ExternalAttributionData
	9,  // 7: google.ads.googleads.v20.services.ClickConversion.custom_variables:type_name -> google.ads.googleads.v20.services.CustomVariable
	10, // 8: google.ads.googleads.v20.services.ClickConversion.cart_data:type_name -> google.ads.googleads.v20.services.CartData
	15, // 9: google.ads.googleads.v20.services.ClickConversion.user_identifiers:type_name -> google.ads.googleads.v20.common.UserIdentifier
	16, // 10: google.ads.googleads.v20.services.ClickConversion.conversion_environment:type_name -> google.ads.googleads.v20.enums.ConversionEnvironmentEnum.ConversionEnvironment
	17, // 11: google.ads.googleads.v20.services.ClickConversion.consent:type_name -> google.ads.googleads.v20.common.Consent
	18, // 12: google.ads.googleads.v20.services.ClickConversion.customer_type:type_name -> google.ads.googleads.v20.enums.ConversionCustomerTypeEnum.ConversionCustomerType
	12, // 13: google.ads.googleads.v20.services.ClickConversion.session_attributes_key_value_pairs:type_name -> google.ads.googleads.v20.services.SessionAttributesKeyValuePairs
	9,  // 14: google.ads.googleads.v20.services.CallConversion.custom_variables:type_name -> google.ads.googleads.v20.services.CustomVariable
	17, // 15: google.ads.googleads.v20.services.CallConversion.consent:type_name -> google.ads.googleads.v20.common.Consent
	15, // 16: google.ads.googleads.v20.services.ClickConversionResult.user_identifiers:type_name -> google.ads.googleads.v20.common.UserIdentifier
	13, // 17: google.ads.googleads.v20.services.CartData.items:type_name -> google.ads.googleads.v20.services.CartData.Item
	11, // 18: google.ads.googleads.v20.services.SessionAttributesKeyValuePairs.key_value_pairs:type_name -> google.ads.googleads.v20.services.SessionAttributeKeyValuePair
	0,  // 19: google.ads.googleads.v20.services.ConversionUploadService.UploadClickConversions:input_type -> google.ads.googleads.v20.services.UploadClickConversionsRequest
	2,  // 20: google.ads.googleads.v20.services.ConversionUploadService.UploadCallConversions:input_type -> google.ads.googleads.v20.services.UploadCallConversionsRequest
	1,  // 21: google.ads.googleads.v20.services.ConversionUploadService.UploadClickConversions:output_type -> google.ads.googleads.v20.services.UploadClickConversionsResponse
	3,  // 22: google.ads.googleads.v20.services.ConversionUploadService.UploadCallConversions:output_type -> google.ads.googleads.v20.services.UploadCallConversionsResponse
	21, // [21:23] is the sub-list for method output_type
	19, // [19:21] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v20_services_conversion_upload_service_proto_init() }
func file_google_ads_googleads_v20_services_conversion_upload_service_proto_init() {
	if File_google_ads_googleads_v20_services_conversion_upload_service_proto != nil {
		return
	}
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[4].OneofWrappers = []any{
		(*ClickConversion_SessionAttributesEncoded)(nil),
		(*ClickConversion_SessionAttributesKeyValuePairs)(nil),
	}
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[5].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[7].OneofWrappers = []any{}
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDesc), len(file_google_ads_googleads_v20_services_conversion_upload_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_ads_googleads_v20_services_conversion_upload_service_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v20_services_conversion_upload_service_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v20_services_conversion_upload_service_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v20_services_conversion_upload_service_proto = out.File
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_goTypes = nil
	file_google_ads_googleads_v20_services_conversion_upload_service_proto_depIdxs = nil
}
